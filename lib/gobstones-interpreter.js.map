{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 0d29a457d14ae87582ff","webpack:///./src/i18n.js","webpack:///./src/exceptions.js","webpack:///./src/ast.js","webpack:///./src/runtime.js","webpack:///./src/value.js","webpack:///./src/reader.js","webpack:///./src/token.js","webpack:///./src/symtable.js","webpack:///./src/instruction.js","webpack:///./src/index.js","webpack:///./src/bigint.js","webpack:///./src/runner.js","webpack:///./src/parser.js","webpack:///./src/lexer.js","webpack:///./src/linter.js","webpack:///./src/compiler.js","webpack:///./src/vm.js","webpack:///./src/board_formats.js","webpack:///external \"fs\""],"names":["i18n","i18nWithLanguage","i18nPosition","laPalabraClave","palabra","masculino","n","singular","plural","toString","LOCALE_ES","symbol","pragmaName","expected","found","op1","op2","pos1","pos2","name","constructorName","fieldName","posFunction","posField","oldCat","oldPos","newCat","newPos","type","received","constructorNames","msg","length","join","arity","expectedType","patternType","variableName","routineName","valueTag","constructorNameExpected","constructorNameReceived","oldType","newType","index","receivedType","size","fieldNames","missingFieldName","primitiveName","parameterIndex","expectedTypes","type1","type2","millisecs","dirName","strings","map","s","filename","line","column","substring","LOCALE_EN","key","CURRENT_LANGUAGE","dictionaries","message","code","thunk","Error","oldLanguage","position","GbsInterpreterException","startPos","endPos","errorType","reason","args","row","isGobstonesException","apply","GbsWarning","GbsSyntaxError","GbsRuntimeError","N_Main","Symbol","for","N_DefProgram","N_DefInteractiveProgram","N_DefProcedure","N_DefFunction","N_DefType","N_StmtBlock","N_StmtReturn","N_StmtIf","N_StmtRepeat","N_StmtForeach","N_StmtWhile","N_StmtSwitch","N_StmtAssignVariable","N_StmtAssignTuple","N_StmtProcedureCall","N_PatternWildcard","N_PatternStructure","N_PatternTuple","N_PatternTimeout","N_ExprVariable","N_ExprConstantNumber","N_ExprConstantString","N_ExprList","N_ExprRange","N_ExprTuple","N_ExprStructure","N_ExprStructureUpdate","N_ExprFunctionCall","N_SwitchBranch","N_FieldBinding","N_ConstructorDeclaration","indent","string","lines","split","push","showASTs","showAST","node","Array","tag","keyFor","children","nodes","res","ASTNode","_tag","_children","_startPos","_endPos","ASTMain","definitions","ASTDefProgram","body","ASTDefInteractiveProgram","branches","ASTDefProcedure","parameters","ASTDefFunction","ASTDefType","typeName","constructorDeclarations","ASTStmtBlock","statements","ASTStmtReturn","result","ASTStmtIf","condition","thenBlock","elseBlock","ASTStmtRepeat","times","ASTStmtForeach","range","ASTStmtWhile","ASTStmtSwitch","subject","ASTSwitchBranch","pattern","ASTStmtAssignVariable","variable","value","ASTStmtAssignTuple","variables","ASTStmtProcedureCall","procedureName","ASTPatternWildcard","ASTPatternStructure","ASTPatternTuple","ASTPatternTimeout","timeout","parseInt","ASTExprVariable","ASTExprConstantNumber","number","ASTExprConstantString","ASTExprList","elements","ASTExprRange","first","second","last","ASTExprTuple","ASTExprStructure","fieldBindings","names","fieldBinding","ASTExprStructureUpdate","original","ASTExprFunctionCall","functionName","ASTFieldBinding","ASTConstructorDeclaration","boolFromValue","fail","boolEnum","colorEnum","dirEnum","keyEventEnum","modifiers","charKeys","specialKeys","symbolKeys","arrowKeys","keys","concat","eventNames","modifier","KEY_EVENT_ENUM","eventEnum","toEnum","enumeration","indexOf","fromEnum","dirOpposite","dirNext","dirPrev","colorNext","colorName","colorPrev","RuntimeState","_width","_height","_board","x","y","_emptyCell","_head","newState","cell","jboard","width","height","head","board","asNumber","add","le","sub","canMove","delta","_deltaForDirection","PrimitiveOperation","argumentTypes","argumentValidator","implementation","_argumentTypes","_argumentValidator","_implementation","globalState","typeAny","typeInteger","typeString","typeBool","typeListAny","valueFromBool","bool","typeColor","valueFromColor","colorFromValue","typeDir","valueFromDir","dirFromValue","noValidation","isInteger","isBool","isColor","isDir","TYPES_WITH_OPPOSITE","TYPES_WITH_ORDER","enumIndex","genericLE","a","b","indexA","indexB","genericGE","ge","genericLT","lt","genericGT","gt","genericNext","genericPrev","genericOpposite","negate","validateTypeAmong","types","typeStrings","validateCompatibleTypes","RuntimePrimitives","_primitiveTypes","_primitiveProcedures","_primitiveFunctions","boolName","eventName","color","putStone","numStones","removeStone","dir","move","goToEdge","emptyBoardContents","errMsg","current","list","num","mul","eq","div","mod","equal","append","tail","init","typeNames","procedureNames","functionNames","joinTypes","Ty_Any","Ty_Integer","Ty_String","Ty_Tuple","Ty_List","Ty_Structure","Type","TypeAny","TypeInteger","TypeString","TypeTuple","componentTypes","_componentTypes","t","TypeList","contentType","_contentType","TypeStructure","cases","_typeName","_cases","caseStrings","sortedKeys","fieldTypes","fieldStrings","qualifiedConstructor","joinTupleTypes","joinListTypes","joinStructureTypes","joinFields","joinedComponents","i","t1","t2","tj","joinedContent","joinedCases","joinCommon","typeA","typeB","joinedFields","fields1","fields2","checkIncluded","fieldsA","fieldsB","joinedTypes","dictionary","sort","V_Integer","V_String","V_Tuple","V_List","V_Structure","Value","ValueInteger","_number","other","subtract","multiply","z","abs","divide","inc","q","leq","geq","ValueString","_string","chr","ValueTuple","components","_components","_type","_inferType","component","ValueList","_elements","element","allElements","elem","ValueStructure","fields","_constructorName","_fields","newFields","newStructure","_clone","SourceReader","_filename","_index","_line","_column","_regions","r","peek","_","consumeCharacter","consumeInvisibleCharacter","j","region","slice","UnknownPosition","MultifileReader","input","_filenames","Object","_input","T_EOF","T_NUM","T_STRING","T_UPPERID","T_LOWERID","T_PROGRAM","T_INTERACTIVE","T_PROCEDURE","T_FUNCTION","T_RETURN","T_IF","T_THEN","T_ELSE","T_REPEAT","T_FOREACH","T_IN","T_WHILE","T_SWITCH","T_TO","T_LET","T_NOT","T_DIV","T_MOD","T_TYPE","T_IS","T_RECORD","T_VARIANT","T_CASE","T_FIELD","T_UNDERSCORE","T_TIMEOUT","T_LPAREN","T_RPAREN","T_LBRACE","T_RBRACE","T_LBRACK","T_RBRACK","T_COMMA","T_SEMICOLON","T_RANGE","T_GETS","T_PIPE","T_ARROW","T_ASSIGN","T_EQ","T_NE","T_LE","T_GE","T_LT","T_GT","T_AND","T_OR","T_CONCAT","T_PLUS","T_MINUS","T_TIMES","T_POW","Token","_value","FieldDescriptor","LocalVariable","LocalParameter","LocalIndex","LocalNameDescriptor","category","_category","_position","SymbolTable","_program","_isInteractiveProgram","_procedures","_procedureParameters","_functions","_functionParameters","_types","_typeConstructors","_constructors","_constructorType","_constructorFields","_localNames","isProcedure","isFunction","isType","isConstructor","isField","definition","defProgram","parameter","fieldPos","constructorDeclaration","_declareConstructor","constructorFields","_declareField","localName","setLocalName","I_PushInteger","I_PushString","I_PushVariable","I_SetVariable","I_UnsetVariable","I_Label","I_Jump","I_JumpIfFalse","I_JumpIfStructure","I_JumpIfTuple","I_Call","I_Return","I_MakeTuple","I_MakeList","I_MakeStructure","I_UpdateStructure","I_ReadTupleComponent","I_ReadStructureField","I_ReadStructureFieldPop","I_Add","I_Dup","I_Pop","I_PrimitiveCall","I_SaveState","I_RestoreState","I_TypeCheck","Code","instructions","_instructions","instruction","ip","labelTargets","opcode","label","argToString","arg","Instruction","_opcode","_args","sargs","IPushInteger","IPushString","IPushVariable","ISetVariable","IUnsetVariable","ILabel","IJump","targetLabel","IJumpIfFalse","IJumpIfStructure","IJumpIfTuple","ICall","nargs","IReturn","IMakeTuple","IMakeList","IMakeStructure","IUpdateStructure","IReadTupleComponent","IReadStructureField","IReadStructureFieldPop","IAdd","IDup","IPop","IPrimitiveCall","ISaveState","IRestoreState","ITypeCheck","DEFAULT_INFINITE_LOOP_TIMEOUT","DEFAULT_LANGUAGE","apiboardToState","apiboard","state","load","apiboardFromState","dump","apivalueFromValue","isBoolean","isString","isStructure","GobstonesInterpreterError","exception","detail","on","start","end","ParseError","ExecutionError","NormalExecutionResult","finalBoard","snapshots","returnValue","actualReturnValue","InteractiveExecutionResult","_collectKeyNames","_timeoutValue","onInit","_onInitFunction","onKey","_onKeyFunction","onTimeout","_onTimeoutFunction","runner","symbolTable","program","branch","p","_hasInit","self","language","_onEvent","_hasTimeout","keyCode","eventValue","executeEventWithTimeout","infiniteLoopTimeout","undefined","SnapshotTaker","_runner","_snapshots","callStack","_shouldTakeSnapshot","_snapshot","snapshot","contextNames","stackFrame","routineNameStack","primitives","_noAtomicRoutines","pop","_isRecorded","_isAtomic","ParseResult","isInteractiveProgram","_resultForInteractiveProgram","_resultForProgram","declarations","_collectDeclarations","alias","interpret","snapshotTaker","compile","executeWithTimeoutTakingSnapshots","takeSnapshot","bind","initializeVirtualMachine","allProcedureNames","allFunctionNames","GobstonesInterpreterAPI","config","setLanguage","setInfiniteLoopTimeout","milliseconds","setXGobstonesEnabled","isEnabled","gbb","read","write","parse","sourceCode","initialize","enableLintCheck","lint","Integer","BASE","LOG_BASE","MAX_INT","MAX_INT_ARR","smallToArray","LOG_MAX_INT","Math","log","v","radix","parseValue","parseBase","BigInteger","sign","isSmall","prototype","create","SmallInteger","isPrecise","floor","arrayToSmall","arr","trim","compareAbs","createArray","truncate","ceil","l_a","l_b","carry","base","sum","addAny","addSmall","l","plus","a_l","b_l","borrow","difference","subtractAny","subtractSmall","minus","small","multiplyLong","product","a_i","b_j","multiplySmall","shiftLeft","multiplyKaratsuba","max","d","c","ac","bd","abcd","useKaratsuba","l1","l2","multiplySmallAndArray","_multiplyBySmall","square","a_j","divMod1","divisorMostSignificantDigit","lambda","remainder","divisor","quotientDigit","shift","divModSmall","divMod2","part","guess","xlen","highx","highy","check","unshift","reverse","quotient","divModAny","comparison","qSign","mSign","divmod","over","pow","isEven","modPow","exp","isZero","isPositive","isOdd","compare","Infinity","compareTo","equals","notEquals","neq","greater","lesser","greaterOrEquals","lesserOrEquals","isNegative","isUnit","isDivisibleBy","isBasicPrime","isPrime","nPrev","prev","bigInt","isProbablePrime","iterations","randBetween","modInv","zero","newT","one","newR","lastT","lastR","next","powersOfTwo","powers2Length","highestPower2","shift_isSmall","String","shiftRight","remQuo","bitwise","fn","xSign","ySign","xRem","not","yRem","xBits","yBits","xStop","yStop","and","or","xor","LOBMASK_I","LOBMASK_BI","roughLOB","min","gcd","lcm","low","high","round","random","restricted","top","digit","text","absBase","toLowerCase","test","charCodeAt","isNaN","digits","charCode","parseBaseFromArray","val","stringify","charAt","toBase","minusSign","out","left","str","zeros","valueOf","toJSNumber","parseStringValue","decimalPlace","isValid","parseNumberValue","minusOne","isInstance","fromArray","tok","Runner","_ast","_primitives","_symtable","_newSymtableWithPrimitives","_linter","_code","_vm","_result","runState","initialState","execute","linterCheckId","enabled","enableCheck","executeWithTimeout","snapshotCallback","runWithTimeoutTakingSnapshots","runEventWithTimeout","symtable","defType","_astDefType","procedures","defProcedure","_astDefProcedure","functions","defFunction","_astDefFunction","typeConstructors","constructor","_astConstructorDeclaration","getOperation","field","Infix","InfixL","InfixR","Prefix","PrecedenceLevel","fixity","operators","_fixity","_operators","token","OPERATORS","Parser","_lexer","_nextToken","_currentToken","_parseDefinition","_parseDefProgram","_parseDefInteractiveProgram","_parseDefProcedure","_parseDefFunction","_parseDefType","_match","block","_parseStmtBlock","_parseSwitchBranches","_parseUpperid","_parseLoweridSeq","_parseDefTypeRecord","_parseDefTypeVariant","_parseFieldNames","_matchExpected","_parseConstructorDeclaration","_parseLowerid","statement","_parsePureStatement","_parseStmtReturn","_parseStmtIf","_parseStmtRepeat","_parseStmtForeach","_parseStmtWhile","_parseStmtSwitch","_parseStmtLet","_parseStmtAssignVariable","_parseStmtProcedureCall","_parseStatement","tuple","_parseExprTuple","_parseExpression","_parseStmtAssignTuple","keyfor","_parseDelimitedSeq","_parsePatternWildcard","_parsePatternStructure","_parsePatternTuple","_parsePatternTimeout","_parseExprOperator","level","_parseExprAtom","_parseExprOperatorInfix","_parseExprOperatorInfixL","_parseExprOperatorInfixR","_parseExprOperatorPrefix","isOperator","op","right","result2","inner","_parseExprVariableOrFunctionCall","_parseExprConstantNumber","_parseExprConstantString","_parseExprStructureOrStructureUpdate","_parseExprListOrRange","id","_parseExpressionSeq","_parseStructure","_parseStructureUpdate","fieldName1","value1","fieldBinding1","_parseNonEmptyDelimitedSeq","_parseFieldBinding","_parseExprListRemainder","_parseExprRange","prefix","expressionList","_parseSwitchBranch","_parsePattern","nextToken","tokenTag","tagList","rightDelimiter","separator","parseElement","lowerid","upperid","isWhitespace","isDigit","isAlpha","toUpperCase","isUpper","isLower","isIdent","KEYWORDS","SYMBOLS","leadingZeroes","Lexer","_multifileReader","_reader","readCurrentFile","_warnings","_findNextToken","_readStringWhile","_readStringConstant","_readSymbol","_ignoreWhitespaceAndComments","eof","moreFiles","nextFile","c2","startsWith","consumeString","_ignoreWhitespace","_ignoreComments","_startSingleLineComment","_ignoreSingleLineComment","_evaluatePragma","_readInvisiblePragma","_ignoreMultilineComment","nesting","pragmaDelim","pragma","consumeInvisibleString","_readInvisibleStringUntilDelimiter","delimiter","_emitWarning","beginRegion","endRegion","isBlockWithReturn","stmt","Linter","_enabledLinterChecks","ast","_lintMain","_addDefinitionToSymbolTable","_lintCheck","_lintDefinition","defInteractiveProgram","_lintDefProgram","_lintDefInteractiveProgram","_lintDefProcedure","_lintDefFunction","_lintDefType","_lintStmtBlock","exitScope","_lintSwitchBranches","addNewLocalName","_lintStmtReturn","_lintStmtIf","_lintStmtRepeat","_lintStmtForeach","_lintStmtWhile","_lintStmtSwitch","_lintStmtAssignVariable","_lintStmtAssignTuple","_lintStmtProcedureCall","allowReturn","returnAllowed","_lintStatement","_lintExpression","removeLocalName","_lintPattern","_switchBranchesCheckWildcard","_switchBranchesCheckNoRepeats","_switchBranchesCheckCompatible","_switchBranchesCheckTypeEvent","_switchBranchesCheckTypeNotEvent","_lintSwitchBranchBody","coveredConstructors","coveredTuples","coveredTimeout","_patternType","constructorType","procedureParameters","argument","_lintPatternWildcard","_lintPatternStructure","_lintPatternTuple","_lintPatternTimeout","_failExpectedConstructorButGot","expression","_lintExprVariable","_lintExprConstantNumber","_lintExprConstantString","_lintExprList","_lintExprRange","_lintExprTuple","_lintExprStructure","_lintExprStructureUpdate","_lintExprFunctionCall","_lintExprStructureOrUpdate","_checkStructureTypeNotEvent","_checkStructureNoRepeatedFields","_checkStructureBindingsCorrect","_checkStructureBindingsComplete","declaredFields","seen","functionParameters","Compiler","_nextLabel","_nextVariable","_compileMain","_produce","_compileDefProgram","_compileDefInteractiveProgram","_compileDefProcedure","_compileDefFunction","_compileStatement","_compileMatchSwitchBranches","parameterName","_produceList","_compileStmtBlock","_compileStmtReturn","_compileStmtIf","_compileStmtRepeat","_compileStmtForeach","_compileStmtWhile","_compileStmtSwitch","_compileStmtAssignVariable","_compileStmtAssignTuple","_compileStmtProcedureCall","_compileExpression","labelElse","_freshLabel","labelEnd","labelStart","_freshVariable","pos","branchLabels","_compilePatternCheck","_compilePatternBind","_compilePatternUnbind","anys","_compileStmtProcedureCallPrimitive","_compileStmtProcedureCallUserDefined","_compilePatternCheckWildcard","_compilePatternCheckStructure","_compilePatternCheckTuple","_compilePatternCheckTimeout","_compilePatternBindStructure","_compilePatternBindTuple","_compilePatternUnbindStructure","_compilePatternUnbindTuple","_compileExprVariable","_compileExprConstantNumber","_compileExprConstantString","_compileExprList","_compileExprRange","_compileExprTuple","_compileExprStructure","_compileExprStructureUpdate","_compileExprFunctionCall","_compileExprFunctionCallAnd","_compileExprFunctionCallOr","_compileExprFunctionCallPrimitive","_compileExprFunctionCallUserDefined","_compileExprFunctionCallFieldAccessor","expr1","expr2","produce","RT_ExitProgram","RuntimeCondition","RuntimeExitProgram","Frame","instructionPointer","_routineName","_instructionPointer","_variables","_stack","VirtualMachine","_labelTargets","_callStack","_globalStateStack","_snapshotCallback","runWithTimeout","_currentFrame","pushValue","startTime","Date","getTime","_takeSnapshot","_step","_timeoutIfNeeded","_currentInstruction","at","_stepPushInteger","_stepPushString","_stepPushVariable","_stepSetVariable","_stepUnsetVariable","_stepLabel","_stepJump","_stepJumpIfFalse","_stepJumpIfStructure","_stepJumpIfTuple","_stepCall","_stepReturn","_stepMakeTuple","_stepMakeList","_stepMakeStructure","_stepUpdateStructure","_stepReadTupleComponent","_stepReadStructureField","_stepReadStructureFieldPop","_stepAdd","_stepDup","_stepPop","_stepPrimitiveCall","_stepSaveState","_stepRestoreState","_stepTypeCheck","frame","getVariable","newValue","popValue","oldValue","setVariable","unsetVariable","stackTop","callerFrame","newFrame","stackEmpty","innerFrame","outerFrame","newFieldNames","structure","updateFields","shouldPopStructure","_stepReadStructureFieldGeneric","v1","v2","isOperation","primitive","validateArguments","call","clone","apiboardFromJboard","apiboardToJboard","gbbFromJboard","gbbToJboard","readJboardFromFile","writeJboardToFile","BoardFormat","formatName","description","extension","fromJboard","toJboard","_formatName","_description","_extension","_fromJboard","_toJboard","table","cellO","blue","black","red","green","ca","cn","cr","cv","gsboardFromJboard","gsboard","sizeX","sizeY","JSON","gsboardToJboard","gsBoardString","isNumeric","skipWhitespace","readToken","readN","errmsg","readRange","headDeclared","cellDeclared","colores","hx","hy","cx","cy","colorDeclared","colorId","BOARD_FORMAT_LIST","DEFAULT_FORMAT","BOARD_FORMATS","boardFormat","fileExtension","parts","fileBoardFormat","fmt","fs","require","format","contents","readFileSync","writeFileSync"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;QC8hBgBA,I,GAAAA,I;QAIAC,gB,GAAAA,gB;QAaAC,Y,GAAAA,Y;;AA3mBhB,SAASC,cAAT,CAAwBC,OAAxB,EAAiC;AAC/B,SAAO,uBAAuBA,OAAvB,GAAiC,GAAxC;AACD;;AAED,SAASC,SAAT,CAAmBC,CAAnB,EAAsBC,QAAtB,EAAgCC,MAAhC,EAAwC;AACtC,MAAIF,MAAM,CAAV,EAAa;AACX,WAAO,YAAYC,QAAnB;AACD,GAFD,MAEO,IAAID,MAAM,CAAV,EAAa;AAClB,WAAO,QAAQC,QAAf;AACD,GAFM,MAEA;AACL,WAAOD,EAAEG,QAAF,KAAe,GAAf,GAAqBD,MAA5B;AACD;AACF;;AAED,IAAME,YAAY;;AAEhB;AACA,gBACE,8DAJc;AAKhB,aACE,oEANc;AAOhB,eAAa,YAPG;AAQhB,gBAAc,eARE;AAShB,oBAAkB,mCATF;AAUhB,gBAAc,uBAVE;AAWhB,WAAS,sBAXO;AAYhB,WAAS,WAZO;AAahB,cAAY,qBAbI;AAchB,eAAa,iCAdG;AAehB,eAAa,iCAfG;AAgBhB,eAAaP,eAAe,SAAf,CAhBG;AAiBhB,mBAAiBA,eAAe,aAAf,CAjBD;AAkBhB,iBAAeA,eAAe,WAAf,CAlBC;AAmBhB,gBAAcA,eAAe,UAAf,CAnBE;AAoBhB,cAAYA,eAAe,QAAf,CApBI;AAqBhB,UAAQA,eAAe,IAAf,CArBQ;AAsBhB,YAAUA,eAAe,MAAf,CAtBM;AAuBhB,YAAUA,eAAe,MAAf,CAvBM;AAwBhB,cAAYA,eAAe,QAAf,CAxBI;AAyBhB,eAAaA,eAAe,SAAf,CAzBG;AA0BhB,UAAQA,eAAe,IAAf,CA1BQ;AA2BhB,aAAWA,eAAe,OAAf,CA3BK;AA4BhB,cAAYA,eAAe,QAAf,CA5BI;AA6BhB,UAAQA,eAAe,IAAf,CA7BQ;AA8BhB,WAASA,eAAe,KAAf,CA9BO;AA+BhB,WAASA,eAAe,KAAf,CA/BO;AAgChB,WAASA,eAAe,KAAf,CAhCO;AAiChB,WAASA,eAAe,KAAf,CAjCO;AAkChB,YAAUA,eAAe,MAAf,CAlCM;AAmChB,UAAQA,eAAe,IAAf,CAnCQ;AAoChB,cAAYA,eAAe,QAAf,CApCI;AAqChB,eAAaA,eAAe,SAAf,CArCG;AAsChB,YAAUA,eAAe,MAAf,CAtCM;AAuChB,aAAWA,eAAe,OAAf,CAvCK;AAwChB,kBAAgB,qBAxCA;AAyChB,cAAY,+BAzCI;AA0ChB,cAAY,6BA1CI;AA2ChB,cAAY,2BA3CI;AA4ChB,cAAY,yBA5CI;AA6ChB,cAAY,6BA7CI;AA8ChB,cAAY,2BA9CI;AA+ChB,aAAW,gBA/CK;AAgDhB,iBAAe,uBAhDC;AAiDhB,aAAW,8BAjDK;AAkDhB,YAAU,sCAlDM;AAmDhB,YAAU,0BAnDM;AAoDhB,aAAW,mBApDK;AAqDhB,cAAY,kCArDI;AAsDhB,UAAQ,qCAtDQ;AAuDhB,UAAQ,wCAvDQ;AAwDhB,UAAQ,yBAxDQ;AAyDhB,UAAQ,yBAzDQ;AA0DhB,UAAQ,yBA1DQ;AA2DhB,UAAQ,yBA3DQ;AA4DhB,WAAS,sBA5DO;AA6DhB,UAAQ,sBA7DQ;AA8DhB,cAAY,+CA9DI;AA+DhB,YAAU,2BA/DM;AAgEhB,aAAW,4BAhEK;AAiEhB,aAAW,+BAjEK;AAkEhB,WAAS,+BAlEO;;AAoEhB;AACA,mBAAiB,UArED;AAsEhB,gBAAc,QAtEE;AAuEhB,oBAAkB,WAvEF;;AAyEhB;AACA,eAAa,WA1EG;AA2EhB,cAAY,YA3EI;AA4EhB,aAAW,WA5EK;AA6EhB,YAAU,WA7EM;AA8EhB,iBAAe,gBA9EC;;AAgFhB;AACA,uCACE,6CAlFc;;AAoFhB,qCACE,sEArFc;;AAuFhB,4DACE,mEACC,YAzFa;;AA2FhB,4DACE,kEACC,gBA7Fa;;AA+FhB,0BACE,4BAAUQ,MAAV,EAAkB;AAChB,WAAO,yCAAyCA,MAAzC,GAAkD,IAAzD;AACD,GAlGa;;AAoGhB,0BACE,yBArGc;;AAuGhB,4BACE,8BAAUC,UAAV,EAAsB;AACpB,WAAO,oCAAoCA,UAApC,GAAiD,IAAxD;AACD,GA1Ga;;AA4GhB;AACA,yBACE,yBA9Gc;;AAgHhB,+BACE,gCAAUC,QAAV,EAAoBC,KAApB,EAA2B;AACzB,WAAO,iBAAiBD,QAAjB,GAA4B,KAA5B,GACA,eADA,GACkBC,KADlB,GAC0B,GADjC;AAED,GApHa;;AAsHhB,8CACE,kEACA,0DAxHc;;AA0HhB,iDACE,wEACA,0DA5Hc;;AA8HhB,0CACE,0CAAUC,GAAV,EAAeC,GAAf,EAAoB;AAClB,WAAO,sBACAD,GADA,GACM,KADN,GACcC,GADd,GAEA,gDAFA,GAGA,2BAHP;AAID,GApIa;;AAsIhB,sCACE,sEACA,iEADA,GAEA,+CAzIc;;AA2IhB;AACA,oCACE,qCAAUC,IAAV,EAAgBC,IAAhB,EAAsB;AACpB,WAAO,sCAAsCD,IAAtC,GAA6C,KAA7C,GACA,qCADA,GACwCC,IADxC,GAC+C,GADtD;AAED,GAhJa;;AAkJhB,sCACE,uCAAUC,IAAV,EAAgBF,IAAhB,EAAsBC,IAAtB,EAA4B;AAC1B,WAAO,uBAAuBC,IAAvB,GAA8B,6BAA9B,GACA,KADA,GACQF,IADR,GACe,QADf,GAC0BC,IAD1B,GACiC,GADxC;AAED,GAtJa;;AAwJhB,qCACE,sCAAUC,IAAV,EAAgBF,IAAhB,EAAsBC,IAAtB,EAA4B;AAC1B,WAAO,iBAAiBC,IAAjB,GAAwB,6BAAxB,GACA,KADA,GACQF,IADR,GACe,QADf,GAC0BC,IAD1B,GACiC,GADxC;AAED,GA5Ja;;AA8JhB,iCACE,kCAAUC,IAAV,EAAgBF,IAAhB,EAAsBC,IAAtB,EAA4B;AAC1B,WAAO,cAAcC,IAAd,GAAqB,6BAArB,GACA,KADA,GACQF,IADR,GACe,QADf,GAC0BC,IAD1B,GACiC,GADxC;AAED,GAlKa;;AAoKhB,wCACE,yCAAUC,IAAV,EAAgBF,IAAhB,EAAsBC,IAAtB,EAA4B;AAC1B,WAAO,qBAAqBC,IAArB,GAA4B,6BAA5B,GACA,KADA,GACQF,IADR,GACe,QADf,GAC0BC,IAD1B,GACiC,GADxC;AAED,GAxKa;;AA0KhB,gCACE,iCAAUE,eAAV,EAA2BC,SAA3B,EAAsC;AACpC,WAAO,eAAeA,SAAf,GAA2B,4BAA3B,GACA,uBADA,GAC0BD,eAD1B,GAC4C,IADnD;AAED,GA9Ka;;AAgLhB,yDACE,qDAAUD,IAAV,EAAgBG,WAAhB,EAA6BC,QAA7B,EAAuC;AACrC,WAAO,gBAAgBJ,IAAhB,GAAuB,WAAvB,GACA,sBADA,GACyBG,WADzB,GACuC,KADvC,GAEA,mBAFA,GAEsBC,QAFtB,GAEiC,GAFxC;AAGD,GArLa;;AAuLhB;AACE;;;AAGA,6DA3Lc;;AA6LhB,6CACE,4CAAUJ,IAAV,EAAgB;AACd,WAAO,uBAAuBA,IAAvB,GAA8B,IAA9B,GACA,uCADP;AAED,GAjMa;;AAmMhB,wCACE,wCAAUA,IAAV,EAAgB;AACd,WAAO,iBAAiBA,IAAjB,GAAwB,sCAA/B;AACD,GAtMa;;AAwMhB,8CACE,oEACA,uDA1Mc;;AA4MhB,gCACE,iCAAUA,IAAV,EAAgBK,MAAhB,EAAwBC,MAAxB,EAAgCC,MAAhC,EAAwCC,MAAxC,EAAgD;AAC9C,WAAO,4BAA4BR,IAA5B,GAAmC,sBAAnC,GACA,OADA,GACUK,MADV,GACmB,MADnB,GAC4BC,MAD5B,GACqC,MADrC,GAEA,OAFA,GAEUC,MAFV,GAEmB,MAFnB,GAE4BC,MAF5B,GAEqC,GAF5C;AAGD,GAjNa;;AAmNhB,kDACE,iDAAUR,IAAV,EAAgB;AACd,WAAO,kBAAkBA,IAAlB,GAAyB,mCAAzB,GACA,YADP;AAED,GAvNa;;AAyNhB,0CACE,0CAAUA,IAAV,EAAgBS,IAAhB,EAAsB;AACpB,WAAO,uBAAuBT,IAAvB,GAA8B,sBAA9B,GACA,aADA,GACgBA,IADhB,GACuB,mCADvB,GAEA,YAFA,GAEeS,IAFf,GAEsB,IAF7B;AAGD,GA9Na;;AAgOhB,gCACE,kCAAUT,IAAV,EAAgB;AACd,WAAO,uBAAuBA,IAAvB,GAA8B,qBAArC;AACD,GAnOa;;AAqOhB,+BACE,iCAAUA,IAAV,EAAgB;AACd,WAAO,iBAAiBA,IAAjB,GAAwB,qBAA/B;AACD,GAxOa;;AA0OhB,qCACE,sCAAUA,IAAV,EAAgBN,QAAhB,EAA0BgB,QAA1B,EAAoC;AAClC,WAAO,uBAAuBV,IAAvB,GAA8B,mBAA9B,GACAT,UAAU,gBAAV,EAA4BG,QAA5B,CADA,GAEA,yBAFA,GAGAH,UAAU,eAAV,EAA2BmB,QAA3B,CAHA,GAGuC,GAH9C;AAID,GAhPa;;AAkPhB,oCACE,qCAAUV,IAAV,EAAgBN,QAAhB,EAA0BgB,QAA1B,EAAoC;AAClC,WAAO,iBAAiBV,IAAjB,GAAwB,mBAAxB,GACAT,UAAU,gBAAV,EAA4BG,QAA5B,CADA,GAEA,yBAFA,GAGAH,UAAU,eAAV,EAA2BmB,QAA3B,CAHA,GAGuC,GAH9C;AAID,GAxPa;;AA0PhB,6CACE,6CAAUV,IAAV,EAAgBN,QAAhB,EAA0BgB,QAA1B,EAAoC;AAClC,WAAO,qBAAqBV,IAArB,GAA4B,UAA5B,GACAT,UAAU,YAAV,EAAwBG,QAAxB,CADA,GAEA,wBAFA,GAGAH,UAAU,gBAAV,EAA4BmB,QAA5B,CAHA,GAGwC,GAH/C;AAID,GAhQa;;AAkQhB,qCACE,qCAAUV,IAAV,EAAgBW,gBAAhB,EAAkC;AAChC,QAAIC,YAAJ;AACA,QAAID,iBAAiBE,MAAjB,KAA4B,CAAhC,EAAmC;AACjCD,YAAM,2BAAN;AACD,KAFD,MAEO,IAAID,iBAAiBE,MAAjB,KAA4B,CAAhC,EAAmC;AACxCD,YAAM,4BAA4BD,iBAAiB,CAAjB,CAA5B,GAAkD,IAAxD;AACD,KAFM,MAEA;AACLC,YAAM,6BACAD,iBAAiBG,IAAjB,CAAsB,IAAtB,CADA,GAC8B,IADpC;AAED;AACD,WAAO,qBAAqBd,IAArB,GAA4B,sBAA5B,GACA,aADA,GACgBA,IADhB,GACuB,4BADvB,GAEAY,GAFP;AAGD,GAhRa;;AAkRhB,0CACE,0CAAUZ,IAAV,EAAgB;AACd,WAAO,qBAAqBA,IAArB,GAA4B,sBAA5B,GACA,aADA,GACgBA,IADhB,GACuB,qCAD9B;AAED,GAtRa;;AAwRhB,mCACE,qCAAUA,IAAV,EAAgB;AACd,WAAO,qBAAqBA,IAArB,GAA4B,qBAAnC;AACD,GA3Ra;;AA6RhB,4CACE,yDA9Rc;;AAgShB,kDACE,kDAAUA,IAAV,EAAgB;AACd,WAAO,kDAAkDA,IAAlD,GAAyD,IAAhE;AACD,GAnSa;;AAqShB,kDACE,iDAAUe,KAAV,EAAiB;AACf,WAAO,gDAAgDA,MAAMzB,QAAN,EAAhD,GACA,eADP;AAED,GAzSa;;AA2ShB,8CACE,0CA5Sc;;AA8ShB,wCACE,uCAAU0B,YAAV,EAAwBC,WAAxB,EAAqC;AACnC,WAAO,uDACA,iCADA,GACoCD,YADpC,GACmD,IADnD,GAEA,mBAFA,GAEsBC,WAFtB,GAEoC,IAF3C;AAGD,GAnTa;;AAqThB,2DACE,6DAtTc;;AAwThB,kDACE,oDAzTc;;AA2ThB,kDACE,kDAAUhB,eAAV,EAA2BC,SAA3B,EAAsC;AACpC,WAAO,eAAeA,SAAf,GAA2B,qBAA3B,GACA,oCADA,GACuCD,eADvC,GACyD,IADhE;AAED,GA/Ta;;AAiUhB,iDACE,iDAAUA,eAAV,EAA2BC,SAA3B,EAAsC;AACpC,WAAO,eAAeA,SAAf,GAA2B,0BAA3B,GACA,uBADA,GAC0BD,eAD1B,GAC4C,IADnD;AAED,GArUa;;AAuUhB,iDACE,iDAAUA,eAAV,EAA2BC,SAA3B,EAAsC;AACpC,WAAO,iCAAiCA,SAAjC,GAA6C,IAA7C,GACA,mBADA,GACsBD,eADtB,GACwC,IAD/C;AAED,GA3Ua;;AA6UhB,sDACE,oDAAUA,eAAV,EAA2B;AACzB,WAAO,qBAAqBA,eAArB,GAAuC,qBAAvC,GACA,sDADA,GAEA,4DAFA,GAGA,cAHP;AAID,GAnVa;;AAqVhB;AACA,+BACE,iCAAUiB,YAAV,EAAwB;AACtB,WAAO,kBAAkBA,YAAlB,GAAiC,qBAAxC;AACD,GAzVa;;AA2VhB,8BACE,+BAAUC,WAAV,EAAuB;AACrB,WAAO,6BAA6BA,WAA7B,GAA2C,IAAlD;AACD,GA9Va;;AAgWhB,uCACE,uCAAUlB,eAAV,EAA2BmB,QAA3B,EAAqC;AACnC,WAAO,2CACA,sBADA,GACyBnB,eADzB,GAC2C,KAD3C,GAEA,kBAFA,GAEqBmB,QAFrB,GAEgC,GAFvC;AAGD,GArWa;;AAuWhB,yCACE,yCAAUC,uBAAV,EAAmCC,uBAAnC,EAA4D;AAC1D,WAAO,2CACA,sBADA,GAEAD,uBAFA,GAE0B,KAF1B,GAGA,kCAHA,GAIAC,uBAJA,GAI0B,IAJjC;AAKD,GA9Wa;;AAgXhB,6CACE,6CAAUJ,YAAV,EAAwBK,OAAxB,EAAiCC,OAAjC,EAA0C;AACxC,WAAO,kBAAkBN,YAAlB,GAAiC,IAAjC,GACA,4BADA,GAC+BK,OAD/B,GACyC,IADzC,GAEA,0CAFA,GAE6CC,OAF7C,GAEuD,IAF9D;AAGD,GArXa;;AAuXhB,gDACE,+CAAUC,KAAV,EAAiBF,OAAjB,EAA0BC,OAA1B,EAAmC;AACjC,WAAO,gEACA,4BADA,GAC+BD,OAD/B,GACyC,IADzC,GAEA,kCAFA,GAEqCE,MAAMnC,QAAN,EAFrC,GAEwD,GAFxD,GAGA,aAHA,GAGgBkC,OAHhB,GAG0B,GAHjC;AAID,GA7Xa;;AA+XhB,mDACE,kDAAUtB,SAAV,EAAqBqB,OAArB,EAA8BC,OAA9B,EAAuC;AACrC,WAAO,eAAetB,SAAf,GAA2B,eAA3B,GAA6CqB,OAA7C,GAAuD,IAAvD,GACA,iDADA,GACoDC,OADpD,GAC8D,GADrE;AAED,GAnYa;;AAqYhB,yCACE,wCAAUE,YAAV,EAAwB;AACtB,WAAO,oDACA,UADA,GACaA,YADb,GAC4B,GADnC;AAED,GAzYa;;AA2YhB,0CACE,yCAAUC,IAAV,EAAgBF,KAAhB,EAAuB;AACrB,WAAO,4BACA,wBADA,GAC2BE,KAAKrC,QAAL,EAD3B,GAC6C,KAD7C,GAEA,eAFA,GAEkBmC,MAAMnC,QAAN,EAFlB,GAEqC,GAF5C;AAGD,GAhZa;;AAkZhB,6CACE,4CAAUoC,YAAV,EAAwB;AACtB,WAAO,yDACA,UADA,GACaA,YADb,GAC4B,GADnC;AAED,GAtZa;;AAwZhB,wCACE,wCAAUE,UAAV,EAAsBC,gBAAtB,EAAwC;AACtC,WAAO,sCAAsCA,gBAAtC,GAAyD,KAAzD,GACA,mBADA,GACsBD,WAAWd,IAAX,CAAgB,IAAhB,CADtB,GAC8C,IADrD;AAED,GA5Za;;AA8ZhB,qCACE,qCAAUgB,aAAV,EAAyB;AACvB,WAAO,6BAA6BA,aAA7B,GAA6C,IAA7C,GACA,iCADP;AAED,GAlaa;;AAoahB,qCACE,sCAAU9B,IAAV,EAAgBN,QAAhB,EAA0BgB,QAA1B,EAAoC;AAClC,WAAO,mBAAmBV,IAAnB,GAA0B,mBAA1B,GACAT,UAAU,gBAAV,EAA4BG,QAA5B,CADA,GAEA,yBAFA,GAGAH,UAAU,eAAV,EAA2BmB,QAA3B,CAHA,GAGuC,GAH9C;AAID,GA1aa;;AA4ahB,6CACE,6CAAUV,IAAV,EAAgB+B,cAAhB,EAAgCf,YAAhC,EAA8CU,YAA9C,EAA4D;AAC1D,WAAO,mBAAmBK,eAAezC,QAAf,EAAnB,GAA+C,GAA/C,GACA,mBADA,GACsBU,IADtB,GAC6B,IAD7B,GAEA,sBAFA,GAEyBgB,YAFzB,GAEwC,GAFxC,GAGA,+BAHA,GAGkCU,YAHlC,GAGiD,GAHxD;AAID,GAlba;;AAobhB,2CACE,yCAAUV,YAAV,EAAwBU,YAAxB,EAAsC;AACpC,WAAO,kCAAkCV,YAAlC,GAAiD,GAAjD,GACA,mCADA,GACsCU,YADtC,GACqD,GAD5D;AAED,GAxba;;AA0bhB,gDACE,6CAAUM,aAAV,EAAyBN,YAAzB,EAAuC;AACrC,WAAO,6DACAM,cAAclB,IAAd,CAAmB,IAAnB,CADA,GAEA,qCAFA,GAEwCY,YAFxC,GAEuD,GAF9D;AAGD,GA/ba;;AAichB,qDACE,mDAAUO,KAAV,EAAiBC,KAAjB,EAAwB;AACtB,WAAO,qDACA,sBADA,GACyBD,KADzB,GACiC,GADjC,GAEA,uBAFA,GAE0BC,KAF1B,GAEkC,GAFzC;AAGD,GAtca;;AAwchB,kCACE,qEAzcc;;AA2chB,kCACE,+BA5cc;;AA8chB,iCACE,8BA/cc;;AAidhB,oBACE,uBAAUC,SAAV,EAAqB;AACnB,WAAO,6CACAA,UAAU7C,QAAV,EADA,GACuB,KAD9B;AAED,GArda;;AAudhB;AACA,2BACE,4BAAU8C,OAAV,EAAmB;AACjB,WAAO,0CAA0CA,OAA1C,GACA,2BADP;AAED,GA5da;;AA8dhB,gCACE,iCAAUA,OAAV,EAAmB;AACjB,WAAO,2CAA2CA,OAA3C,GACA,gCADP;AAED,GAlea;;AAoehB;;AAEA,kBAAgB,QAteA;AAuehB,iBAAe,QAveC;AAwehB,gBAAc,OAxeE;AAyehB,eAAa,MAzeG;;AA2ehB,gBAAc,OA3eE;AA4ehB,eAAa,MA5eG;AA6ehB,kBAAgB,SA7eA;;AA+ehB,eAAa,MA/eG;AAgfhB,gBAAc,OAhfE;AAifhB,eAAa,MAjfG;;AAmfhB,gBAAc,OAnfE;AAofhB,iBAAe,MApfC;AAqfhB,iBAAe,OArfC;AAsfhB,iBAAe,MAtfC;AAufhB,iBAAe,OAvfC;;AAyfhB,cAAY,KAzfI;AA0fhB,eAAa,OA1fG;AA2fhB,eAAa,MA3fG;AA4fhB,eAAa,KA5fG;AA6fhB,eAAa,OA7fG;;AA+fhB,mBAAiB,OA/fD;AAggBhB,sBAAoB,OAhgBJ;AAigBhB,eAAa,OAjgBG;AAkgBhB,mBAAiB,WAlgBD;AAmgBhB,6BAA2B,eAngBX;AAogBhB,oBAAkB,YApgBF;AAqgBhB,oBAAkB,YArgBF;AAsgBhB,kBAAgB,YAtgBA;AAugBhB,eAAa,WAvgBG;AAwgBhB,eAAa,QAxgBG;AAygBhB,mBAAiB,SAzgBD;AA0gBhB,kBAAgB,SA1gBA;AA2gBhB,kBAAgB,SA3gBA;AA4gBhB,mBAAiB,UA5gBD;AA6gBhB,mBAAiB,UA7gBD;AA8gBhB,iBAAe,QA9gBC;AA+gBhB,iBAAe,QA/gBC;;AAihBhB,eAAa,SAjhBG;AAkhBhB,eAAa,OAlhBG;AAmhBhB,eAAa,QAnhBG;AAohBhB,eAAa,UAphBG;;AAshBhB;AACA,mBACE,qBAAUC,OAAV,EAAmB;AACjB,WAAO,6CACAA,QAAQC,GAAR,CAAY;AAAA,aAAK,OAAOC,CAAZ;AAAA,KAAZ,EAA2BzB,IAA3B,CAAgC,IAAhC,CADP;AAED,GA3hBa;AA4hBhB,gBACE,kBAAU0B,QAAV,EAAoBC,IAApB,EAA0BC,MAA1B,EAAkC;AAChC,WAAOF,WAAW,GAAX,GAAiBC,KAAKnD,QAAL,EAAjB,GAAmC,GAAnC,GAAyCoD,OAAOpD,QAAP,EAAhD;AACD,GA/hBa;AAgiBhB,oBACE,qBAAUH,CAAV,EAAa;AACX,WAAOD,UAAUC,CAAV,EAAa,WAAb,EAA0B,YAA1B,CAAP;AACD,GAniBa;AAoiBhB,mBACE,oBAAUA,CAAV,EAAa;AACX,WAAOD,UAAUC,CAAV,EAAa,WAAb,EAA0B,YAA1B,CAAP;AACD,GAviBa;AAwiBhB,gBACE,iBAAUA,CAAV,EAAa;AACX,WAAOD,UAAUC,CAAV,EAAa,OAAb,EAAsB,QAAtB,CAAP;AACD,GA3iBa;AA4iBhB,oBACE,qBAAU8B,YAAV,EAAuB;AACrB,QAAIA,iBAAgB,OAApB,EAA6B;AAC3B,aAAO,iCAAP;AACD,KAFD,MAEO,IAAIA,aAAY0B,SAAZ,CAAsB,CAAtB,EAAyB,CAAzB,MAAgC,SAApC,EAA+C;AACpD,aAAO,cAAc1B,aAAY0B,SAAZ,CAAsB,CAAtB,CAAd,GAAyC,cAAhD;AACD,KAFM,MAEA;AACL,aAAO1B,YAAP;AACD;AACF;AArjBa,CAAlB;;AAwjBA;;AAEA;AACA,IAAM2B,YAAY,EAAlB;AACA,KAAK,IAAIC,GAAT,IAAgBtD,SAAhB,EAA2B;AACzBqD,YAAUC,GAAV,IAAiBtD,UAAUsD,GAAV,CAAjB;AACD;AACDD,UAAU,WAAV,IAAyB,OAAzB;AACAA,UAAU,WAAV,IAAyB,MAAzB;AACAA,UAAU,WAAV,IAAyB,OAAzB;AACAA,UAAU,WAAV,IAAyB,MAAzB;AACA;;AAEA,IAAIE,mBAAmB,IAAvB;;AAEA,IAAIC,eAAe;AACjB,QAAMxD,SADW;AAEjB,QAAMqD;AAFW,CAAnB;;AAKO,SAAS/D,IAAT,CAAcmE,OAAd,EAAuB;AAC5B,SAAOD,aAAaD,gBAAb,EAA+BE,OAA/B,CAAP;AACD;;AAEM,SAASlE,gBAAT,CAA0BmE,IAA1B,EAAgCC,KAAhC,EAAuC;AAC5C,MAAI,EAAED,QAAQF,YAAV,CAAJ,EAA6B;AAC3B,UAAMI,MAAM,2BAA2BF,IAAjC,CAAN;AACD;AACD,MAAIG,cAAcN,gBAAlB;AACAA,qBAAmBG,IAAnB;AACA,MAAI;AACF,WAAOC,OAAP;AACD,GAFD,SAEU;AACRJ,uBAAmBM,WAAnB;AACD;AACF;;AAEM,SAASrE,YAAT,CAAsBsE,QAAtB,EAAgC;AACrC,SAAOxE,KAAK,YAAL,EACEwE,SAASb,QADX,EAEEa,SAASZ,IAFX,EAGEY,SAASX,MAHX,CAAP;AAKD,C;;;;;;;;;;;;;;AClnBD;;;;;;;;AAEA;IACaY,uB,WAAAA,uB;;;AACX;AACA,mCAAYC,QAAZ,EAAsBC,MAAtB,EAA8BC,SAA9B,EAAyCC,MAAzC,EAAiDC,IAAjD,EAAuD;AAAA;;AAAA,kJAC/CD,MAD+C,EACvCH,SAASf,QAD8B,EACpBe,SAASK,GADW;;AAErD,UAAKC,oBAAL,GAA4B,IAA5B;AACA,UAAKN,QAAL,GAAgBA,QAAhB;AACA,UAAKC,MAAL,GAAcA,MAAd;AACA,UAAKE,MAAL,GAAcA,MAAd;AACA,UAAKC,IAAL,GAAYA,IAAZ;;AAEA,UAAKX,OAAL,GAAe,gBAAKS,YAAY,GAAZ,GAAkBC,MAAvB,CAAf;AACA,QAAIC,KAAK9C,MAAL,GAAc,CAAd,IAAmB,OAAO,MAAKmC,OAAZ,KAAwB,UAA/C,EAA2D;AACzD,YAAKA,OAAL,GAAe,MAAKA,OAAL,CAAac,KAAb,CAAmB,IAAnB,EAAyBH,IAAzB,CAAf;AACD;AAXoD;AAYtD;;;EAd0CR,K;;IAiBhCY,U,WAAAA,U;;;AACX,sBAAYR,QAAZ,EAAsBC,MAAtB,EAA8BE,MAA9B,EAAsCC,IAAtC,EAA4C;AAAA;;AAAA,mHACpCJ,QADoC,EAC1BC,MAD0B,EAClB,SADkB,EACPE,MADO,EACCC,IADD;AAE3C;;;EAH6BL,uB;;IAMnBU,c,WAAAA,c;;;AACX,0BAAYT,QAAZ,EAAsBC,MAAtB,EAA8BE,MAA9B,EAAsCC,IAAtC,EAA4C;AAAA;;AAAA,2HACpCJ,QADoC,EAC1BC,MAD0B,EAClB,QADkB,EACRE,MADQ,EACAC,IADA;AAE3C;;;EAHiCL,uB;;IAMvBW,e,WAAAA,e;;;AACX,2BAAYV,QAAZ,EAAsBC,MAAtB,EAA8BE,MAA9B,EAAsCC,IAAtC,EAA4C;AAAA;;AAAA,6HACpCJ,QADoC,EAC1BC,MAD0B,EAClB,QADkB,EACRE,MADQ,EACAC,IADA;AAE3C;;;EAHkCL,uB;;;;;;;;;;;;;;;;AChCrC;;AACA;;;;;;;;AAEO,IAAMY,0BAASC,OAAOC,GAAP,CAAW,QAAX,CAAf;AACP;AACO,IAAMC,sCAAeF,OAAOC,GAAP,CAAW,cAAX,CAArB;AACA,IAAME,4DAA0BH,OAAOC,GAAP,CAAW,yBAAX,CAAhC;AACA,IAAMG,0CAAiBJ,OAAOC,GAAP,CAAW,gBAAX,CAAvB;AACA,IAAMI,wCAAgBL,OAAOC,GAAP,CAAW,eAAX,CAAtB;AACA,IAAMK,gCAAYN,OAAOC,GAAP,CAAW,WAAX,CAAlB;AACP;AACO,IAAMM,oCAAcP,OAAOC,GAAP,CAAW,aAAX,CAApB;AACA,IAAMO,sCAAeR,OAAOC,GAAP,CAAW,cAAX,CAArB;AACA,IAAMQ,8BAAWT,OAAOC,GAAP,CAAW,UAAX,CAAjB;AACA,IAAMS,sCAAeV,OAAOC,GAAP,CAAW,cAAX,CAArB;AACA,IAAMU,wCAAgBX,OAAOC,GAAP,CAAW,eAAX,CAAtB;AACA,IAAMW,oCAAcZ,OAAOC,GAAP,CAAW,aAAX,CAApB;AACA,IAAMY,sCAAeb,OAAOC,GAAP,CAAW,cAAX,CAArB;AACA,IAAMa,sDAAuBd,OAAOC,GAAP,CAAW,sBAAX,CAA7B;AACA,IAAMc,gDAAoBf,OAAOC,GAAP,CAAW,mBAAX,CAA1B;AACA,IAAMe,oDAAsBhB,OAAOC,GAAP,CAAW,qBAAX,CAA5B;AACP;AACO,IAAMgB,gDAAoBjB,OAAOC,GAAP,CAAW,mBAAX,CAA1B;AACA,IAAMiB,kDAAqBlB,OAAOC,GAAP,CAAW,oBAAX,CAA3B;AACA,IAAMkB,0CAAiBnB,OAAOC,GAAP,CAAW,gBAAX,CAAvB;AACA,IAAMmB,8CAAmBpB,OAAOC,GAAP,CAAW,kBAAX,CAAzB;AACP;AACO,IAAMoB,0CAAiBrB,OAAOC,GAAP,CAAW,gBAAX,CAAvB;AACA,IAAMqB,sDAAuBtB,OAAOC,GAAP,CAAW,sBAAX,CAA7B;AACA,IAAMsB,sDAAuBvB,OAAOC,GAAP,CAAW,sBAAX,CAA7B;AACA,IAAMuB,kCAAaxB,OAAOC,GAAP,CAAW,YAAX,CAAnB;AACA,IAAMwB,oCAAczB,OAAOC,GAAP,CAAW,aAAX,CAApB;AACA,IAAMyB,oCAAc1B,OAAOC,GAAP,CAAW,aAAX,CAApB;AACA,IAAM0B,4CAAkB3B,OAAOC,GAAP,CAAW,iBAAX,CAAxB;AACA,IAAM2B,wDAAwB5B,OAAOC,GAAP,CAAW,uBAAX,CAA9B;AACA,IAAM4B,kDAAqB7B,OAAOC,GAAP,CAAW,oBAAX,CAA3B;AACP;AACO,IAAM6B,0CAAiB9B,OAAOC,GAAP,CAAW,gBAAX,CAAvB;AACP;AACO,IAAM8B,0CAAiB/B,OAAOC,GAAP,CAAW,gBAAX,CAAvB;AACP;AACO,IAAM+B,8DAA2BhC,OAAOC,GAAP,CAAW,0BAAX,CAAjC;;AAEP;;AAEA,SAASgC,MAAT,CAAgBC,MAAhB,EAAwB;AACtB,MAAIC,QAAQ,EAAZ;AADsB;AAAA;AAAA;;AAAA;AAEtB,yBAAiBD,OAAOE,KAAP,CAAa,IAAb,CAAjB,8HAAqC;AAAA,UAA5B9D,IAA4B;;AACnC6D,YAAME,IAAN,CAAW,OAAO/D,IAAlB;AACD;AAJqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKtB,SAAO6D,MAAMxF,IAAN,CAAW,IAAX,CAAP;AACD;;AAED,IAAI2F,iBAAJ,C,CAAc;;AAEd,SAASC,OAAT,CAAiBC,IAAjB,EAAuB;AACrB,MAAIA,SAAS,IAAb,EAAmB;AACjB,WAAO,MAAP;AACD,GAFD,MAEO,IAAIA,gBAAgBC,KAApB,EAA2B;AAChC,WAAO,QAAQH,SAASE,IAAT,EAAe7F,IAAf,CAAoB,KAApB,CAAR,GAAqC,KAA5C;AACD,GAFM,MAEA,IAAI6F,4BAAJ,EAA2B;AAChC,WAAOA,KAAKrH,QAAL,EAAP;AACD,GAFM,MAEA;AACL,QAAIuH,MAAM1C,OAAO2C,MAAP,CAAcH,KAAKE,GAAnB,EAAwBlE,SAAxB,CAAkC,CAAlC,CAAV;AACA,WAAOkE,MAAM,KAAN,GAAcJ,SAASE,KAAKI,QAAd,EAAwBjG,IAAxB,CAA6B,KAA7B,CAAd,GAAoD,KAA3D;AACD;AACF;;AAED2F,WAAW,kBAAUO,KAAV,EAAiB;AAC1B,MAAIC,MAAM,EAAV;AAD0B;AAAA;AAAA;;AAAA;AAE1B,0BAAiBD,KAAjB,mIAAwB;AAAA,UAAfL,IAAe;;AACtBM,UAAIT,IAAJ,CAASJ,OAAOM,QAAQC,IAAR,CAAP,CAAT;AACD;AAJyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAK1B,SAAOM,GAAP;AACD,CAND;;AAQA;;;;;;;;IAOaC,O,WAAAA,O;AACX,mBAAYL,GAAZ,EAAiBE,QAAjB,EAA2B;AAAA;;AACzB,SAAKI,IAAL,GAAYN,GAAZ;AACA,SAAKO,SAAL,GAAiBL,QAAjB;AACA,SAAKM,SAAL;AACA,SAAKC,OAAL;;AAEA;AACA,QAAI,EAAEP,oBAAoBH,KAAtB,CAAJ,EAAkC;AAChC,YAAMzD,MAAM,gDAAN,CAAN;AACD;AACF;;;;+BAEU;AACT,aAAOuD,QAAQ,IAAR,CAAP;AACD;;;wBAES;AACR,aAAO,KAAKS,IAAZ;AACD;;;wBAEc;AACb,aAAO,KAAKC,SAAZ;AACD;;;sBAEY/D,Q,EAAU;AACrB,WAAKgE,SAAL,GAAiBhE,QAAjB;AACD,K;wBAEc;AACb,aAAO,KAAKgE,SAAZ;AACD;;;sBAEUhE,Q,EAAU;AACnB,WAAKiE,OAAL,GAAejE,QAAf;AACD,K;wBAEY;AACX,aAAO,KAAKiE,OAAZ;AACD;;;;;;AAIH;;IAEaC,O,WAAAA,O;;;AACX,mBAAYC,WAAZ,EAAyB;AAAA;;AAAA,6GACjBtD,MADiB,EACTsD,WADS;AAExB;;;;wBAEiB;AAChB,aAAO,KAAKJ,SAAZ;AACD;;;;EAP0BF,O;;AAU7B;;IAEaO,a,WAAAA,a;;;AACX,yBAAYC,IAAZ,EAAkB;AAAA;;AAAA,yHACVrD,YADU,EACI,CAACqD,IAAD,CADJ;AAEjB;;;;wBAEU;AACT,aAAO,KAAKX,QAAL,CAAc,CAAd,CAAP;AACD;;;;EAPgCG,O;;IAUtBS,wB,WAAAA,wB;;;AACX,oCAAYC,QAAZ,EAAsB;AAAA;;AAAA,+IACdtD,uBADc,EACWsD,QADX;AAErB;;;;wBAEc;AACb,aAAO,KAAKb,QAAZ;AACD;;;;EAP2CG,O;;IAUjCW,e,WAAAA,e;;;AACX,2BAAY7H,IAAZ,EAAkB8H,UAAlB,EAA8BJ,IAA9B,EAAoC;AAAA;;AAAA,6HAC5BnD,cAD4B,EACZ,CAACvE,IAAD,EAAO8H,UAAP,EAAmBJ,IAAnB,CADY;AAEnC;;;;wBAEU;AACT,aAAO,KAAKX,QAAL,CAAc,CAAd,CAAP;AACD;;;wBAEgB;AACf,aAAO,KAAKA,QAAL,CAAc,CAAd,CAAP;AACD;;;wBAEU;AACT,aAAO,KAAKA,QAAL,CAAc,CAAd,CAAP;AACD;;;;EAfkCG,O;;IAkBxBa,c,WAAAA,c;;;AACX,0BAAY/H,IAAZ,EAAkB8H,UAAlB,EAA8BJ,IAA9B,EAAoC;AAAA;;AAAA,2HAC5BlD,aAD4B,EACb,CAACxE,IAAD,EAAO8H,UAAP,EAAmBJ,IAAnB,CADa;AAEnC;;;;wBAEU;AACT,aAAO,KAAKX,QAAL,CAAc,CAAd,CAAP;AACD;;;wBAEgB;AACf,aAAO,KAAKA,QAAL,CAAc,CAAd,CAAP;AACD;;;wBAEU;AACT,aAAO,KAAKA,QAAL,CAAc,CAAd,CAAP;AACD;;;;EAfiCG,O;;IAkBvBc,U,WAAAA,U;;;AACX,sBAAYC,QAAZ,EAAsBC,uBAAtB,EAA+C;AAAA;;AAAA,mHACvCzD,SADuC,EAC5B,CAACwD,QAAD,EAAWC,uBAAX,CAD4B;AAE9C;;;;wBAEc;AACb,aAAO,KAAKd,SAAL,CAAe,CAAf,CAAP;AACD;;;wBAE6B;AAC5B,aAAO,KAAKA,SAAL,CAAe,CAAf,CAAP;AACD;;;;EAX6BF,O;;AAchC;;IAEaiB,Y,WAAAA,Y;;;AACX,wBAAYC,UAAZ,EAAwB;AAAA;;AAAA,uHAChB1D,WADgB,EACH0D,UADG;AAEvB;;;;wBAEgB;AACf,aAAO,KAAKrB,QAAZ;AACD;;;;EAP+BG,O;;IAUrBmB,a,WAAAA,a;;;AACX,yBAAYC,MAAZ,EAAoB;AAAA;;AAAA,yHACZ3D,YADY,EACE,CAAC2D,MAAD,CADF;AAEnB;;;;wBAEY;AACX,aAAO,KAAKvB,QAAL,CAAc,CAAd,CAAP;AACD;;;;EAPgCG,O;;IAUtBqB,S,WAAAA,S;;;AACX;AACA,qBAAYC,SAAZ,EAAuBC,SAAvB,EAAkCC,SAAlC,EAA6C;AAAA;;AAAA,iHACrC9D,QADqC,EAC3B,CAAC4D,SAAD,EAAYC,SAAZ,EAAuBC,SAAvB,CAD2B;AAE5C;;;;wBAEe;AACd,aAAO,KAAKtB,SAAL,CAAe,CAAf,CAAP;AACD;;;wBAEe;AACd,aAAO,KAAKA,SAAL,CAAe,CAAf,CAAP;AACD;;;wBAEe;AACd,aAAO,KAAKA,SAAL,CAAe,CAAf,CAAP;AACD;;;;EAhB4BF,O;;IAmBlByB,a,WAAAA,a;;;AACX,yBAAYC,KAAZ,EAAmBlB,IAAnB,EAAyB;AAAA;;AAAA,yHACjB7C,YADiB,EACH,CAAC+D,KAAD,EAAQlB,IAAR,CADG;AAExB;;;;wBAEW;AACV,aAAO,KAAKN,SAAL,CAAe,CAAf,CAAP;AACD;;;wBAEU;AACT,aAAO,KAAKA,SAAL,CAAe,CAAf,CAAP;AACD;;;;EAXgCF,O;;IActB2B,c,WAAAA,c;;;AACX,0BAAYpH,KAAZ,EAAmBqH,KAAnB,EAA0BpB,IAA1B,EAAgC;AAAA;;AAAA,2HACxB5C,aADwB,EACT,CAACrD,KAAD,EAAQqH,KAAR,EAAepB,IAAf,CADS;AAE/B;;;;wBAEW;AACV,aAAO,KAAKN,SAAL,CAAe,CAAf,CAAP;AACD;;;wBAEW;AACV,aAAO,KAAKA,SAAL,CAAe,CAAf,CAAP;AACD;;;wBAEU;AACT,aAAO,KAAKA,SAAL,CAAe,CAAf,CAAP;AACD;;;;EAfiCF,O;;IAkBvB6B,Y,WAAAA,Y;;;AACX,wBAAYP,SAAZ,EAAuBd,IAAvB,EAA6B;AAAA;;AAAA,uHACrB3C,WADqB,EACR,CAACyD,SAAD,EAAYd,IAAZ,CADQ;AAE5B;;;;wBAEe;AACd,aAAO,KAAKN,SAAL,CAAe,CAAf,CAAP;AACD;;;wBAEU;AACT,aAAO,KAAKA,SAAL,CAAe,CAAf,CAAP;AACD;;;;EAX+BF,O;;IAcrB8B,a,WAAAA,a;;;AACX,yBAAYC,OAAZ,EAAqBrB,QAArB,EAA+B;AAAA;;AAAA,yHACvB5C,YADuB,EACT,CAACiE,OAAD,EAAUrB,QAAV,CADS;AAE9B;;;;wBAEa;AACZ,aAAO,KAAKR,SAAL,CAAe,CAAf,CAAP;AACD;;;wBAEc;AACb,aAAO,KAAKA,SAAL,CAAe,CAAf,CAAP;AACD;;;;EAXgCF,O;;IActBgC,e,WAAAA,e;;;AACX,2BAAYC,OAAZ,EAAqBzB,IAArB,EAA2B;AAAA;;AAAA,6HACnBzB,cADmB,EACH,CAACkD,OAAD,EAAUzB,IAAV,CADG;AAE1B;;;;wBAEa;AACZ,aAAO,KAAKN,SAAL,CAAe,CAAf,CAAP;AACD;;;wBAEU;AACT,aAAO,KAAKA,SAAL,CAAe,CAAf,CAAP;AACD;;;;EAXkCF,O;;IAcxBkC,qB,WAAAA,qB;;;AACX,iCAAYC,QAAZ,EAAsBC,KAAtB,EAA6B;AAAA;;AAAA,yIACrBrE,oBADqB,EACC,CAACoE,QAAD,EAAWC,KAAX,CADD;AAE5B;;;;wBAEc;AACb,aAAO,KAAKlC,SAAL,CAAe,CAAf,CAAP;AACD;;;wBAEW;AACV,aAAO,KAAKA,SAAL,CAAe,CAAf,CAAP;AACD;;;;EAXwCF,O;;IAc9BqC,kB,WAAAA,kB;;;AACX,8BAAYC,SAAZ,EAAuBF,KAAvB,EAA8B;AAAA;;AAAA,mIACtBpE,iBADsB,EACH,CAACsE,SAAD,EAAYF,KAAZ,CADG;AAE7B;;;;wBAEe;AACd,aAAO,KAAKlC,SAAL,CAAe,CAAf,CAAP;AACD;;;wBAEW;AACV,aAAO,KAAKA,SAAL,CAAe,CAAf,CAAP;AACD;;;;EAXqCF,O;;IAc3BuC,oB,WAAAA,oB;;;AACX,gCAAYC,aAAZ,EAA2B/F,IAA3B,EAAiC;AAAA;;AAAA,uIACzBwB,mBADyB,EACJ,CAACuE,aAAD,EAAgB/F,IAAhB,CADI;AAEhC;;;;wBAEmB;AAClB,aAAO,KAAKyD,SAAL,CAAe,CAAf,CAAP;AACD;;;wBAEU;AACT,aAAO,KAAKA,SAAL,CAAe,CAAf,CAAP;AACD;;;;EAXuCF,O;;AAc1C;;IAEayC,kB,WAAAA,kB;;;AACX,gCAAc;AAAA;;AAAA,mIACNvE,iBADM,EACa,EADb;AAEb;;;;wBAEgB;AACf,aAAO,EAAP;AACD;;;;EAPqC8B,O;;IAU3B0C,mB,WAAAA,mB;;;AACX,+BAAY3J,eAAZ,EAA6B6H,UAA7B,EAAyC;AAAA;;AAAA,qIACjCzC,kBADiC,EACb,CAACpF,eAAD,EAAkB6H,UAAlB,CADa;AAExC;;;;wBAEqB;AACpB,aAAO,KAAKV,SAAL,CAAe,CAAf,CAAP;AACD;;;wBAEgB;AACf,aAAO,KAAKA,SAAL,CAAe,CAAf,CAAP;AACD;;;;EAXsCF,O;;IAc5B2C,e,WAAAA,e;;;AACX,2BAAY/B,UAAZ,EAAwB;AAAA;;AAAA,6HAChBxC,cADgB,EACAwC,UADA;AAEvB;;;;wBAEgB;AACf,aAAO,KAAKV,SAAZ;AACD;;;;EAPkCF,O;;IAUxB4C,iB,WAAAA,iB;;;AACX,6BAAYC,OAAZ,EAAqB;AAAA;;AAAA,iIACbxE,gBADa,EACK,CAACwE,OAAD,CADL;AAEpB;;;;wBAEgB;AACf,aAAO,EAAP;AACD;;;wBAEa;AACZ,aAAOC,SAAS,KAAK5C,SAAL,CAAe,CAAf,EAAkBkC,KAA3B,EAAkC,EAAlC,CAAP;AACD;;;;EAXoCpC,O;;AAcvC;;IAEa+C,e,WAAAA,e;;;AACX,2BAAY/I,YAAZ,EAA0B;AAAA;;AAAA,6HAClBsE,cADkB,EACF,CAACtE,YAAD,CADE;AAEzB;;;;wBAEkB;AACjB,aAAO,KAAKkG,SAAL,CAAe,CAAf,CAAP;AACD;;;;EAPkCF,O;;IAUxBgD,qB,WAAAA,qB;;;AACX,iCAAYC,MAAZ,EAAoB;AAAA;;AAAA,yIACZ1E,oBADY,EACU,CAAC0E,MAAD,CADV;AAEnB;;;;wBAEY;AACX,aAAO,KAAK/C,SAAL,CAAe,CAAf,CAAP;AACD;;;;EAPwCF,O;;IAU9BkD,qB,WAAAA,qB;;;AACX,iCAAY/D,MAAZ,EAAoB;AAAA;;AAAA,yIACZX,oBADY,EACU,CAACW,MAAD,CADV;AAEnB;;;;wBAEY;AACX,aAAO,KAAKe,SAAL,CAAe,CAAf,CAAP;AACD;;;;EAPwCF,O;;IAU9BmD,W,WAAAA,W;;;AACX,uBAAYC,QAAZ,EAAsB;AAAA;;AAAA,qHACd3E,UADc,EACF2E,QADE;AAErB;;;;wBAEc;AACb,aAAO,KAAKlD,SAAZ;AACD;;;;EAP8BF,O;;IAUpBqD,Y,WAAAA,Y;;;AACX;AACA,wBAAYC,KAAZ,EAAmBC,MAAnB,EAA2BC,IAA3B,EAAiC;AAAA;;AAAA,uHACzB9E,WADyB,EACZ,CAAC4E,KAAD,EAAQC,MAAR,EAAgBC,IAAhB,CADY;AAEhC;;;;wBAEW;AACV,aAAO,KAAKtD,SAAL,CAAe,CAAf,CAAP;AACD;;;wBAEY;AACX,aAAO,KAAKA,SAAL,CAAe,CAAf,CAAP;AACD;;;wBAEU;AACT,aAAO,KAAKA,SAAL,CAAe,CAAf,CAAP;AACD;;;;EAhB+BF,O;;IAmBrByD,Y,WAAAA,Y;;;AACX,wBAAYL,QAAZ,EAAsB;AAAA;;AAAA,uHACdzE,WADc,EACDyE,QADC;AAErB;;;;wBAEc;AACb,aAAO,KAAKvD,QAAZ;AACD;;;;EAP+BG,O;;IAUrB0D,gB,WAAAA,gB;;;AACX,4BAAY3K,eAAZ,EAA6B4K,aAA7B,EAA4C;AAAA;;AAAA,+HACpC/E,eADoC,EACnB,CAAC7F,eAAD,EAAkB4K,aAAlB,CADmB;AAE3C;;;;iCAUY;AACX,UAAIC,QAAQ,EAAZ;AADW;AAAA;AAAA;;AAAA;AAEX,8BAAyB,KAAKD,aAA9B,mIAA6C;AAAA,cAApCE,YAAoC;;AAC3CD,gBAAMtE,IAAN,CAAWuE,aAAa7K,SAAb,CAAuBoJ,KAAlC;AACD;AAJU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKX,aAAOwB,KAAP;AACD;;;wBAdqB;AACpB,aAAO,KAAK1D,SAAL,CAAe,CAAf,CAAP;AACD;;;wBAEmB;AAClB,aAAO,KAAKA,SAAL,CAAe,CAAf,CAAP;AACD;;;;EAXmCF,O;;IAsBzB8D,sB,WAAAA,sB;;;AACX,kCAAY/K,eAAZ,EAA6BgL,QAA7B,EAAuCJ,aAAvC,EAAsD;AAAA;;AAAA,2IAC9C9E,qBAD8C,EACvB,CAAC9F,eAAD,EAAkBgL,QAAlB,EAA4BJ,aAA5B,CADuB;AAErD;;;;iCAcY;AACX,UAAIC,QAAQ,EAAZ;AADW;AAAA;AAAA;;AAAA;AAEX,8BAAyB,KAAKD,aAA9B,mIAA6C;AAAA,cAApCE,YAAoC;;AAC3CD,gBAAMtE,IAAN,CAAWuE,aAAa7K,SAAb,CAAuBoJ,KAAlC;AACD;AAJU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKX,aAAOwB,KAAP;AACD;;;wBAlBqB;AACpB,aAAO,KAAK1D,SAAL,CAAe,CAAf,CAAP;AACD;;;wBAEc;AACb,aAAO,KAAKA,SAAL,CAAe,CAAf,CAAP;AACD;;;wBAEmB;AAClB,aAAO,KAAKA,SAAL,CAAe,CAAf,CAAP;AACD;;;;EAfyCF,O;;IA0B/BgE,mB,WAAAA,mB;;;AACX,+BAAYC,YAAZ,EAA0BxH,IAA1B,EAAgC;AAAA;;AAAA,qIACxBqC,kBADwB,EACJ,CAACmF,YAAD,EAAexH,IAAf,CADI;AAE/B;;;;wBAEkB;AACjB,aAAO,KAAKyD,SAAL,CAAe,CAAf,CAAP;AACD;;;wBAEU;AACT,aAAO,KAAKA,SAAL,CAAe,CAAf,CAAP;AACD;;;;EAXsCF,O;;IAc5BkE,e,WAAAA,e;;;AACX,2BAAYlL,SAAZ,EAAuBoJ,KAAvB,EAA8B;AAAA;;AAAA,6HACtBpD,cADsB,EACN,CAAChG,SAAD,EAAYoJ,KAAZ,CADM;AAE7B;;;;wBAEe;AACd,aAAO,KAAKlC,SAAL,CAAe,CAAf,CAAP;AACD;;;wBAEW;AACV,aAAO,KAAKA,SAAL,CAAe,CAAf,CAAP;AACD;;;;EAXkCF,O;;IAcxBmE,yB,WAAAA,yB;;;AACX,qCAAYpL,eAAZ,EAA6B2B,UAA7B,EAAyC;AAAA;;AAAA,iJACjCuE,wBADiC,EACP,CAAClG,eAAD,EAAkB2B,UAAlB,CADO;AAExC;;;;wBAEqB;AACpB,aAAO,KAAKwF,SAAL,CAAe,CAAf,CAAP;AACD;;;wBAEgB;AACf,aAAO,KAAKA,SAAL,CAAe,CAAf,CAAP;AACD;;;;EAX4CF,O;;;;;;;;;;;;;;;;QClN/BoE,a,GAAAA,a;;AAlWhB;;AACA;;AAWA;;;;AAIA;;;;;;;;;;;;;;;;;;;AAmBA,SAASC,IAAT,CAAchI,QAAd,EAAwBC,MAAxB,EAAgCE,MAAhC,EAAwCC,IAAxC,EAA8C;AAC5C,QAAM,gCAAoBJ,QAApB,EAA8BC,MAA9B,EAAsCE,MAAtC,EAA8CC,IAA9C,CAAN;AACD;;AAED,SAAS6H,QAAT,GAAoB;AAClB,SAAO,CACL,gBAAK,YAAL,CADK,EAEL,gBAAK,WAAL,CAFK,CAAP;AAID;;AAED,SAASC,SAAT,GAAqB;AACnB,SAAO,CACL,gBAAK,aAAL,CADK,EAEL,gBAAK,aAAL,CAFK,EAGL,gBAAK,aAAL,CAHK,EAIL,gBAAK,aAAL,CAJK,CAAP;AAMD;;AAED,SAASC,OAAT,GAAmB;AACjB,SAAO,CACL,gBAAK,WAAL,CADK,EAEL,gBAAK,WAAL,CAFK,EAGL,gBAAK,WAAL,CAHK,EAIL,gBAAK,WAAL,CAJK,CAAP;AAMD;;AAED;;AAEA,SAASC,YAAT,GAAwB;AACtB,MAAIC,YAAY,CACd,EADc,EACV,OADU,EACD,MADC,EACO,QADP,EACiB,WADjB,EAC8B,aAD9B,EAC6C,YAD7C,EAEd,iBAFc,CAAhB;AAIA,MAAIC,WAAW,CACb,GADa,EACR,GADQ,EACH,GADG,EACE,GADF,EACO,GADP,EACY,GADZ,EACiB,GADjB,EACsB,GADtB,EAC2B,GAD3B,EACgC,GADhC,EACqC,GADrC,EAC0C,GAD1C,EAC+C,GAD/C,EACoD,GADpD,EACyD,GADzD,EAEb,GAFa,EAER,GAFQ,EAEH,GAFG,EAEE,GAFF,EAEO,GAFP,EAEY,GAFZ,EAEiB,GAFjB,EAEsB,GAFtB,EAE2B,GAF3B,EAEgC,GAFhC,EAEqC,GAFrC,CAAf;AAIA,MAAIC,cAAc,CAChB,OADgB,EACP,OADO,EACE,KADF,EACS,WADT,EACsB,QADtB,EACgC,QADhC,CAAlB;AAGA,MAAIC,aAAa,CACf,MADe,EACP,OADO,EACE,UADF,EACc,OADd,EACuB,QADvB,EACiC,UADjC,EAC6C,UAD7C,EAEf,WAFe,EAEF,WAFE,EAEW,WAFX,EAEwB,WAFxB,CAAjB;AAIA,MAAIC,YAAY,CACd,YADc,EACA,aADA,EACe,UADf,EAC2B,YAD3B,CAAhB;AAGA,MAAIC,OAAOJ,SAASK,MAAT,CAAgBJ,WAAhB,EAA6BI,MAA7B,CAAoCH,UAApC,EAAgDG,MAAhD,CAAuDF,SAAvD,CAAX;;AAEA,MAAIG,aAAa,EAAjB;AArBsB;AAAA;AAAA;;AAAA;AAsBtB,yBAAqBP,SAArB,8HAAgC;AAAA,UAAvBQ,QAAuB;AAAA;AAAA;AAAA;;AAAA;AAC9B,8BAAgBH,IAAhB,mIAAsB;AAAA,cAAbpJ,GAAa;;AACpBsJ,qBAAW3F,IAAX,CAAgB,OAAO4F,QAAP,GAAkBvJ,GAAlC;AACD;AAH6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAI/B;AA1BqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA2BtB,SAAOsJ,UAAP;AACD;;AAED,IAAIE,iBAAiBV,cAArB;;AAEA,SAASW,SAAT,GAAqB;AACnB,SAAO,CAAC,gBAAK,WAAL,CAAD,EAAoB,gBAAK,cAAL,CAApB,EAA0CJ,MAA1C,CAAiDG,cAAjD,CAAP;AACD;;AAED,SAASE,MAAT,CAAgBC,WAAhB,EAA6BxM,IAA7B,EAAmC;AACjC,SAAOwM,YAAYC,OAAZ,CAAoBzM,IAApB,CAAP;AACD;;AAED,SAAS0M,QAAT,CAAkBF,WAAlB,EAA+B/K,KAA/B,EAAsC;AACpC,SAAO+K,YAAY/K,KAAZ,CAAP;AACD;;AAED,SAASkL,WAAT,CAAqBvK,OAArB,EAA8B;AAC5B,SAAOsK,SAAShB,SAAT,EAAoB,CAACa,OAAOb,SAAP,EAAkBtJ,OAAlB,IAA6B,CAA9B,IAAmC,CAAvD,CAAP;AACD;;AAED,SAASwK,OAAT,CAAiBxK,OAAjB,EAA0B;AACxB,SAAOsK,SAAShB,SAAT,EAAoB,CAACa,OAAOb,SAAP,EAAkBtJ,OAAlB,IAA6B,CAA9B,IAAmC,CAAvD,CAAP;AACD;;AAED,SAASyK,OAAT,CAAiBzK,OAAjB,EAA0B;AACxB,SAAOsK,SAAShB,SAAT,EAAoB,CAACa,OAAOb,SAAP,EAAkBtJ,OAAlB,IAA6B,CAA9B,IAAmC,CAAvD,CAAP;AACD;;AAED,SAAS0K,SAAT,CAAmBC,SAAnB,EAA8B;AAC5B,SAAOL,SAASjB,WAAT,EAAsB,CAACc,OAAOd,WAAP,EAAoBsB,SAApB,IAAiC,CAAlC,IAAuC,CAA7D,CAAP;AACD;;AAED,SAASC,SAAT,CAAmBD,SAAnB,EAA8B;AAC5B,SAAOL,SAASjB,WAAT,EAAsB,CAACc,OAAOd,WAAP,EAAoBsB,SAApB,IAAiC,CAAlC,IAAuC,CAA7D,CAAP;AACD;;AAED;;;;;;;;;;IASaE,Y,WAAAA,Y;AACX,0BAAc;AAAA;;AACZ;;;;;;AAMA,SAAKC,MAAL,GAAc,EAAd;AACA,SAAKC,OAAL,GAAe,CAAf;AACA,SAAKC,MAAL,GAAc,EAAd;AACA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,KAAKH,MAAzB,EAAiCG,GAAjC,EAAsC;AACpC,UAAI3K,SAAS,EAAb;AACA,WAAK,IAAI4K,IAAI,CAAb,EAAgBA,IAAI,KAAKH,OAAzB,EAAkCG,GAAlC,EAAuC;AACrC5K,eAAO8D,IAAP,CAAY,KAAK+G,UAAL,EAAZ;AACD;AACD,WAAKH,MAAL,CAAY5G,IAAZ,CAAiB9D,MAAjB;AACD;AACD,SAAK8K,KAAL,GAAa,EAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAb;AACD;;;;4BAEO;AACN,UAAIC,WAAW,IAAIR,YAAJ,EAAf;AACAQ,eAASP,MAAT,GAAkB,KAAKA,MAAvB;AACAO,eAASN,OAAT,GAAmB,KAAKA,OAAxB;AACAM,eAASL,MAAT,GAAkB,EAAlB;AACA,WAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,KAAKH,MAAzB,EAAiCG,GAAjC,EAAsC;AACpC,YAAI3K,SAAS,EAAb;AACA,aAAK,IAAI4K,IAAI,CAAb,EAAgBA,IAAI,KAAKH,OAAzB,EAAkCG,GAAlC,EAAuC;AACrC,cAAII,OAAO,EAAX;AADqC;AAAA;AAAA;;AAAA;AAErC,kCAAsBjC,WAAtB,mIAAmC;AAAA,kBAA1BsB,SAA0B;;AACjCW,mBAAKX,SAAL,IAAkB,KAAKK,MAAL,CAAYC,CAAZ,EAAeC,CAAf,EAAkBP,SAAlB,CAAlB;AACD;AAJoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKrCrK,iBAAO8D,IAAP,CAAYkH,IAAZ;AACD;AACDD,iBAASL,MAAT,CAAgB5G,IAAhB,CAAqB9D,MAArB;AACD;AACD+K,eAASD,KAAT,GAAiB,EAAC,KAAK,KAAKA,KAAL,CAAWH,CAAjB,EAAoB,KAAK,KAAKG,KAAL,CAAWF,CAApC,EAAjB;AACA,aAAOG,QAAP;AACD;;AAED;;;;2BACO;AACL,UAAIE,SAAS,EAAb;AACAA,aAAOC,KAAP,GAAe,KAAKV,MAApB;AACAS,aAAOE,MAAP,GAAgB,KAAKV,OAArB;AACAQ,aAAOG,IAAP,GAAc,CAAC,KAAKN,KAAL,CAAWH,CAAZ,EAAe,KAAKG,KAAL,CAAWF,CAA1B,CAAd;AACAK,aAAOI,KAAP,GAAe,EAAf;AACA,WAAK,IAAIV,IAAI,CAAb,EAAgBA,IAAI,KAAKH,MAAzB,EAAiCG,GAAjC,EAAsC;AACpC,YAAI3K,SAAS,EAAb;AACA,aAAK,IAAI4K,IAAI,CAAb,EAAgBA,IAAI,KAAKH,OAAzB,EAAkCG,GAAlC,EAAuC;AACrC,cAAII,OAAO,EAAX;AACAA,eAAK,GAAL,IAAY,KAAKN,MAAL,CAAYC,CAAZ,EAAeC,CAAf,EAAkB,gBAAK,aAAL,CAAlB,EAAuCU,QAAvC,EAAZ;AACAN,eAAK,GAAL,IAAY,KAAKN,MAAL,CAAYC,CAAZ,EAAeC,CAAf,EAAkB,gBAAK,aAAL,CAAlB,EAAuCU,QAAvC,EAAZ;AACAN,eAAK,GAAL,IAAY,KAAKN,MAAL,CAAYC,CAAZ,EAAeC,CAAf,EAAkB,gBAAK,aAAL,CAAlB,EAAuCU,QAAvC,EAAZ;AACAN,eAAK,GAAL,IAAY,KAAKN,MAAL,CAAYC,CAAZ,EAAeC,CAAf,EAAkB,gBAAK,aAAL,CAAlB,EAAuCU,QAAvC,EAAZ;AACAtL,iBAAO8D,IAAP,CAAYkH,IAAZ;AACD;AACDC,eAAOI,KAAP,CAAavH,IAAb,CAAkB9D,MAAlB;AACD;AACD,aAAOiL,MAAP;AACD;;AAED;;;;yBACKA,M,EAAQ;AACX,WAAKT,MAAL,GAAcS,OAAOC,KAArB;AACA,WAAKT,OAAL,GAAeQ,OAAOE,MAAtB;AACA,WAAKL,KAAL,CAAWH,CAAX,GAAeM,OAAOG,IAAP,CAAY,CAAZ,CAAf;AACA,WAAKN,KAAL,CAAWF,CAAX,GAAeK,OAAOG,IAAP,CAAY,CAAZ,CAAf;AACA,WAAK,IAAIT,IAAI,CAAb,EAAgBA,IAAI,KAAKH,MAAzB,EAAiCG,GAAjC,EAAsC;AACpC,aAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,KAAKH,OAAzB,EAAkCG,GAAlC,EAAuC;AACrC,cAAII,OAAOC,OAAOI,KAAP,CAAaV,CAAb,EAAgBC,CAAhB,CAAX;AACA,eAAKF,MAAL,CAAYC,CAAZ,EAAeC,CAAf,EAAkB,gBAAK,aAAL,CAAlB,IAAyC,wBAAiBI,KAAK,GAAL,CAAjB,CAAzC;AACA,eAAKN,MAAL,CAAYC,CAAZ,EAAeC,CAAf,EAAkB,gBAAK,aAAL,CAAlB,IAAyC,wBAAiBI,KAAK,GAAL,CAAjB,CAAzC;AACA,eAAKN,MAAL,CAAYC,CAAZ,EAAeC,CAAf,EAAkB,gBAAK,aAAL,CAAlB,IAAyC,wBAAiBI,KAAK,GAAL,CAAjB,CAAzC;AACA,eAAKN,MAAL,CAAYC,CAAZ,EAAeC,CAAf,EAAkB,gBAAK,aAAL,CAAlB,IAAyC,wBAAiBI,KAAK,GAAL,CAAjB,CAAzC;AACD;AACF;AACF;;AAED;;;;6BAESX,S,EAAW;AAClB,UAAI5N,IAAI,KAAKiO,MAAL,CAAY,KAAKI,KAAL,CAAWH,CAAvB,EAA0B,KAAKG,KAAL,CAAWF,CAArC,EAAwCP,SAAxC,CAAR;AACA5N,UAAIA,EAAE8O,GAAF,CAAM,wBAAiB,CAAjB,CAAN,CAAJ;AACA,WAAKb,MAAL,CAAY,KAAKI,KAAL,CAAWH,CAAvB,EAA0B,KAAKG,KAAL,CAAWF,CAArC,EAAwCP,SAAxC,IAAqD5N,CAArD;AACD;;;gCAEW4N,S,EAAW;AACrB,UAAI5N,IAAI,KAAKiO,MAAL,CAAY,KAAKI,KAAL,CAAWH,CAAvB,EAA0B,KAAKG,KAAL,CAAWF,CAArC,EAAwCP,SAAxC,CAAR;AACA,UAAI5N,EAAE+O,EAAF,CAAK,wBAAiB,CAAjB,CAAL,CAAJ,EAA+B;AAC7B,cAAM/K,MAAM,sBAAN,CAAN;AACD;AACDhE,UAAIA,EAAEgP,GAAF,CAAM,wBAAiB,CAAjB,CAAN,CAAJ;AACA,WAAKf,MAAL,CAAY,KAAKI,KAAL,CAAWH,CAAvB,EAA0B,KAAKG,KAAL,CAAWF,CAArC,EAAwCP,SAAxC,IAAqD5N,CAArD;AACD;;;8BAES4N,S,EAAW;AACnB,aAAO,KAAKK,MAAL,CAAY,KAAKI,KAAL,CAAWH,CAAvB,EAA0B,KAAKG,KAAL,CAAWF,CAArC,EAAwCP,SAAxC,CAAP;AACD;;;yBAEI3K,O,EAAS;AACZ,UAAI,CAAC,KAAKgM,OAAL,CAAahM,OAAb,CAAL,EAA4B;AAC1B,cAAMe,MAAM,cAAN,CAAN;AACD;AACD,UAAIkL,QAAQ,KAAKC,kBAAL,CAAwBlM,OAAxB,CAAZ;AACA,WAAKoL,KAAL,CAAWH,CAAX,IAAgBgB,MAAM,CAAN,CAAhB;AACA,WAAKb,KAAL,CAAWF,CAAX,IAAgBe,MAAM,CAAN,CAAhB;AACD;;;6BAEQjM,O,EAAS;AAChB,UAAIA,YAAY,gBAAK,WAAL,CAAhB,EAAmC;AACjC,aAAKoL,KAAL,CAAWF,CAAX,GAAe,KAAKH,OAAL,GAAe,CAA9B;AACD,OAFD,MAEO,IAAI/K,YAAY,gBAAK,WAAL,CAAhB,EAAmC;AACxC,aAAKoL,KAAL,CAAWH,CAAX,GAAe,KAAKH,MAAL,GAAc,CAA7B;AACD,OAFM,MAEA,IAAI9K,YAAY,gBAAK,WAAL,CAAhB,EAAmC;AACxC,aAAKoL,KAAL,CAAWF,CAAX,GAAe,CAAf;AACD,OAFM,MAEA,IAAIlL,YAAY,gBAAK,WAAL,CAAhB,EAAmC;AACxC,aAAKoL,KAAL,CAAWH,CAAX,GAAe,CAAf;AACD,OAFM,MAEA;AACL,cAAMlK,MAAM,wBAAwBf,OAA9B,CAAN;AACD;AACF;;;yCAEoB;AACnB,WAAK,IAAIiL,IAAI,CAAb,EAAgBA,IAAI,KAAKH,MAAzB,EAAiCG,GAAjC,EAAsC;AACpC,aAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,KAAKH,OAAzB,EAAkCG,GAAlC,EAAuC;AACrC,eAAKF,MAAL,CAAYC,CAAZ,EAAeC,CAAf,IAAoB,KAAKC,UAAL,EAApB;AACD;AACF;AACF;;;4BAEOnL,O,EAAS;AACf,UAAIiM,QAAQ,KAAKC,kBAAL,CAAwBlM,OAAxB,CAAZ;AACA,UAAIiL,IAAI,KAAKG,KAAL,CAAWH,CAAX,GAAegB,MAAM,CAAN,CAAvB;AACA,UAAIf,IAAI,KAAKE,KAAL,CAAWF,CAAX,GAAee,MAAM,CAAN,CAAvB;AACA,aAAO,KAAKhB,CAAL,IAAUA,IAAI,KAAKH,MAAnB,IAA6B,KAAKI,CAAlC,IAAuCA,IAAI,KAAKH,OAAvD;AACD;;;uCAEkB/K,O,EAAS;AAC1B,UAAIiM,cAAJ;AACA,UAAIjM,YAAY,gBAAK,WAAL,CAAhB,EAAmC;AACjCiM,gBAAQ,CAAC,CAAD,EAAI,CAAJ,CAAR;AACD,OAFD,MAEO,IAAIjM,YAAY,gBAAK,WAAL,CAAhB,EAAmC;AACxCiM,gBAAQ,CAAC,CAAD,EAAI,CAAJ,CAAR;AACD,OAFM,MAEA,IAAIjM,YAAY,gBAAK,WAAL,CAAhB,EAAmC;AACxCiM,gBAAQ,CAAC,CAAD,EAAI,CAAC,CAAL,CAAR;AACD,OAFM,MAEA,IAAIjM,YAAY,gBAAK,WAAL,CAAhB,EAAmC;AACxCiM,gBAAQ,CAAC,CAAC,CAAF,EAAK,CAAL,CAAR;AACD,OAFM,MAEA;AACL,cAAMlL,MAAM,wBAAwBf,OAA9B,CAAN;AACD;AACD,aAAOiM,KAAP;AACD;;;iCAEY;AACX,UAAIX,OAAO,EAAX;AADW;AAAA;AAAA;;AAAA;AAEX,8BAAsBjC,WAAtB,mIAAmC;AAAA,cAA1BsB,SAA0B;;AACjCW,eAAKX,SAAL,IAAkB,wBAAiB,CAAjB,CAAlB;AACD;AAJU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKX,aAAOW,IAAP;AACD;;;;;;IAGGa,kB;AAEJ,8BAAYC,aAAZ,EAA2BC,iBAA3B,EAA8CC,cAA9C,EAA8D;AAAA;;AAC5D,SAAKC,cAAL,GAAsBH,aAAtB;AACA,SAAKI,kBAAL,GAA0BH,iBAA1B;AACA,SAAKI,eAAL,GAAuBH,cAAvB;AACD;;;;4BAMO;AACN,aAAO,KAAKC,cAAL,CAAoB9N,MAA3B;AACD;;;yBAEIiO,W,EAAanL,I,EAAM;AACtB,aAAO,KAAKkL,eAAL,CAAqB/K,KAArB,CAA2B,IAA3B,EAAiC,CAACgL,WAAD,EAAc5C,MAAd,CAAqBvI,IAArB,CAAjC,CAAP;AACD;;AAED;;;;;;;;sCAKkBJ,Q,EAAUC,M,EAAQsL,W,EAAanL,I,EAAM;AACrD,WAAKiL,kBAAL,CAAwBrL,QAAxB,EAAkCC,MAAlC,EAA0CsL,WAA1C,EAAuDnL,IAAvD;AACD;;;wBAnBmB;AAClB,aAAO,KAAKgL,cAAZ;AACD;;;;;;AAqBH;;AAEA,IAAII,UAAU,oBAAd;;AAEA,IAAIC,cAAc,wBAAlB;;AAEA,IAAIC,aAAa,uBAAjB;;AAEA,IAAIC,WAAW,yBAAkB,gBAAK,WAAL,CAAlB,EAAqC,EAArC,CAAf;;AAEA,IAAIC,cAAc,oBAAa,oBAAb,CAAlB;;AAEA,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAC3B,MAAIA,IAAJ,EAAU;AACR,WAAO,0BAAmB,gBAAK,WAAL,CAAnB,EAAsC,gBAAK,WAAL,CAAtC,EAAyD,EAAzD,CAAP;AACD,GAFD,MAEO;AACL,WAAO,0BAAmB,gBAAK,WAAL,CAAnB,EAAsC,gBAAK,YAAL,CAAtC,EAA0D,EAA1D,CAAP;AACD;AACF;;AAEM,SAAS/D,aAAT,CAAuBhC,KAAvB,EAA8B;AACnC,SAAOA,MAAMrJ,eAAN,KAA0B,gBAAK,WAAL,CAAjC;AACD;;AAED,IAAIqP,YAAY,yBAAkB,gBAAK,YAAL,CAAlB,EAAsC,EAAtC,CAAhB;;AAEA,SAASC,cAAT,CAAwBxC,SAAxB,EAAmC;AACjC,SAAO,0BAAmB,gBAAK,YAAL,CAAnB,EAAuCA,SAAvC,EAAkD,EAAlD,CAAP;AACD;;AAED,SAASyC,cAAT,CAAwBlG,KAAxB,EAA+B;AAC7B,SAAOA,MAAMrJ,eAAb;AACD;;AAED,IAAIwP,UAAU,yBAAkB,gBAAK,UAAL,CAAlB,EAAoC,EAApC,CAAd;;AAEA,SAASC,YAAT,CAAsBtN,OAAtB,EAA+B;AAC7B,SAAO,0BAAmB,gBAAK,UAAL,CAAnB,EAAqCA,OAArC,EAA8C,EAA9C,CAAP;AACD;;AAED,SAASuN,YAAT,CAAsBrG,KAAtB,EAA6B;AAC3B,SAAOA,MAAMrJ,eAAb;AACD;;AAED;;AAEA,SAAS2P,YAAT,CAAsBrM,QAAtB,EAAgCC,MAAhC,EAAwCsL,WAAxC,EAAqDnL,IAArD,EAA2D;AACzD;AACD;;AAED,SAASkM,SAAT,CAAmBxC,CAAnB,EAAsB;AACpB,SAAO,sBAAUA,EAAE5M,IAAF,EAAV,EAAoBuO,WAApB,MAAqC,IAA5C;AACD;;AAED,SAASc,MAAT,CAAgBzC,CAAhB,EAAmB;AACjB,SAAO,sBAAUA,EAAE5M,IAAF,EAAV,EAAoByO,QAApB,MAAkC,IAAzC;AACD;;AAED,SAASa,OAAT,CAAiB1C,CAAjB,EAAoB;AAClB,SAAO,sBAAUA,EAAE5M,IAAF,EAAV,EAAoB6O,SAApB,MAAmC,IAA1C;AACD;;AAED,SAASU,KAAT,CAAe3C,CAAf,EAAkB;AAChB,SAAO,sBAAUA,EAAE5M,IAAF,EAAV,EAAoBgP,OAApB,MAAiC,IAAxC;AACD;;AAEM,IAAMQ,oDAAsB,CAACjB,WAAD,EAAcE,QAAd,EAAwBO,OAAxB,CAA5B;AACA,IAAMS,8CAAmB,CAAClB,WAAD,EAAcE,QAAd,EAAwBI,SAAxB,EAAmCG,OAAnC,CAAzB;;AAEP;;AAEA,SAASU,SAAT,CAAmB7G,KAAnB,EAA0B;AACxB,MAAIwG,OAAOxG,KAAP,CAAJ,EAAmB;AACjB,QAAIgC,cAAchC,KAAd,CAAJ,EAA0B;AACxB,aAAO,CAAP;AACD,KAFD,MAEO;AACL,aAAO,CAAP;AACD;AACF,GAND,MAMO,IAAIyG,QAAQzG,KAAR,CAAJ,EAAoB;AACzB,WAAOiD,OAAOd,WAAP,EAAoB+D,eAAelG,KAAf,CAApB,CAAP;AACD,GAFM,MAEA,IAAI0G,MAAM1G,KAAN,CAAJ,EAAkB;AACvB,WAAOiD,OAAOb,SAAP,EAAkBiE,aAAarG,KAAb,CAAlB,CAAP;AACD,GAFM,MAEA;AACL,UAAMnG,MAAM,qCAAN,CAAN;AACD;AACF;;AAED,SAASiN,SAAT,CAAmBC,CAAnB,EAAsBC,CAAtB,EAAyB;AACvB,MAAIT,UAAUQ,CAAV,CAAJ,EAAkB;AAChB,WAAOjB,cAAciB,EAAEnC,EAAF,CAAKoC,CAAL,CAAd,CAAP;AACD,GAFD,MAEO;AACL,QAAIC,SAASJ,UAAUE,CAAV,CAAb;AACA,QAAIG,SAASL,UAAUG,CAAV,CAAb;AACA,WAAOlB,cAAcmB,UAAUC,MAAxB,CAAP;AACD;AACF;;AAED,SAASC,SAAT,CAAmBJ,CAAnB,EAAsBC,CAAtB,EAAyB;AACvB,MAAIT,UAAUQ,CAAV,CAAJ,EAAkB;AAChB,WAAOjB,cAAciB,EAAEK,EAAF,CAAKJ,CAAL,CAAd,CAAP;AACD,GAFD,MAEO;AACL,QAAIC,SAASJ,UAAUE,CAAV,CAAb;AACA,QAAIG,SAASL,UAAUG,CAAV,CAAb;AACA,WAAOlB,cAAcmB,UAAUC,MAAxB,CAAP;AACD;AACF;;AAED,SAASG,SAAT,CAAmBN,CAAnB,EAAsBC,CAAtB,EAAyB;AACvB,MAAIT,UAAUQ,CAAV,CAAJ,EAAkB;AAChB,WAAOjB,cAAciB,EAAEO,EAAF,CAAKN,CAAL,CAAd,CAAP;AACD,GAFD,MAEO;AACL,QAAIC,SAASJ,UAAUE,CAAV,CAAb;AACA,QAAIG,SAASL,UAAUG,CAAV,CAAb;AACA,WAAOlB,cAAcmB,SAASC,MAAvB,CAAP;AACD;AACF;;AAED,SAASK,SAAT,CAAmBR,CAAnB,EAAsBC,CAAtB,EAAyB;AACvB,MAAIT,UAAUQ,CAAV,CAAJ,EAAkB;AAChB,WAAOjB,cAAciB,EAAES,EAAF,CAAKR,CAAL,CAAd,CAAP;AACD,GAFD,MAEO;AACL,QAAIC,SAASJ,UAAUE,CAAV,CAAb;AACA,QAAIG,SAASL,UAAUG,CAAV,CAAb;AACA,WAAOlB,cAAcmB,SAASC,MAAvB,CAAP;AACD;AACF;;AAED,SAASO,WAAT,CAAqBV,CAArB,EAAwB;AACtB,MAAIR,UAAUQ,CAAV,CAAJ,EAAkB;AAChB,WAAOA,EAAEpC,GAAF,CAAM,wBAAiB,CAAjB,CAAN,CAAP;AACD,GAFD,MAEO,IAAI6B,OAAOO,CAAP,CAAJ,EAAe;AACpB,QAAI/E,cAAc+E,CAAd,CAAJ,EAAsB;AACpB,aAAOjB,cAAc,KAAd,CAAP;AACD,KAFD,MAEO;AACL,aAAOA,cAAc,IAAd,CAAP;AACD;AACF,GANM,MAMA,IAAIW,QAAQM,CAAR,CAAJ,EAAgB;AACrB,WAAOd,eAAezC,UAAU0C,eAAea,CAAf,CAAV,CAAf,CAAP;AACD,GAFM,MAEA,IAAIL,MAAMK,CAAN,CAAJ,EAAc;AACnB,WAAOX,aAAa9C,QAAQ+C,aAAaU,CAAb,CAAR,CAAb,CAAP;AACD,GAFM,MAEA;AACL,UAAMlN,MAAM,iCAAN,CAAN;AACD;AACF;;AAED,SAAS6N,WAAT,CAAqBX,CAArB,EAAwB;AACtB,MAAIR,UAAUQ,CAAV,CAAJ,EAAkB;AAChB,WAAOA,EAAElC,GAAF,CAAM,wBAAiB,CAAjB,CAAN,CAAP;AACD,GAFD,MAEO,IAAI2B,OAAOO,CAAP,CAAJ,EAAe;AACpB,QAAI/E,cAAc+E,CAAd,CAAJ,EAAsB;AACpB,aAAOjB,cAAc,KAAd,CAAP;AACD,KAFD,MAEO;AACL,aAAOA,cAAc,IAAd,CAAP;AACD;AACF,GANM,MAMA,IAAIW,QAAQM,CAAR,CAAJ,EAAgB;AACrB,WAAOd,eAAevC,UAAUwC,eAAea,CAAf,CAAV,CAAf,CAAP;AACD,GAFM,MAEA,IAAIL,MAAMK,CAAN,CAAJ,EAAc;AACnB,WAAOX,aAAa7C,QAAQ8C,aAAaU,CAAb,CAAR,CAAb,CAAP;AACD,GAFM,MAEA;AACL,UAAMlN,MAAM,iCAAN,CAAN;AACD;AACF;;AAED,SAAS8N,eAAT,CAAyBZ,CAAzB,EAA4B;AAC1B,MAAIR,UAAUQ,CAAV,CAAJ,EAAkB;AAChB,WAAOA,EAAEa,MAAF,EAAP;AACD,GAFD,MAEO,IAAIpB,OAAOO,CAAP,CAAJ,EAAe;AACpB,WAAOjB,cAAc,CAAC9D,cAAc+E,CAAd,CAAf,CAAP;AACD,GAFM,MAEA,IAAIL,MAAMK,CAAN,CAAJ,EAAc;AACnB,WAAOX,aAAa/C,YAAYgD,aAAaU,CAAb,CAAZ,CAAb,CAAP;AACD,GAFM,MAEA;AACL,UAAMlN,MAAM,yCAAN,CAAN;AACD;AACF;AACD;AACA,SAASgO,iBAAT,CAA2B5N,QAA3B,EAAqCC,MAArC,EAA6C6J,CAA7C,EAAgD+D,KAAhD,EAAuD;AACrD;AADqD;AAAA;AAAA;;AAAA;AAErD,0BAAiBA,KAAjB,mIAAwB;AAAA,UAAf3Q,IAAe;;AACtB,UAAI,sBAAU4M,EAAE5M,IAAF,EAAV,EAAoBA,IAApB,MAA8B,IAAlC,EAAwC;AACtC;AACD;AACF;AACD;AAPqD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQrD,MAAI4Q,cAAc,EAAlB;AARqD;AAAA;AAAA;;AAAA;AASrD,0BAAiBD,KAAjB,mIAAwB;AAAA,UAAf3Q,KAAe;;AACtB4Q,kBAAY7K,IAAZ,CAAiB/F,MAAKnB,QAAL,EAAjB;AACD;AACD;AAZqD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAarDiM,OAAKhI,QAAL,EAAeC,MAAf,EACE,qCADF,EACyC,CACrC6N,WADqC,EAErChE,EAAE5M,IAAF,GAASnB,QAAT,EAFqC,CADzC;AAMD;;AAED;AACA,SAASgS,uBAAT,CAAiC/N,QAAjC,EAA2CC,MAA3C,EAAmD6J,CAAnD,EAAsDC,CAAtD,EAAyD;AACvD,MAAI,sBAAUD,EAAE5M,IAAF,EAAV,EAAoB6M,EAAE7M,IAAF,EAApB,MAAkC,IAAtC,EAA4C;AAC1C8K,SAAKhI,QAAL,EAAeC,MAAf,EACE,0CADF,EAC8C,CAC1C6J,EAAE5M,IAAF,GAASnB,QAAT,EAD0C,EAE1CgO,EAAE7M,IAAF,GAASnB,QAAT,EAF0C,CAD9C;AAMD;AACF;;AAED;;IAEaiS,iB,WAAAA,iB;AAEX,+BAAc;AAAA;;AACZ;;;;;;;;AAQA,SAAKC,eAAL,GAAuB,EAAvB;;AAEA;;;;;AAKA,SAAKC,oBAAL,GAA4B,EAA5B;AACA,SAAKC,mBAAL,GAA2B,EAA3B;;AAEA;;AAEA;AACA,SAAKF,eAAL,CAAqB,gBAAK,WAAL,CAArB,IAA0C,EAA1C;AAtBY;AAAA;AAAA;;AAAA;AAuBZ,4BAAqBhG,UAArB,mIAAiC;AAAA,YAAxBmG,QAAwB;;AAC/B,aAAKH,eAAL,CAAqB,gBAAK,WAAL,CAArB,EAAwCG,QAAxC,IAAoD,EAApD;AACD;;AAED;AA3BY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA4BZ,SAAKH,eAAL,CAAqB,gBAAK,YAAL,CAArB,IAA2C,EAA3C;AA5BY;AAAA;AAAA;;AAAA;AA6BZ,4BAAsB/F,WAAtB,mIAAmC;AAAA,YAA1BsB,SAA0B;;AACjC,aAAKyE,eAAL,CAAqB,gBAAK,YAAL,CAArB,EAAyCzE,SAAzC,IAAsD,EAAtD;AACD;;AAED;AAjCY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAkCZ,SAAKyE,eAAL,CAAqB,gBAAK,UAAL,CAArB,IAAyC,EAAzC;AAlCY;AAAA;AAAA;;AAAA;AAmCZ,4BAAoB9F,SAApB,mIAA+B;AAAA,YAAtBtJ,OAAsB;;AAC7B,aAAKoP,eAAL,CAAqB,gBAAK,UAAL,CAArB,EAAuCpP,OAAvC,IAAkD,EAAlD;AACD;;AAED;AAvCY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAwCZ,SAAKoP,eAAL,CAAqB,gBAAK,YAAL,CAArB,IAA2C,EAA3C;AAxCY;AAAA;AAAA;;AAAA;AAyCZ,6BAAsBlF,WAAtB,wIAAmC;AAAA,YAA1BsF,SAA0B;;AACjC,aAAKJ,eAAL,CAAqB,gBAAK,YAAL,CAArB,EAAyCI,SAAzC,IAAsD,EAAtD;AACD;;AAED;AA7CY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA+CZ,SAAKH,oBAAL,CAA0B,gBAAK,eAAL,CAA1B,IACE,IAAIlD,kBAAJ,CACE,CAACe,SAAD,CADF,EACeM,YADf,EAEE,UAAUd,WAAV,EAAuB+C,KAAvB,EAA8B;AAC5B/C,kBAAYgD,QAAZ,CAAqBtC,eAAeqC,KAAf,CAArB;AACA,aAAO,IAAP;AACD,KALH,CADF;;AASA,SAAKJ,oBAAL,CAA0B,gBAAK,kBAAL,CAA1B,IACE,IAAIlD,kBAAJ,CACE,CAACe,SAAD,CADF,EAEE,UAAU/L,QAAV,EAAoBC,MAApB,EAA4BsL,WAA5B,EAAyCnL,IAAzC,EAA+C;AAC7C,UAAIoJ,YAAYyC,eAAe7L,KAAK,CAAL,CAAf,CAAhB;AACA,UAAImL,YAAYiD,SAAZ,CAAsBhF,SAAtB,EAAiCmB,EAAjC,CAAoC,wBAAiB,CAAjB,CAApC,CAAJ,EAA8D;AAC5D3C,aAAKhI,QAAL,EAAeC,MAAf,EAAuB,qBAAvB,EAA8C,CAACuJ,SAAD,CAA9C;AACD;AACF,KAPH,EAQE,UAAU+B,WAAV,EAAuB+C,KAAvB,EAA8B;AAC5B/C,kBAAYkD,WAAZ,CAAwBxC,eAAeqC,KAAf,CAAxB;AACA,aAAO,IAAP;AACD,KAXH,CADF;;AAeA,SAAKJ,oBAAL,CAA0B,gBAAK,WAAL,CAA1B,IACE,IAAIlD,kBAAJ,CACE,CAACkB,OAAD,CADF,EAEE,UAAUlM,QAAV,EAAoBC,MAApB,EAA4BsL,WAA5B,EAAyCnL,IAAzC,EAA+C;AAC7C,UAAIvB,UAAUuN,aAAahM,KAAK,CAAL,CAAb,CAAd;AACA,UAAI,CAACmL,YAAYV,OAAZ,CAAoBhM,OAApB,CAAL,EAAmC;AACjCmJ,aAAKhI,QAAL,EAAeC,MAAf,EAAuB,gBAAvB,EAAyC,CAACpB,OAAD,CAAzC;AACD;AACF,KAPH,EAQE,UAAU0M,WAAV,EAAuBmD,GAAvB,EAA4B;AAC1BnD,kBAAYoD,IAAZ,CAAiBvC,aAAasC,GAAb,CAAjB;AACA,aAAO,IAAP;AACD,KAXH,CADF;;AAeA,SAAKR,oBAAL,CAA0B,gBAAK,eAAL,CAA1B,IACE,IAAIlD,kBAAJ,CACE,CAACkB,OAAD,CADF,EACaG,YADb,EAEE,UAAUd,WAAV,EAAuBmD,GAAvB,EAA4B;AAC1BnD,kBAAYqD,QAAZ,CAAqBxC,aAAasC,GAAb,CAArB;AACA,aAAO,IAAP;AACD,KALH,CADF;;AASA,SAAKR,oBAAL,CAA0B,gBAAK,yBAAL,CAA1B,IACE,IAAIlD,kBAAJ,CACE,EADF,EACMqB,YADN,EAEE,UAAUd,WAAV,EAAuBmD,GAAvB,EAA4B;AAC1BnD,kBAAYsD,kBAAZ;AACA,aAAO,IAAP;AACD,KALH,CADF;;AASA,SAAKX,oBAAL,CAA0B,OAA1B;AACE;AACA,QAAIlD,kBAAJ,CACE,CAACU,UAAD,CADF,EAEE,UAAU1L,QAAV,EAAoBC,MAApB,EAA4BsL,WAA5B,EAAyCnL,IAAzC,EAA+C;AAC7C4H,WAAKhI,QAAL,EAAeC,MAAf,EAAuBG,KAAK,CAAL,EAAQ0C,MAA/B,EAAuC,EAAvC;AACD,KAJH,EAKE,UAAUyI,WAAV,EAAuBuD,MAAvB,EAA+B;AAC7B;AACA,aAAO,IAAP;AACD,KARH,CAFF;;AAaA;;AAEA,SAAKX,mBAAL,CAAyB,YAAzB,IACE,IAAInD,kBAAJ,CACE,CAACQ,OAAD,EAAUA,OAAV,CADF,EAEE,UAAUxL,QAAV,EAAoBC,MAApB,EAA4BsL,WAA5B,EAAyCnL,IAAzC,EAA+C;AAC7C,UAAI6G,QAAQ7G,KAAK,CAAL,CAAZ;AACA,UAAI+G,OAAO/G,KAAK,CAAL,CAAX;AACA2N,8BAAwB/N,QAAxB,EAAkCC,MAAlC,EAA0CgH,KAA1C,EAAiDE,IAAjD;AACAyG,wBAAkB5N,QAAlB,EAA4BC,MAA5B,EAAoCgH,KAApC,EAA2C0F,gBAA3C;AACAiB,wBAAkB5N,QAAlB,EAA4BC,MAA5B,EAAoCkH,IAApC,EAA0CwF,gBAA1C;AACD,KARH,EASE,UAAUpB,WAAV,EAAuBtE,KAAvB,EAA8BE,IAA9B,EAAoC;AAClC,UAAI4H,UAAU9H,KAAd;AACA,UAAIc,cAAcuF,UAAUyB,OAAV,EAAmB5H,IAAnB,CAAd,CAAJ,EAA6C;AAC3C,eAAO,qBAAc,EAAd,CAAP;AACD;AACD,UAAIpC,SAAS,EAAb;AACA,aAAOgD,cAAcqF,UAAU2B,OAAV,EAAmB5H,IAAnB,CAAd,CAAP,EAAgD;AAC9CpC,eAAO9B,IAAP,CAAY8L,OAAZ;AACAA,kBAAUvB,YAAYuB,OAAZ,CAAV;AACD;AACDhK,aAAO9B,IAAP,CAAY8L,OAAZ;AACA,aAAO,qBAAchK,MAAd,CAAP;AACD,KArBH,CADF;;AAyBA,SAAKoJ,mBAAL,CAAyB,IAAzB,IACE,IAAInD,kBAAJ,CACE,CAACQ,OAAD,EAAUA,OAAV,CADF,EACsBa,YADtB;AAEE;;;;;;;AAOA,cAAUd,WAAV,EAAuBzB,CAAvB,EAA0BC,CAA1B,EAA6B;AAC3B,YAAMnK,MAAM,0CAAN,CAAN;AACD,KAXH,CADF;;AAeA,SAAKuO,mBAAL,CAAyB,IAAzB,IACE,IAAInD,kBAAJ,CACE,CAACQ,OAAD,EAAUA,OAAV,CADF,EACsBa,YADtB;AAEE;;;;;;;AAOA,cAAUd,WAAV,EAAuBzB,CAAvB,EAA0BC,CAA1B,EAA6B;AAC3B,YAAMnK,MAAM,0CAAN,CAAN;AACD,KAXH,CADF;;AAeA,SAAKuO,mBAAL,CAAyB,sBAAzB,IACE,IAAInD,kBAAJ,CACE,CAACQ,OAAD,EAAUA,OAAV,EAAmBA,OAAnB,CADF,EAEE,UAAUxL,QAAV,EAAoBC,MAApB,EAA4BsL,WAA5B,EAAyCnL,IAAzC,EAA+C;AAC7C,UAAI6G,QAAQ7G,KAAK,CAAL,CAAZ;AACA,UAAI+G,OAAO/G,KAAK,CAAL,CAAX;AACA,UAAI8G,SAAS9G,KAAK,CAAL,CAAb;AACAwN,wBAAkB5N,QAAlB,EAA4BC,MAA5B,EAAoCgH,KAApC,EAA2C,CAACwE,WAAD,CAA3C;AACAmC,wBAAkB5N,QAAlB,EAA4BC,MAA5B,EAAoCkH,IAApC,EAA0C,CAACsE,WAAD,CAA1C;AACAmC,wBAAkB5N,QAAlB,EAA4BC,MAA5B,EAAoCiH,MAApC,EAA4C,CAACuE,WAAD,CAA5C;AACD,KATH,EAUE,UAAUF,WAAV,EAAuBtE,KAAvB,EAA8BE,IAA9B,EAAoCD,MAApC,EAA4C;AAC1C,UAAI4D,QAAQ5D,OAAO0D,GAAP,CAAW3D,KAAX,CAAZ;AACA,UAAI6D,MAAMuC,EAAN,CAAS,wBAAiB,CAAjB,CAAT,CAAJ,EAAmC;AACjC,eAAO,qBAAc,EAAd,CAAP;AACD;AACD,UAAI0B,UAAU9H,KAAd;AACA,UAAIlC,SAAS,EAAb;AACA,aAAOgK,QAAQpE,EAAR,CAAWxD,IAAX,CAAP,EAAyB;AACvBpC,eAAO9B,IAAP,CAAY8L,OAAZ;AACAA,kBAAUA,QAAQrE,GAAR,CAAYI,KAAZ,CAAV;AACD;AACD,aAAO,qBAAc/F,MAAd,CAAP;AACD,KAtBH,CADF;;AA0BA,SAAKoJ,mBAAL,CAAyB,mBAAzB,IACE,IAAInD,kBAAJ,CACE,CAACQ,OAAD,CADF,EACaa,YADb,EAEE,UAAUd,WAAV,EAAuByD,IAAvB,EAA6B;AAC3B,aAAO,wBAAiBA,KAAK1R,MAAL,EAAjB,CAAP;AACD,KAJH,CADF;;AAQA,SAAK6Q,mBAAL,CAAyB,gBAAzB,IACE,IAAInD,kBAAJ,CACE,CAACQ,OAAD,EAAUA,OAAV,CADF,EACsBa,YADtB,EAEE,UAAUd,WAAV,EAAuByD,IAAvB,EAA6B9Q,KAA7B,EAAoC;AAClC,aAAO8Q,KAAKjI,QAAL,CAAc7I,MAAMuM,QAAN,EAAd,CAAP;AACD,KAJH,CADF;;AAQA,SAAK0D,mBAAL,CAAyB,gBAAK,gBAAL,CAAzB,IACE,IAAInD,kBAAJ,CACE,CAACe,SAAD,CADF,EACeM,YADf,EAEE,UAAUd,WAAV,EAAuB+C,KAAvB,EAA8B;AAC5B,aAAO/C,YAAYiD,SAAZ,CAAsBvC,eAAeqC,KAAf,CAAtB,CAAP;AACD,KAJH,CADF;;AAQA,SAAKH,mBAAL,CAAyB,gBAAK,gBAAL,CAAzB,IACE,IAAInD,kBAAJ,CACE,CAACe,SAAD,CADF,EACeM,YADf,EAEE,UAAUd,WAAV,EAAuB+C,KAAvB,EAA8B;AAC5B,UAAIW,MAAM1D,YAAYiD,SAAZ,CAAsBvC,eAAeqC,KAAf,CAAtB,CAAV;AACA,aAAOzC,cAAcoD,IAAI1B,EAAJ,CAAO,wBAAiB,CAAjB,CAAP,CAAd,CAAP;AACD,KALH,CADF;;AASA,SAAKY,mBAAL,CAAyB,gBAAK,cAAL,CAAzB,IACE,IAAInD,kBAAJ,CACE,CAACkB,OAAD,CADF,EACaG,YADb,EAEE,UAAUd,WAAV,EAAuBmD,GAAvB,EAA4B;AAC1B,aAAO7C,cAAcN,YAAYV,OAAZ,CAAoBuB,aAAasC,GAAb,CAApB,CAAd,CAAP;AACD,KAJH,CADF;;AAQA,SAAKP,mBAAL,CAAyB,gBAAK,WAAL,CAAzB,IACE,IAAInD,kBAAJ,CACE,CAACQ,OAAD,CADF,EAEE,UAAUxL,QAAV,EAAoBC,MAApB,EAA4BsL,WAA5B,EAAyCnL,IAAzC,EAA+C;AAC7C,UAAI2F,QAAQ3F,KAAK,CAAL,CAAZ;AACAwN,wBAAkB5N,QAAlB,EAA4BC,MAA5B,EAAoC8F,KAApC,EAA2C4G,gBAA3C;AACD,KALH,EAME,UAAUpB,WAAV,EAAuBxF,KAAvB,EAA8B;AAC5B,aAAOyH,YAAYzH,KAAZ,CAAP;AACD,KARH,CADF;;AAYA,SAAKoI,mBAAL,CAAyB,gBAAK,WAAL,CAAzB,IACE,IAAInD,kBAAJ,CACE,CAACQ,OAAD,CADF,EAEE,UAAUxL,QAAV,EAAoBC,MAApB,EAA4BsL,WAA5B,EAAyCnL,IAAzC,EAA+C;AAC7C,UAAI2F,QAAQ3F,KAAK,CAAL,CAAZ;AACAwN,wBAAkB5N,QAAlB,EAA4BC,MAA5B,EAAoC8F,KAApC,EAA2C4G,gBAA3C;AACD,KALH,EAME,UAAUpB,WAAV,EAAuBxF,KAAvB,EAA8B;AAC5B,aAAO0H,YAAY1H,KAAZ,CAAP;AACD,KARH,CADF;;AAYA,SAAKoI,mBAAL,CAAyB,gBAAK,eAAL,CAAzB,IACE,IAAInD,kBAAJ,CACE,CAACQ,OAAD,CADF,EAEE,UAAUxL,QAAV,EAAoBC,MAApB,EAA4BsL,WAA5B,EAAyCnL,IAAzC,EAA+C;AAC7C,UAAI2F,QAAQ3F,KAAK,CAAL,CAAZ;AACAwN,wBAAkB5N,QAAlB,EAA4BC,MAA5B,EAAoC8F,KAApC,EAA2C4G,gBAA3C;AACD,KALH,EAME,UAAUpB,WAAV,EAAuBxF,KAAvB,EAA8B;AAC5B,aAAO2H,gBAAgB3H,KAAhB,CAAP;AACD,KARH,CADF;;AAYA,SAAKoI,mBAAL,CAAyB,gBAAK,cAAL,CAAzB,IACE,IAAInD,kBAAJ,CACE,EADF,EACMqB,YADN,EAEE,UAAUd,WAAV,EAAuB;AACrB,aAAOM,cAAc,KAAd,CAAP;AACD,KAJH,CADF;;AAQA,SAAKsC,mBAAL,CAAyB,gBAAK,cAAL,CAAzB,IACE,IAAInD,kBAAJ,CACE,EADF,EACMqB,YADN,EAEE,UAAUd,WAAV,EAAuB;AACrB,aAAOM,cAAc,IAAd,CAAP;AACD,KAJH,CADF;;AAQA,SAAKsC,mBAAL,CAAyB,gBAAK,eAAL,CAAzB,IACE,IAAInD,kBAAJ,CACE,EADF,EACMqB,YADN,EAEE,UAAUd,WAAV,EAAuB;AACrB,aAAOS,eAAe9D,YAAY,CAAZ,CAAf,CAAP;AACD,KAJH,CADF;;AAQA,SAAKiG,mBAAL,CAAyB,gBAAK,eAAL,CAAzB,IACE,IAAInD,kBAAJ,CACE,EADF,EACMqB,YADN,EAEE,UAAUd,WAAV,EAAuB;AACrB,aAAOS,eAAe9D,YAAYA,YAAY5K,MAAZ,GAAqB,CAAjC,CAAf,CAAP;AACD,KAJH,CADF;;AAQA,SAAK6Q,mBAAL,CAAyB,gBAAK,aAAL,CAAzB,IACE,IAAInD,kBAAJ,CACE,EADF,EACMqB,YADN,EAEE,UAAUd,WAAV,EAAuB;AACrB,aAAOY,aAAahE,UAAU,CAAV,CAAb,CAAP;AACD,KAJH,CADF;;AAQA,SAAKgG,mBAAL,CAAyB,gBAAK,aAAL,CAAzB,IACE,IAAInD,kBAAJ,CACE,EADF,EACMqB,YADN,EAEE,UAAUd,WAAV,EAAuB;AACrB,aAAOY,aAAahE,UAAUA,UAAU7K,MAAV,GAAmB,CAA7B,CAAb,CAAP;AACD,KAJH,CADF;;AAQA;;AAEA,SAAK6Q,mBAAL,CAAyB,GAAzB,IACE,IAAInD,kBAAJ,CACE,CAACS,WAAD,EAAcA,WAAd,CADF,EAC8BY,YAD9B,EAEE,UAAUd,WAAV,EAAuBuB,CAAvB,EAA0BC,CAA1B,EAA6B;AAC3B,aAAOD,EAAEpC,GAAF,CAAMqC,CAAN,CAAP;AACD,KAJH,CADF;;AAQA,SAAKoB,mBAAL,CAAyB,GAAzB,IACE,IAAInD,kBAAJ,CACE,CAACS,WAAD,EAAcA,WAAd,CADF,EAC8BY,YAD9B,EAEE,UAAUd,WAAV,EAAuBuB,CAAvB,EAA0BC,CAA1B,EAA6B;AAC3B,aAAOD,EAAElC,GAAF,CAAMmC,CAAN,CAAP;AACD,KAJH,CADF;;AAQA,SAAKoB,mBAAL,CAAyB,GAAzB,IACE,IAAInD,kBAAJ,CACE,CAACS,WAAD,EAAcA,WAAd,CADF,EAC8BY,YAD9B,EAEE,UAAUd,WAAV,EAAuBuB,CAAvB,EAA0BC,CAA1B,EAA6B;AAC3B,aAAOD,EAAEoC,GAAF,CAAMnC,CAAN,CAAP;AACD,KAJH,CADF;;AAQA,SAAKoB,mBAAL,CAAyB,KAAzB,IACE,IAAInD,kBAAJ,CACE,CAACS,WAAD,EAAcA,WAAd,CADF,EAEE,UAAUzL,QAAV,EAAoBC,MAApB,EAA4BsL,WAA5B,EAAyCnL,IAAzC,EAA+C;AAC7C,UAAI2M,IAAI3M,KAAK,CAAL,CAAR;AACA,UAAI2M,EAAEoC,EAAF,CAAK,wBAAiB,CAAjB,CAAL,CAAJ,EAA+B;AAC7BnH,aAAKhI,QAAL,EAAeC,MAAf,EAAuB,uBAAvB,EAAgD,EAAhD;AACD;AACF,KAPH,EAQE,UAAUsL,WAAV,EAAuBuB,CAAvB,EAA0BC,CAA1B,EAA6B;AAC3B,aAAOD,EAAEsC,GAAF,CAAMrC,CAAN,CAAP;AACD,KAVH,CADF;;AAcA,SAAKoB,mBAAL,CAAyB,KAAzB,IACE,IAAInD,kBAAJ,CACE,CAACS,WAAD,EAAcA,WAAd,CADF,EAEE,UAAUzL,QAAV,EAAoBC,MAApB,EAA4BsL,WAA5B,EAAyCnL,IAAzC,EAA+C;AAC7C,UAAI2M,IAAI3M,KAAK,CAAL,CAAR;AACA,UAAI2M,EAAEoC,EAAF,CAAK,wBAAiB,CAAjB,CAAL,CAAJ,EAA+B;AAC7BnH,aAAKhI,QAAL,EAAeC,MAAf,EAAuB,uBAAvB,EAAgD,EAAhD;AACD;AACF,KAPH,EAQE,UAAUsL,WAAV,EAAuBuB,CAAvB,EAA0BC,CAA1B,EAA6B;AAC3B,aAAOD,EAAEuC,GAAF,CAAMtC,CAAN,CAAP;AACD,KAVH,CADF;;AAcA,SAAKoB,mBAAL,CAAyB,UAAzB,IACE,IAAInD,kBAAJ,CACE,CAACQ,OAAD,CADF,EAEE,UAAUxL,QAAV,EAAoBC,MAApB,EAA4BsL,WAA5B,EAAyCnL,IAAzC,EAA+C;AAC7C,UAAI0M,IAAI1M,KAAK,CAAL,CAAR;AACAwN,wBAAkB5N,QAAlB,EAA4BC,MAA5B,EAAoC6M,CAApC,EAAuCJ,mBAAvC;AACD,KALH,EAME,UAAUnB,WAAV,EAAuBuB,CAAvB,EAA0B;AACxB,aAAOY,gBAAgBZ,CAAhB,CAAP;AACD,KARH,CADF;;AAYA;;AAEA,SAAKqB,mBAAL,CAAyB,IAAzB,IACE,IAAInD,kBAAJ,CACE,CAACQ,OAAD,EAAUA,OAAV,CADF,EAEE,UAAUxL,QAAV,EAAoBC,MAApB,EAA4BsL,WAA5B,EAAyCnL,IAAzC,EAA+C;AAC7C,UAAI0M,IAAI1M,KAAK,CAAL,CAAR;AACA,UAAI2M,IAAI3M,KAAK,CAAL,CAAR;AACA2N,8BAAwB/N,QAAxB,EAAkCC,MAAlC,EAA0C6M,CAA1C,EAA6CC,CAA7C;AACD,KANH,EAOE,UAAUxB,WAAV,EAAuBuB,CAAvB,EAA0BC,CAA1B,EAA6B;AAC3B,aAAOlB,cAAciB,EAAEwC,KAAF,CAAQvC,CAAR,CAAd,CAAP;AACD,KATH,CADF;;AAaA,SAAKoB,mBAAL,CAAyB,IAAzB,IACE,IAAInD,kBAAJ,CACE,CAACQ,OAAD,EAAUA,OAAV,CADF,EAEE,UAAUxL,QAAV,EAAoBC,MAApB,EAA4BsL,WAA5B,EAAyCnL,IAAzC,EAA+C;AAC7C,UAAI0M,IAAI1M,KAAK,CAAL,CAAR;AACA,UAAI2M,IAAI3M,KAAK,CAAL,CAAR;AACA2N,8BAAwB/N,QAAxB,EAAkCC,MAAlC,EAA0C6M,CAA1C,EAA6CC,CAA7C;AACD,KANH,EAOE,UAAUxB,WAAV,EAAuBuB,CAAvB,EAA0BC,CAA1B,EAA6B;AAC3B,aAAOlB,cAAc,CAACiB,EAAEwC,KAAF,CAAQvC,CAAR,CAAf,CAAP;AACD,KATH,CADF;;AAaA,SAAKoB,mBAAL,CAAyB,IAAzB,IACE,IAAInD,kBAAJ,CACE,CAACQ,OAAD,EAAUA,OAAV,CADF,EAEE,UAAUxL,QAAV,EAAoBC,MAApB,EAA4BsL,WAA5B,EAAyCnL,IAAzC,EAA+C;AAC7C,UAAI0M,IAAI1M,KAAK,CAAL,CAAR;AACA,UAAI2M,IAAI3M,KAAK,CAAL,CAAR;AACA2N,8BAAwB/N,QAAxB,EAAkCC,MAAlC,EAA0C6M,CAA1C,EAA6CC,CAA7C;AACAa,wBAAkB5N,QAAlB,EAA4BC,MAA5B,EAAoC6M,CAApC,EAAuCH,gBAAvC;AACAiB,wBAAkB5N,QAAlB,EAA4BC,MAA5B,EAAoC8M,CAApC,EAAuCJ,gBAAvC;AACD,KARH,EASE,UAAUpB,WAAV,EAAuBuB,CAAvB,EAA0BC,CAA1B,EAA6B;AAC3B,aAAOF,UAAUC,CAAV,EAAaC,CAAb,CAAP;AACD,KAXH,CADF;;AAeA,SAAKoB,mBAAL,CAAyB,IAAzB,IACE,IAAInD,kBAAJ,CACE,CAACQ,OAAD,EAAUA,OAAV,CADF,EAEE,UAAUxL,QAAV,EAAoBC,MAApB,EAA4BsL,WAA5B,EAAyCnL,IAAzC,EAA+C;AAC7C,UAAI0M,IAAI1M,KAAK,CAAL,CAAR;AACA,UAAI2M,IAAI3M,KAAK,CAAL,CAAR;AACA2N,8BAAwB/N,QAAxB,EAAkCC,MAAlC,EAA0C6M,CAA1C,EAA6CC,CAA7C;AACAa,wBAAkB5N,QAAlB,EAA4BC,MAA5B,EAAoC6M,CAApC,EAAuCH,gBAAvC;AACAiB,wBAAkB5N,QAAlB,EAA4BC,MAA5B,EAAoC8M,CAApC,EAAuCJ,gBAAvC;AACD,KARH,EASE,UAAUpB,WAAV,EAAuBuB,CAAvB,EAA0BC,CAA1B,EAA6B;AAC3B,aAAOG,UAAUJ,CAAV,EAAaC,CAAb,CAAP;AACD,KAXH,CADF;;AAeA,SAAKoB,mBAAL,CAAyB,GAAzB,IACE,IAAInD,kBAAJ,CACE,CAACQ,OAAD,EAAUA,OAAV,CADF,EAEE,UAAUxL,QAAV,EAAoBC,MAApB,EAA4BsL,WAA5B,EAAyCnL,IAAzC,EAA+C;AAC7C,UAAI0M,IAAI1M,KAAK,CAAL,CAAR;AACA,UAAI2M,IAAI3M,KAAK,CAAL,CAAR;AACA2N,8BAAwB/N,QAAxB,EAAkCC,MAAlC,EAA0C6M,CAA1C,EAA6CC,CAA7C;AACAa,wBAAkB5N,QAAlB,EAA4BC,MAA5B,EAAoC6M,CAApC,EAAuCH,gBAAvC;AACAiB,wBAAkB5N,QAAlB,EAA4BC,MAA5B,EAAoC8M,CAApC,EAAuCJ,gBAAvC;AACD,KARH,EASE,UAAUpB,WAAV,EAAuBuB,CAAvB,EAA0BC,CAA1B,EAA6B;AAC3B,aAAOK,UAAUN,CAAV,EAAaC,CAAb,CAAP;AACD,KAXH,CADF;;AAeA,SAAKoB,mBAAL,CAAyB,GAAzB,IACE,IAAInD,kBAAJ,CACE,CAACQ,OAAD,EAAUA,OAAV,CADF,EAEE,UAAUxL,QAAV,EAAoBC,MAApB,EAA4BsL,WAA5B,EAAyCnL,IAAzC,EAA+C;AAC7C,UAAI0M,IAAI1M,KAAK,CAAL,CAAR;AACA,UAAI2M,IAAI3M,KAAK,CAAL,CAAR;AACA2N,8BAAwB/N,QAAxB,EAAkCC,MAAlC,EAA0C6M,CAA1C,EAA6CC,CAA7C;AACAa,wBAAkB5N,QAAlB,EAA4BC,MAA5B,EAAoC6M,CAApC,EAAuCH,gBAAvC;AACAiB,wBAAkB5N,QAAlB,EAA4BC,MAA5B,EAAoC8M,CAApC,EAAuCJ,gBAAvC;AACD,KARH,EASE,UAAUpB,WAAV,EAAuBuB,CAAvB,EAA0BC,CAA1B,EAA6B;AAC3B,aAAOO,UAAUR,CAAV,EAAaC,CAAb,CAAP;AACD,KAXH,CADF;;AAeA;AACA,SAAKoB,mBAAL,CAAyB,IAAzB,IACE,IAAInD,kBAAJ,CACE,CAACY,WAAD,EAAcA,WAAd,CADF,EAEE,UAAU5L,QAAV,EAAoBC,MAApB,EAA4BsL,WAA5B,EAAyCnL,IAAzC,EAA+C;AAC7C,UAAI0M,IAAI1M,KAAK,CAAL,CAAR;AACA,UAAI2M,IAAI3M,KAAK,CAAL,CAAR;AACA2N,8BAAwB/N,QAAxB,EAAkCC,MAAlC,EAA0C6M,CAA1C,EAA6CC,CAA7C;AACD,KANH,EAOE,UAAUxB,WAAV,EAAuBuB,CAAvB,EAA0BC,CAA1B,EAA6B;AAC3B,aAAOD,EAAEyC,MAAF,CAASxC,CAAT,CAAP;AACD,KATH,CADF;;AAaA,SAAKoB,mBAAL,CAAyB,gBAAK,WAAL,CAAzB,IACE,IAAInD,kBAAJ,CACE,CAACY,WAAD,CADF,EAEE,UAAU5L,QAAV,EAAoBC,MAApB,EAA4BsL,WAA5B,EAAyCnL,IAAzC,EAA+C;AAC7C,UAAI0M,IAAI1M,KAAK,CAAL,CAAR;AACA,UAAI0M,EAAExP,MAAF,OAAe,CAAnB,EAAsB;AACpB0K,aAAKhI,QAAL,EAAeC,MAAf,EAAuB,sBAAvB,EAA+C,EAA/C;AACD;AACF,KAPH,EAQE,UAAUsL,WAAV,EAAuBuB,CAAvB,EAA0B;AACxB,aAAOA,EAAEvC,IAAF,EAAP;AACD,KAVH,CADF;;AAcA,SAAK4D,mBAAL,CAAyB,gBAAK,WAAL,CAAzB,IACE,IAAInD,kBAAJ,CACE,CAACY,WAAD,CADF,EAEE,UAAU5L,QAAV,EAAoBC,MAApB,EAA4BsL,WAA5B,EAAyCnL,IAAzC,EAA+C;AAC7C,UAAI0M,IAAI1M,KAAK,CAAL,CAAR;AACA,UAAI0M,EAAExP,MAAF,OAAe,CAAnB,EAAsB;AACpB0K,aAAKhI,QAAL,EAAeC,MAAf,EAAuB,sBAAvB,EAA+C,EAA/C;AACD;AACF,KAPH,EAQE,UAAUsL,WAAV,EAAuBuB,CAAvB,EAA0B;AACxB,aAAOA,EAAE0C,IAAF,EAAP;AACD,KAVH,CADF;;AAcA,SAAKrB,mBAAL,CAAyB,gBAAK,WAAL,CAAzB,IACE,IAAInD,kBAAJ,CACE,CAACY,WAAD,CADF,EAEE,UAAU5L,QAAV,EAAoBC,MAApB,EAA4BsL,WAA5B,EAAyCnL,IAAzC,EAA+C;AAC7C,UAAI0M,IAAI1M,KAAK,CAAL,CAAR;AACA,UAAI0M,EAAExP,MAAF,OAAe,CAAnB,EAAsB;AACpB0K,aAAKhI,QAAL,EAAeC,MAAf,EAAuB,sBAAvB,EAA+C,EAA/C;AACD;AACF,KAPH,EAQE,UAAUsL,WAAV,EAAuBuB,CAAvB,EAA0B;AACxB,aAAOA,EAAE2C,IAAF,EAAP;AACD,KAVH,CADF;;AAcA,SAAKtB,mBAAL,CAAyB,gBAAK,WAAL,CAAzB,IACE,IAAInD,kBAAJ,CACE,CAACY,WAAD,CADF,EAEE,UAAU5L,QAAV,EAAoBC,MAApB,EAA4BsL,WAA5B,EAAyCnL,IAAzC,EAA+C;AAC7C,UAAI0M,IAAI1M,KAAK,CAAL,CAAR;AACA,UAAI0M,EAAExP,MAAF,OAAe,CAAnB,EAAsB;AACpB0K,aAAKhI,QAAL,EAAeC,MAAf,EAAuB,sBAAvB,EAA+C,EAA/C;AACD;AACF,KAPH,EAQE,UAAUsL,WAAV,EAAuBuB,CAAvB,EAA0B;AACxB,aAAOA,EAAE3F,IAAF,EAAP;AACD,KAVH,CADF;AAcD;;AAED;;;;4BAEQ;AACN,UAAIuI,YAAY,EAAhB;AACA,WAAK,IAAIhL,QAAT,IAAqB,KAAKuJ,eAA1B,EAA2C;AACzCyB,kBAAUzM,IAAV,CAAeyB,QAAf;AACD;AACD,aAAOgL,SAAP;AACD;;;qCAEgBhL,Q,EAAU;AACzB,UAAI,EAAEA,YAAY,KAAKuJ,eAAnB,CAAJ,EAAyC;AACvC,cAAMrO,MAAM,2BAA2B8E,QAAjC,CAAN;AACD;AACD,UAAItH,mBAAmB,EAAvB;AACA,WAAK,IAAIV,eAAT,IAA4B,KAAKuR,eAAL,CAAqBvJ,QAArB,CAA5B,EAA4D;AAC1DtH,yBAAiB6F,IAAjB,CAAsBvG,eAAtB;AACD;AACD,aAAOU,gBAAP;AACD;;;sCAEiBsH,Q,EAAUhI,e,EAAiB;AAC3C,UAAI,EAAEgI,YAAY,KAAKuJ,eAAnB,CAAJ,EAAyC;AACvC,cAAMrO,MAAM,2BAA2B8E,QAAjC,CAAN;AACD;AACD,UAAI,EAAEhI,mBAAmB,KAAKuR,eAAL,CAAqBvJ,QAArB,CAArB,CAAJ,EAA0D;AACxD,cAAM9E,MAAM,kCAAkClD,eAAxC,CAAN;AACD;AACD,aAAO,KAAKuR,eAAL,CAAqBvJ,QAArB,EAA+BhI,eAA/B,CAAP;AACD;;AAED;;;;gCAEY6B,a,EAAe;AACzB,aAAOA,iBAAiB,KAAK2P,oBAAtB,IACA3P,iBAAiB,KAAK4P,mBAD7B;AAED;;;iCAEY5P,a,EAAe;AAC1B,UAAIA,iBAAiB,KAAK2P,oBAA1B,EAAgD;AAC9C,eAAO,KAAKA,oBAAL,CAA0B3P,aAA1B,CAAP;AACD,OAFD,MAEO,IAAIA,iBAAiB,KAAK4P,mBAA1B,EAA+C;AACpD,eAAO,KAAKA,mBAAL,CAAyB5P,aAAzB,CAAP;AACD,OAFM,MAEA;AACL,cAAMqB,MAAMrB,gBAAgB,sBAAtB,CAAN;AACD;AACF;;AAED;;;;iCAEa;AACX,UAAIoR,iBAAiB,EAArB;AACA,WAAK,IAAIxJ,aAAT,IAA0B,KAAK+H,oBAA/B,EAAqD;AACnDyB,uBAAe1M,IAAf,CAAoBkD,aAApB;AACD;AACD,aAAOwJ,cAAP;AACD;;;gCAEWpR,a,EAAe;AACzB,aAAOA,iBAAiB,KAAK2P,oBAA7B;AACD;;AAED;;;;gCAEY;AACV,UAAI0B,gBAAgB,EAApB;AACA,WAAK,IAAIhI,YAAT,IAAyB,KAAKuG,mBAA9B,EAAmD;AACjDyB,sBAAc3M,IAAd,CAAmB2E,YAAnB;AACD;AACD,aAAOgI,aAAP;AACD;;;+BAEUrR,a,EAAe;AACxB,aAAOA,iBAAiB,KAAK4P,mBAA7B;AACD;;;;;;;;;;;;;;;;;;;;QC18Ba0B,S,GAAAA,S;;AAzMhB;;AACA;;;;;;;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwDA,IAAMC,SAASlP,OAAOC,GAAP,CAAW,QAAX,CAAf;AACA,IAAMkP,aAAanP,OAAOC,GAAP,CAAW,YAAX,CAAnB;AACA,IAAMmP,YAAYpP,OAAOC,GAAP,CAAW,WAAX,CAAlB;AACA,IAAMoP,WAAWrP,OAAOC,GAAP,CAAW,UAAX,CAAjB;AACA,IAAMqP,UAAUtP,OAAOC,GAAP,CAAW,SAAX,CAAhB;AACA,IAAMsP,eAAevP,OAAOC,GAAP,CAAW,cAAX,CAArB;;IAEMuP,I;AACJ,gBAAY9M,GAAZ,EAAiB;AAAA;;AACf,SAAKM,IAAL,GAAYN,GAAZ;AACD;;;;wBAES;AACR,aAAO,KAAKM,IAAZ;AACD;;;;;;IAGUyM,O,WAAAA,O;;;AACX,qBAAc;AAAA;;AAAA,6GACNP,MADM;AAEb;;;;+BAEU;AACT,aAAO,GAAP;AACD;;;;EAP0BM,I;;IAUhBE,W,WAAAA,W;;;AACX,yBAAc;AAAA;;AAAA,qHACNP,UADM;AAEb;;;;+BAEU;AACT,aAAO,gBAAK,cAAL,CAAP;AACD;;;;EAP8BK,I;;IAUpBG,U,WAAAA,U;;;AACX,wBAAc;AAAA;;AAAA,mHACNP,SADM;AAEb;;;;+BAEU;AACT,aAAO,gBAAK,aAAL,CAAP;AACD;;;;EAP6BI,I;;IAUnBI,S,WAAAA,S;;;AACX,qBAAYC,cAAZ,EAA4B;AAAA;;AAAA,uHACpBR,QADoB;;AAE1B,WAAKS,eAAL,GAAuBD,cAAvB;AAF0B;AAG3B;;;;+BAMU;AACT,UAAI3R,UAAU,EAAd;AADS;AAAA;AAAA;;AAAA;AAET,6BAAc,KAAK4R,eAAnB,8HAAoC;AAAA,cAA3BC,CAA2B;;AAClC7R,kBAAQmE,IAAR,CAAa0N,EAAE5U,QAAF,EAAb;AACD;AAJQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKT,aAAO,gBAAK,YAAL,IAAqB,GAArB,GAA2B+C,QAAQvB,IAAR,CAAa,IAAb,CAA3B,GAAgD,GAAvD;AACD;;;wBAVoB;AACnB,aAAO,KAAKmT,eAAZ;AACD;;;;EAR4BN,I;;IAmBlBQ,Q,WAAAA,Q;;;AACX,oBAAYC,WAAZ,EAAyB;AAAA;;AAAA,qHACjBX,OADiB;;AAEvB,WAAKY,YAAL,GAAoBD,WAApB;AAFuB;AAGxB;;;;+BAMU;AACT,aAAO,gBAAK,WAAL,IAAoB,GAApB,GAA0B,KAAKC,YAAL,CAAkB/U,QAAlB,EAA1B,GAAyD,GAAhE;AACD;;;wBANiB;AAChB,aAAO,KAAK+U,YAAZ;AACD;;;;EAR2BV,I;;IAejBW,a,WAAAA,a;;;AACX,yBAAYrM,QAAZ,EAAsBsM,KAAtB,EAA6B;AAAA;;AAAA,+HACrBb,YADqB;;AAE3B,WAAKc,SAAL,GAAiBvM,QAAjB;AACA,WAAKwM,MAAL,GAAcF,KAAd;AAH2B;AAI5B;;;;+BAUU;AACT,UAAIG,cAAc,EAAlB;AADS;AAAA;AAAA;;AAAA;AAET,8BAA4BC,WAAW,KAAKF,MAAhB,CAA5B,mIAAqD;AAAA,cAA5CxU,eAA4C;;AACnD,cAAI2U,aAAa,KAAKH,MAAL,CAAYxU,eAAZ,CAAjB;AACA,cAAI4U,eAAe,EAAnB;AAFmD;AAAA;AAAA;;AAAA;AAGnD,kCAAsBF,WAAWC,UAAX,CAAtB,mIAA8C;AAAA,kBAArC1U,SAAqC;;AAC5C2U,2BAAarO,IAAb,CACEtG,YAAY,MAAZ,GAAqB0U,WAAW1U,SAAX,EAAsBZ,QAAtB,EADvB;AAGD;AAPkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQnD,cAAIwV,uBAAuB,KAAKN,SAAL,GAAiB,GAAjB,GAAuBvU,eAAlD;AACA,cAAI4U,aAAahU,MAAb,KAAwB,CAA5B,EAA+B;AAC7B6T,wBAAYlO,IAAZ,CAAiBsO,oBAAjB;AACD,WAFD,MAEO;AACLJ,wBAAYlO,IAAZ,CACEsO,uBAAuB,GAAvB,GAA6BD,aAAa/T,IAAb,CAAkB,IAAlB,CAA7B,GAAuD,GADzD;AAGD;AACF;AAlBQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAmBT,UAAI4T,YAAY7T,MAAZ,KAAuB,CAA3B,EAA8B;AAC5B,eAAO,KAAK2T,SAAZ;AACD,OAFD,MAEO;AACL,eAAOE,YAAY5T,IAAZ,CAAiB,KAAjB,CAAP;AACD;AACF;;;wBAhCc;AACb,aAAO,KAAK0T,SAAZ;AACD;;;wBAEW;AACV,aAAO,KAAKC,MAAZ;AACD;;;;EAbgCd,I;;AA0CnC;;;;;;;;;;;;;AAaA;;;AACA,IAAIoB,uBAAJ;AACA,IAAIC,sBAAJ;AACA,IAAIC,2BAAJ;AACA,IAAIC,mBAAJ;;AAEO,SAAS9B,SAAT,CAAmBnR,KAAnB,EAA0BC,KAA1B,EAAiC;AACtC,MAAID,UAAU,IAAV,IAAkBC,UAAU,IAAhC,EAAsC;AACpC,WAAO,IAAP;AACD,GAFD,MAEO,IAAID,MAAM4E,GAAN,KAAcwM,MAAlB,EAA0B;AAC/B,WAAOnR,KAAP;AACD,GAFM,MAEA,IAAIA,MAAM2E,GAAN,KAAcwM,MAAlB,EAA0B;AAC/B,WAAOpR,KAAP;AACD,GAFM,MAEA,IAAIA,MAAM4E,GAAN,KAAcyM,UAAd,IAA4BpR,MAAM2E,GAAN,KAAcyM,UAA9C,EAA0D;AAC/D,WAAOrR,KAAP;AACD,GAFM,MAEA,IAAIA,MAAM4E,GAAN,KAAc0M,SAAd,IAA2BrR,MAAM2E,GAAN,KAAc0M,SAA7C,EAAwD;AAC7D,WAAOtR,KAAP;AACD,GAFM,MAEA,IAAIA,MAAM4E,GAAN,KAAc2M,QAAd,IAA0BtR,MAAM2E,GAAN,KAAc2M,QAA5C,EAAsD;AAC3D,WAAOuB,eAAe9S,KAAf,EAAsBC,KAAtB,CAAP;AACD,GAFM,MAEA,IAAID,MAAM4E,GAAN,KAAc4M,OAAd,IAAyBvR,MAAM2E,GAAN,KAAc4M,OAA3C,EAAoD;AACzD,WAAOuB,cAAc/S,KAAd,EAAqBC,KAArB,CAAP;AACD,GAFM,MAEA,IAAID,MAAM4E,GAAN,KAAc6M,YAAd,IAA8BxR,MAAM2E,GAAN,KAAc6M,YAAhD,EAA8D;AACnE,WAAOuB,mBAAmBhT,KAAnB,EAA0BC,KAA1B,CAAP;AACD,GAFM,MAEA;AACL;AACA,WAAO,IAAP;AACD;AACF;;AAED6S,iBAAiB,wBAAU9S,KAAV,EAAiBC,KAAjB,EAAwB;AACvC,MAAID,MAAM+R,cAAN,CAAqBnT,MAArB,KAAgCqB,MAAM8R,cAAN,CAAqBnT,MAAzD,EAAiE;AAC/D;AACA,WAAO,IAAP;AACD;AACD,MAAIsU,mBAAmB,EAAvB;AACA,OAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAInT,MAAM+R,cAAN,CAAqBnT,MAAzC,EAAiDuU,GAAjD,EAAsD;AACpD,QAAIC,KAAKpT,MAAM+R,cAAN,CAAqBoB,CAArB,CAAT;AACA,QAAIE,KAAKpT,MAAM8R,cAAN,CAAqBoB,CAArB,CAAT;AACA,QAAIG,KAAKnC,UAAUiC,EAAV,EAAcC,EAAd,CAAT;AACA,QAAIC,OAAO,IAAX,EAAiB;AACf;AACA,aAAO,IAAP;AACD;AACDJ,qBAAiB3O,IAAjB,CAAsB+O,EAAtB;AACD;AACD,SAAO,IAAIxB,SAAJ,CAAcoB,gBAAd,CAAP;AACD,CAjBD;;AAmBAH,gBAAgB,uBAAU/S,KAAV,EAAiBC,KAAjB,EAAwB;AACtC,MAAIsT,gBAAgBpC,UAAUnR,MAAMmS,WAAhB,EAA6BlS,MAAMkS,WAAnC,CAApB;AACA,MAAIoB,kBAAkB,IAAtB,EAA4B;AAC1B;AACA,WAAO,IAAP;AACD;AACD,SAAO,IAAIrB,QAAJ,CAAaqB,aAAb,CAAP;AACD,CAPD;;AASA;;;;;;;;;;AAUAP,qBAAqB,4BAAUhT,KAAV,EAAiBC,KAAjB,EAAwB;AAC3C,MAAID,MAAMgG,QAAN,KAAmB/F,MAAM+F,QAA7B,EAAuC;AACrC,WAAO,IAAP;AACD;;AAED,MAAIwN,cAAc,EAAlB;;AAEA;AACA,WAASC,UAAT,CAAoBC,KAApB,EAA2BC,KAA3B,EAAkC;AAChC,SAAK,IAAI3V,eAAT,IAA4B0V,MAAMpB,KAAlC,EAAyC;AACvC,UAAI,EAAEtU,mBAAmB2V,MAAMrB,KAA3B,CAAJ,EAAuC;AACrCkB,oBAAYxV,eAAZ,IAA+B0V,MAAMpB,KAAN,CAAYtU,eAAZ,CAA/B;AACD;AACF;AACF;AACDyV,aAAWzT,KAAX,EAAkBC,KAAlB;AACAwT,aAAWxT,KAAX,EAAkBD,KAAlB;;AAEA;AACA,OAAK,IAAIhC,eAAT,IAA4BgC,MAAMsS,KAAlC,EAAyC;AACvC,QAAItU,mBAAmBiC,MAAMqS,KAA7B,EAAoC;AAClC,UAAIsB,eAAeX,WACEjT,MAAMsS,KAAN,CAAYtU,eAAZ,CADF,EAEEiC,MAAMqS,KAAN,CAAYtU,eAAZ,CAFF,CAAnB;AAIA,UAAI4V,iBAAiB,IAArB,EAA2B;AACzB,eAAO,IAAP;AACD;AACDJ,kBAAYxV,eAAZ,IAA+B4V,YAA/B;AACD;AACF;;AAED,SAAO,IAAIvB,aAAJ,CAAkBrS,MAAMgG,QAAxB,EAAkCwN,WAAlC,CAAP;AACD,CAjCD;;AAmCAP,aAAa,oBAAUY,OAAV,EAAmBC,OAAnB,EAA4B;AACvC;AACA,WAASC,aAAT,CAAuBC,OAAvB,EAAgCC,OAAhC,EAAyC;AACvC,SAAK,IAAIhW,SAAT,IAAsB+V,OAAtB,EAA+B;AAC7B,UAAI,EAAE/V,aAAagW,OAAf,CAAJ,EAA6B;AAC3B,cAAM/S,MACJ,8DACA,qCAFI,CAAN;AAID;AACF;AACF;AACD6S,gBAAcF,OAAd,EAAuBC,OAAvB;AACAC,gBAAcD,OAAd,EAAuBD,OAAvB;;AAEA;AACA,MAAID,eAAe,EAAnB;AACA,OAAK,IAAI3V,SAAT,IAAsB4V,OAAtB,EAA+B;AAC7B,QAAI7T,QAAQ6T,QAAQ5V,SAAR,CAAZ;AACA,QAAIgC,QAAQ6T,QAAQ7V,SAAR,CAAZ;AACA,QAAIiW,cAAc/C,UAAUnR,KAAV,EAAiBC,KAAjB,CAAlB;AACA,QAAIiU,gBAAgB,IAApB,EAA0B;AACxB,aAAO,IAAP;AACD;AACDN,iBAAa3V,SAAb,IAA0BiW,WAA1B;AACD;AACD,SAAON,YAAP;AACD,CA3BD;;AA6BA;;AAEA,SAASlB,UAAT,CAAoByB,UAApB,EAAgC;AAC9B,MAAInK,OAAO,EAAX;AACA,OAAK,IAAIpJ,GAAT,IAAgBuT,UAAhB,EAA4B;AAC1BnK,SAAKzF,IAAL,CAAU3D,GAAV;AACD;AACD,SAAOoJ,KAAKoK,IAAL,EAAP;AACD;;AAED;AACO,IAAMC,gCAAYnS,OAAOC,GAAP,CAAW,WAAX,CAAlB;AACA,IAAMmS,8BAAWpS,OAAOC,GAAP,CAAW,UAAX,CAAjB;AACA,IAAMoS,4BAAUrS,OAAOC,GAAP,CAAW,SAAX,CAAhB;AACA,IAAMqS,0BAAStS,OAAOC,GAAP,CAAW,QAAX,CAAf;AACA,IAAMsS,oCAAcvS,OAAOC,GAAP,CAAW,aAAX,CAApB;;IAEMuS,K,WAAAA,K;AACX,iBAAY9P,GAAZ,EAAiB;AAAA;;AACf,SAAKM,IAAL,GAAYN,GAAZ;AACD;;;;2BAMM;AACL,aAAO,IAAI8M,IAAJ,CAAS,GAAT,EAAc,EAAd,CAAP;AACD;;;gCAEW;AACV,aAAO,KAAP;AACD;;;+BAEU;AACT,aAAO,KAAP;AACD;;;8BAES;AACR,aAAO,KAAP;AACD;;;6BAEQ;AACP,aAAO,KAAP;AACD;;;kCAEa;AACZ,aAAO,KAAP;AACD;;;gCAEW;AACV,aAAO,KAAP;AACD;;;wBA9BS;AACR,aAAO,KAAKxM,IAAZ;AACD;;;;;;IAgCUyP,Y,WAAAA,Y;;;AACX,wBAAYzM,MAAZ,EAAoB;AAAA;;AAAA,6HACZmM,SADY;;AAElB,QAAI,OAAOnM,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,aAAK0M,OAAL,GAAe1M,OAAO7K,QAAP,EAAf;AACD,KAFD,MAEO,IAAI,OAAO6K,MAAP,KAAkB,QAAtB,EAAgC;AACrC,aAAK0M,OAAL,GAAe1M,MAAf;AACD,KAFM,MAEA;AACL,YAAMhH,MACJ,+DADI,CAAN;AAGD;AAViB;AAWnB;;;;gCAEW;AACV,aAAO,IAAP;AACD;;;+BAEU;AACT,aAAO,KAAK0T,OAAZ;AACD;;;2BAMM;AACL,aAAO,IAAIhD,WAAJ,EAAP;AACD;;;0BAEKiD,K,EAAO;AACX,aAAOA,MAAMjQ,GAAN,KAAcyP,SAAd,IAA2B,KAAKnM,MAAL,KAAgB2M,MAAM3M,MAAxD;AACD;;;wBAEG2M,K,EAAO;AACT,UAAIzG,IAAI,qBAAQ,KAAKwG,OAAb,CAAR;AACA,UAAIvG,IAAI,qBAAQwG,MAAMD,OAAd,CAAR;AACA,aAAO,IAAID,YAAJ,CAAiBvG,EAAEpC,GAAF,CAAMqC,CAAN,EAAShR,QAAT,EAAjB,CAAP;AACD;;;wBAEGwX,K,EAAO;AACT,UAAIzG,IAAI,qBAAQ,KAAKwG,OAAb,CAAR;AACA,UAAIvG,IAAI,qBAAQwG,MAAMD,OAAd,CAAR;AACA,aAAO,IAAID,YAAJ,CAAiBvG,EAAE0G,QAAF,CAAWzG,CAAX,EAAchR,QAAd,EAAjB,CAAP;AACD;;;wBAEGwX,K,EAAO;AACT,UAAIzG,IAAI,qBAAQ,KAAKwG,OAAb,CAAR;AACA,UAAIvG,IAAI,qBAAQwG,MAAMD,OAAd,CAAR;AACA,aAAO,IAAID,YAAJ,CAAiBvG,EAAE2G,QAAF,CAAW1G,CAAX,EAAchR,QAAd,EAAjB,CAAP;AACD;;AAED;;;;;;;;;;;;;;;;;;;;wBAiBIwX,K,EAAO;AACT,UAAIG,IAAI,IAAIL,YAAJ,CAAiB,CAAjB,CAAR;AACA,UAAI,KAAK9F,EAAL,CAAQmG,CAAR,MAAeH,MAAMhG,EAAN,CAASmG,CAAT,CAAnB,EAAgC;AAC9B;AACA,YAAI5G,IAAI,qBAAQ,KAAK6G,GAAL,GAAWL,OAAnB,CAAR;AACA,YAAIvG,IAAI,qBAAQwG,MAAMI,GAAN,GAAYL,OAApB,CAAR;AACA,eAAO,IAAID,YAAJ,CAAiBvG,EAAE8G,MAAF,CAAS7G,CAAT,EAAYhR,QAAZ,EAAjB,CAAP;AACD,OALD,MAKO;AACL;AACA,YAAI8X,MAAMN,MAAMI,GAAN,GAAY/I,GAAZ,CAAgB,IAAIyI,YAAJ,CAAiB,CAAjB,CAAhB,CAAV;AACA,YAAIvG,KAAI,qBAAQ,KAAK6G,GAAL,GAAWjJ,GAAX,CAAemJ,GAAf,EAAoBP,OAA5B,CAAR;AACA,YAAIvG,KAAI,qBAAQwG,MAAMI,GAAN,GAAYL,OAApB,CAAR;AACA,eAAO,IAAID,YAAJ,CAAiBvG,GAAE8G,MAAF,CAAS7G,EAAT,EAAYY,MAAZ,GAAqB5R,QAArB,EAAjB,CAAP;AACD;AACF;;AAED;;;;;wBAEIwX,K,EAAO;AACT,UAAIO,IAAI,KAAK1E,GAAL,CAASmE,KAAT,CAAR;AACA,aAAO,KAAK3I,GAAL,CAASkJ,EAAE5E,GAAF,CAAMqE,KAAN,CAAT,CAAP;AACD;;;uBAEEA,K,EAAO;AACR,aAAO,KAAKjE,KAAL,CAAWiE,KAAX,CAAP;AACD;;;uBAEEA,K,EAAO;AACR,aAAO,CAAC,KAAKjE,KAAL,CAAWiE,KAAX,CAAR;AACD;;;uBAEEA,K,EAAO;AACR,UAAIzG,IAAI,qBAAQ,KAAKwG,OAAb,CAAR;AACA,UAAIvG,IAAI,qBAAQwG,MAAMD,OAAd,CAAR;AACA,aAAOxG,EAAEiH,GAAF,CAAMhH,CAAN,CAAP;AACD;;;uBAEEwG,K,EAAO;AACR,UAAIzG,IAAI,qBAAQ,KAAKwG,OAAb,CAAR;AACA,UAAIvG,IAAI,qBAAQwG,MAAMD,OAAd,CAAR;AACA,aAAOxG,EAAEO,EAAF,CAAKN,CAAL,CAAP;AACD;;;uBAEEwG,K,EAAO;AACR,UAAIzG,IAAI,qBAAQ,KAAKwG,OAAb,CAAR;AACA,UAAIvG,IAAI,qBAAQwG,MAAMD,OAAd,CAAR;AACA,aAAOxG,EAAEkH,GAAF,CAAMjH,CAAN,CAAP;AACD;;;uBAEEwG,K,EAAO;AACR,UAAIzG,IAAI,qBAAQ,KAAKwG,OAAb,CAAR;AACA,UAAIvG,IAAI,qBAAQwG,MAAMD,OAAd,CAAR;AACA,aAAOxG,EAAES,EAAF,CAAKR,CAAL,CAAP;AACD;;;6BAEQ;AACP,UAAID,IAAI,qBAAQ,KAAKwG,OAAb,CAAR;AACA,aAAO,IAAID,YAAJ,CAAiBvG,EAAEa,MAAF,GAAW5R,QAAX,EAAjB,CAAP;AACD;;;0BAEK;AACJ,UAAI,KAAKwR,EAAL,CAAQ,IAAI8F,YAAJ,CAAiB,CAAjB,CAAR,CAAJ,EAAkC;AAChC,eAAO,IAAP;AACD,OAFD,MAEO;AACL,eAAO,KAAK1F,MAAL,EAAP;AACD;AACF;;;+BAEU;AACT,aAAOlH,SAAS,KAAK6M,OAAd,EAAuB,EAAvB,CAAP;AACD;;;wBArHY;AACX,aAAO,KAAKA,OAAZ;AACD;;;;EAxB+BF,K;;IA8IrBa,W,WAAAA,W;;;AACX,uBAAYnR,MAAZ,EAAoB;AAAA;;AAAA,2HACZkQ,QADY;;AAElB,WAAKkB,OAAL,GAAepR,MAAf;AAFkB;AAGnB;;;;+BAEU;AACT,UAAIY,MAAM,CAAC,GAAD,CAAV;AACA,WAAK,IAAImO,IAAI,CAAb,EAAgBA,IAAI,KAAKqC,OAAL,CAAa5W,MAAjC,EAAyCuU,GAAzC,EAA8C;AAC5C,YAAIsC,MAAM,KAAKD,OAAL,CAAarC,CAAb,CAAV;AACA,gBAAQsC,GAAR;AACE,eAAK,GAAL;AACEzQ,gBAAIT,IAAJ,CAAS,IAAT;AACAS,gBAAIT,IAAJ,CAAS,GAAT;AACA;AACF,eAAK,IAAL;AACES,gBAAIT,IAAJ,CAAS,IAAT;AACAS,gBAAIT,IAAJ,CAAS,IAAT;AACA;AACF,eAAK,MAAL;AACES,gBAAIT,IAAJ,CAAS,IAAT;AACAS,gBAAIT,IAAJ,CAAS,GAAT;AACA;AACF,eAAK,IAAL;AACES,gBAAIT,IAAJ,CAAS,IAAT;AACAS,gBAAIT,IAAJ,CAAS,GAAT;AACA;AACF,eAAK,IAAL;AACES,gBAAIT,IAAJ,CAAS,IAAT;AACAS,gBAAIT,IAAJ,CAAS,GAAT;AACA;AACF,eAAK,IAAL;AACES,gBAAIT,IAAJ,CAAS,IAAT;AACAS,gBAAIT,IAAJ,CAAS,GAAT;AACA;AACF,eAAK,IAAL;AACES,gBAAIT,IAAJ,CAAS,IAAT;AACAS,gBAAIT,IAAJ,CAAS,GAAT;AACA;AACF,eAAK,IAAL;AACES,gBAAIT,IAAJ,CAAS,IAAT;AACAS,gBAAIT,IAAJ,CAAS,GAAT;AACA;AACF,eAAK,IAAL;AACES,gBAAIT,IAAJ,CAAS,IAAT;AACAS,gBAAIT,IAAJ,CAAS,GAAT;AACA;AACF;AACES,gBAAIT,IAAJ,CAASkR,GAAT;AACA;AAvCJ;AAyCD;AACDzQ,UAAIT,IAAJ,CAAS,GAAT;AACA,aAAOS,IAAInG,IAAJ,CAAS,EAAT,CAAP;AACD;;;+BAEU;AACT,aAAO,IAAP;AACD;;;0BAMKgW,K,EAAO;AACX,aAAOA,MAAMjQ,GAAN,KAAc0P,QAAd,IAA0B,KAAKlQ,MAAL,KAAgByQ,MAAMzQ,MAAvD;AACD;;;2BAEM;AACL,aAAO,IAAIyN,UAAJ,EAAP;AACD;;;wBAVY;AACX,aAAO,KAAK2D,OAAZ;AACD;;;;EA9D8Bd,K;;IAyEpBgB,U,WAAAA,U;;;AACX,sBAAYC,UAAZ,EAAwB;AAAA;;AAAA,yHAChBpB,OADgB;;AAEtB,WAAKqB,WAAL,GAAmBD,UAAnB;AACA,WAAKE,KAAL,GAAa,OAAKC,UAAL,EAAb;AAHsB;AAIvB;;;;+BAEU;AACT,UAAI9Q,MAAM,EAAV;AADS;AAAA;AAAA;;AAAA;AAET,8BAAsB,KAAK4Q,WAA3B,mIAAwC;AAAA,cAA/BG,SAA+B;;AACtC/Q,cAAIT,IAAJ,CAASwR,UAAU1Y,QAAV,EAAT;AACD;AAJQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKT,aAAO,MAAM2H,IAAInG,IAAJ,CAAS,IAAT,CAAN,GAAuB,GAA9B;AACD;;;2BAMM;AACL,aAAO,KAAK+W,WAAL,CAAiBhX,MAAxB;AACD;;;0BAEKiW,K,EAAO;AACX,UAAIA,MAAMjQ,GAAN,KAAc2P,OAAlB,EAA2B;AACzB,eAAO,KAAP;AACD;AACD,UAAI,KAAKoB,UAAL,CAAgB/W,MAAhB,KAA2BiW,MAAMc,UAAN,CAAiB/W,MAAhD,EAAwD;AACtD,eAAO,KAAP;AACD;AACD,WAAK,IAAIuU,IAAI,CAAb,EAAgBA,IAAI,KAAKwC,UAAL,CAAgB/W,MAApC,EAA4CuU,GAA5C,EAAiD;AAC/C,YAAI,CAAC,KAAKwC,UAAL,CAAgBxC,CAAhB,EAAmBvC,KAAnB,CAAyBiE,MAAMc,UAAN,CAAiBxC,CAAjB,CAAzB,CAAL,EAAoD;AAClD,iBAAO,KAAP;AACD;AACF;AACD,aAAO,IAAP;AACD;;;8BAES;AACR,aAAO,IAAP;AACD;;;2BAEM;AACL,aAAO,KAAK0C,KAAZ;AACD;;;iCAEY;AACX,UAAI9D,iBAAiB,EAArB;AADW;AAAA;AAAA;;AAAA;AAEX,8BAAsB,KAAK6D,WAA3B,mIAAwC;AAAA,cAA/BG,SAA+B;;AACtChE,yBAAexN,IAAf,CAAoBwR,UAAUvX,IAAV,EAApB;AACD;AAJU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKX,aAAO,IAAIsT,SAAJ,CAAcC,cAAd,CAAP;AACD;;;wBArCgB;AACf,aAAO,KAAK6D,WAAZ;AACD;;;;EAjB6BlB,K;;IAuDnBsB,S,WAAAA,S;;;AACX,qBAAY3N,QAAZ,EAAsB;AAAA;;AAAA,wHACdmM,MADc;;AAEpB,YAAKyB,SAAL,GAAiB5N,QAAjB;AACA,YAAKwN,KAAL,GAAa,QAAKC,UAAL,EAAb;AAHoB;AAIrB;;;;+BAEU;AACT,UAAI9Q,MAAM,EAAV;AADS;AAAA;AAAA;;AAAA;AAET,8BAAoB,KAAKiR,SAAzB,mIAAoC;AAAA,cAA3BC,OAA2B;;AAClClR,cAAIT,IAAJ,CAAS2R,QAAQ7Y,QAAR,EAAT;AACD;AAJQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKT,aAAO,MAAM2H,IAAInG,IAAJ,CAAS,IAAT,CAAN,GAAuB,GAA9B;AACD;;;0BAMKgW,K,EAAO;AACX,UAAIA,MAAMjQ,GAAN,KAAc4P,MAAlB,EAA0B;AACxB,eAAO,KAAP;AACD;AACD,UAAI,KAAKnM,QAAL,CAAczJ,MAAd,KAAyBiW,MAAMxM,QAAN,CAAezJ,MAA5C,EAAoD;AAClD,eAAO,KAAP;AACD;AACD,WAAK,IAAIuU,IAAI,CAAb,EAAgBA,IAAI,KAAK9K,QAAL,CAAczJ,MAAlC,EAA0CuU,GAA1C,EAA+C;AAC7C,YAAI,CAAC,KAAK9K,QAAL,CAAc8K,CAAd,EAAiBvC,KAAjB,CAAuBiE,MAAMxM,QAAN,CAAe8K,CAAf,CAAvB,CAAL,EAAgD;AAC9C,iBAAO,KAAP;AACD;AACF;AACD,aAAO,IAAP;AACD;;;2BAEM;AACL,aAAO,KAAK0C,KAAZ;AACD;;;6BAEQ;AACP,aAAO,IAAP;AACD;;;6BAEQ;AACP,aAAO,KAAKI,SAAL,CAAerX,MAAtB;AACD;;;iCAEY;AACX,UAAIuT,cAAc,IAAIR,OAAJ,EAAlB;AADW;AAAA;AAAA;;AAAA;AAEX,8BAAoB,KAAKsE,SAAzB,mIAAoC;AAAA,cAA3BC,OAA2B;;AAClC/D,wBAAchB,UAAUgB,WAAV,EAAuB+D,QAAQ1X,IAAR,EAAvB,CAAd;AACD;AAJU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKX,aAAO,IAAI0T,QAAJ,CAAaC,WAAb,CAAP;AACD;;;2BAEM0C,K,EAAO;AACZ,UAAIsB,cAAc,EAAlB;AADY;AAAA;AAAA;;AAAA;AAEZ,8BAAiB,KAAK9N,QAAtB,mIAAgC;AAAA,cAAvB+N,IAAuB;;AAC9BD,sBAAY5R,IAAZ,CAAiB6R,IAAjB;AACD;AAJW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAKZ,8BAAiBvB,MAAMxM,QAAvB,mIAAiC;AAAA,cAAxB+N,KAAwB;;AAC/BD,sBAAY5R,IAAZ,CAAiB6R,KAAjB;AACD;AAPW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQZ,aAAO,IAAIJ,SAAJ,CAAcG,WAAd,CAAP;AACD;;;2BAEM;AACL,aAAO,KAAK9N,QAAL,CAAc,CAAd,CAAP;AACD;;;2BAEM;AACL,UAAIA,WAAW,EAAf;AACA,WAAK,IAAI8K,IAAI,CAAb,EAAgBA,IAAI,KAAK9K,QAAL,CAAczJ,MAAlC,EAA0CuU,GAA1C,EAA+C;AAC7C9K,iBAAS9D,IAAT,CAAc,KAAK8D,QAAL,CAAc8K,CAAd,CAAd;AACD;AACD,aAAO,IAAI6C,SAAJ,CAAc3N,QAAd,CAAP;AACD;;;2BAEM;AACL,UAAIA,WAAW,EAAf;AACA,WAAK,IAAI8K,IAAI,CAAb,EAAgBA,IAAI,KAAK9K,QAAL,CAAczJ,MAAd,GAAuB,CAA3C,EAA8CuU,GAA9C,EAAmD;AACjD9K,iBAAS9D,IAAT,CAAc,KAAK8D,QAAL,CAAc8K,CAAd,CAAd;AACD;AACD,aAAO,IAAI6C,SAAJ,CAAc3N,QAAd,CAAP;AACD;;;2BAEM;AACL,aAAO,KAAKA,QAAL,CAAc,KAAKA,QAAL,CAAczJ,MAAd,GAAuB,CAArC,CAAP;AACD;;;wBAxEc;AACb,aAAO,KAAKqX,SAAZ;AACD;;;;EAjB4BvB,K;;AA2F/B;;;;;;;;;;;IASa2B,c,WAAAA,c;;;AAEX,0BAAYrQ,QAAZ,EAAsBhI,eAAtB,EAAuCsY,MAAvC,EAA+C;AAAA;;AAAA,kIACvC7B,WADuC;;AAE7C,YAAKlC,SAAL,GAAiBvM,QAAjB;AACA,YAAKuQ,gBAAL,GAAwBvY,eAAxB;AACA,YAAKwY,OAAL,GAAeF,MAAf;AAJ6C;AAK9C;;;;+BAEU;AACT,UAAItR,MAAM,EAAV;AACA,UAAIrF,aAAa,KAAKA,UAAL,EAAjB;AACA,UAAIA,WAAWf,MAAX,KAAsB,CAA1B,EAA6B;AAC3B,eAAO,KAAK2X,gBAAZ;AACD;AALQ;AAAA;AAAA;;AAAA;AAMT,+BAAsB5W,UAAtB,wIAAkC;AAAA,cAAzB1B,SAAyB;;AAChC+G,cAAIT,IAAJ,CAAStG,YAAY,MAAZ,GAAqB,KAAKqY,MAAL,CAAYrY,SAAZ,EAAuBZ,QAAvB,EAA9B;AACD;AARQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAST,aAAO,KAAKkZ,gBAAL,GAAwB,GAAxB,GAA8BvR,IAAInG,IAAJ,CAAS,IAAT,CAA9B,GAA+C,GAAtD;AACD;;;kCAEa;AACZ,aAAO,IAAP;AACD;;;gCAEW;AACV,aAAO,KAAK0T,SAAL,KAAmB,gBAAK,WAAL,CAA1B;AACD;;;iCAcY;AACX,aAAOG,WAAW,KAAK8D,OAAhB,CAAP;AACD;;;6BAEQ;AACP,UAAIC,YAAY,EAAhB;AACA,WAAK,IAAIxY,SAAT,IAAsB,KAAKuY,OAA3B,EAAoC;AAClCC,kBAAUxY,SAAV,IAAuB,KAAKuY,OAAL,CAAavY,SAAb,CAAvB;AACD;AACD,aAAO,IAAIoY,cAAJ,CACL,KAAK9D,SADA,EACW,KAAKgE,gBADhB,EACkCE,SADlC,CAAP;AAGD;;;iCAEYH,M,EAAQ;AACnB,UAAII,eAAe,KAAKC,MAAL,EAAnB;AACA,WAAK,IAAI1Y,SAAT,IAAsBqY,MAAtB,EAA8B;AAC5BI,qBAAaJ,MAAb,CAAoBrY,SAApB,IAAiCqY,OAAOrY,SAAP,CAAjC;AACD;AACD,aAAOyY,YAAP;AACD;;;0BAEK7B,K,EAAO;AACX,UAAIA,MAAMjQ,GAAN,KAAc6P,WAAlB,EAA+B;AAC7B,eAAO,KAAP;AACD;AACD,UAAI,KAAKzW,eAAL,KAAyB6W,MAAM7W,eAAnC,EAAoD;AAClD,eAAO,KAAP;AACD;AACD,UAAI2B,aAAa,KAAKA,UAAL,EAAjB;AAPW;AAAA;AAAA;;AAAA;AAQX,+BAAsBA,UAAtB,wIAAkC;AAAA,cAAzB1B,SAAyB;;AAChC,cAAI,CAAC,KAAKqY,MAAL,CAAYrY,SAAZ,EAAuB2S,KAAvB,CAA6BiE,MAAMyB,MAAN,CAAarY,SAAb,CAA7B,CAAL,EAA4D;AAC1D,mBAAO,KAAP;AACD;AACF;AAZU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaX,aAAO,IAAP;AACD;;;2BAEM;AACL,UAAI0U,aAAa,EAAjB;AACA,WAAK,IAAI1U,SAAT,IAAsB,KAAKuY,OAA3B,EAAoC;AAClC7D,mBAAW1U,SAAX,IAAwB,KAAKuY,OAAL,CAAavY,SAAb,EAAwBO,IAAxB,EAAxB;AACD;AACD,UAAI8T,QAAQ,EAAZ;AACAA,YAAM,KAAKiE,gBAAX,IAA+B5D,UAA/B;AACA,aAAO,IAAIN,aAAJ,CAAkB,KAAKE,SAAvB,EAAkCD,KAAlC,CAAP;AACD;;;wBA1Dc;AACb,aAAO,KAAKC,SAAZ;AACD;;;wBAEqB;AACpB,aAAO,KAAKgE,gBAAZ;AACD;;;wBAEY;AACX,aAAO,KAAKC,OAAZ;AACD;;;;EAvCiC9B,K;;;;;;;;;;;;;;;;;AC/uBpC;;;;;;;;;;;;;;;;;IAiBakC,Y,WAAAA,Y;AAEX,wBAAYrW,QAAZ,EAAsB6D,MAAtB,EAA8B;AAAA;;AAC5B,SAAKyS,SAAL,GAAiBtW,QAAjB,CAD4B,CACC;AAC7B,SAAKiV,OAAL,GAAepR,MAAf,CAF4B,CAEC;AAC7B,SAAK0S,MAAL,GAAc,CAAd,CAH4B,CAGC;AAC7B,SAAKC,KAAL,GAAa,CAAb,CAJ4B,CAIC;AAC7B,SAAKC,OAAL,GAAe,CAAf,CAL4B,CAKC;AAC7B,SAAKC,QAAL,GAAgB,EAAhB,CAN4B,CAMC;AAC9B;;;;6BAEQ;AACP,UAAIC,IAAI,IAAIN,YAAJ,CAAiB,KAAKC,SAAtB,EAAiC,KAAKrB,OAAtC,CAAR;AACA0B,QAAEJ,MAAF,GAAW,KAAKA,MAAhB;AACAI,QAAEH,KAAF,GAAU,KAAKA,KAAf;AACAG,QAAEF,OAAF,GAAY,KAAKA,OAAjB;AACAE,QAAED,QAAF,GAAa,KAAKA,QAAlB;AACA,aAAOC,CAAP;AACD;;;;;AAsBD;uCACmB;AACjB,UAAIA,IAAI,KAAKP,MAAL,EAAR;AACA,UAAIO,EAAEC,IAAF,OAAa,IAAjB,EAAuB;AACrBD,UAAEH,KAAF;AACAG,UAAEF,OAAF,GAAY,CAAZ;AACD,OAHD,MAGO;AACLE,UAAEF,OAAF;AACD;AACDE,QAAEJ,MAAF;AACA,aAAOI,CAAP;AACD;;AAED;;;;;kCAEc9S,M,EAAQ;AACpB,UAAI8S,IAAI,IAAR;AADoB;AAAA;AAAA;;AAAA;AAEpB,6BAAc9S,MAAd,8HAAsB;AAAA,cAAbgT,CAAa;;AACpBF,cAAIA,EAAEG,gBAAF,EAAJ;AACD;AAJmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKpB,aAAOH,CAAP;AACD;;AAED;;;;;;gDAG4B;AAC1B,UAAIA,IAAI,KAAKP,MAAL,EAAR;AACAO,QAAEJ,MAAF;AACA,aAAOI,CAAP;AACD;;AAED;;;;;2CAEuB9S,M,EAAQ;AAC7B,UAAI8S,IAAI,IAAR;AAD6B;AAAA;AAAA;;AAAA;AAE7B,8BAAc9S,MAAd,mIAAsB;AAAA,cAAbgT,CAAa;;AACpBF,cAAIA,EAAEI,yBAAF,EAAJ;AACD;AAJ4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAK7B,aAAOJ,CAAP;AACD;;AAED;;;;+BACWhL,G,EAAK;AACd,UAAIiH,IAAI,KAAK2D,MAAb;AACA,UAAIS,IAAI,KAAKT,MAAL,GAAc5K,IAAItN,MAA1B;AACA,aAAO2Y,KAAK,KAAK/B,OAAL,CAAa5W,MAAlB,IAA4B,KAAK4W,OAAL,CAAa9U,SAAb,CAAuByS,CAAvB,EAA0BoE,CAA1B,MAAiCrL,GAApE;AACD;;AAED;;;;0BACM;AACJ,aAAO,KAAK4K,MAAL,IAAe,KAAKtB,OAAL,CAAa5W,MAAnC;AACD;;AAED;;;;2BACO;AACL,aAAO,KAAK4W,OAAL,CAAa,KAAKsB,MAAlB,CAAP;AACD;;AAED;;;;gCACYU,M,EAAQ;AAClB,UAAIN,IAAI,KAAKP,MAAL,EAAR;AACAO,QAAED,QAAF,GAAa,CAACO,MAAD,EAASvN,MAAT,CAAgBiN,EAAED,QAAlB,CAAb;AACA,aAAOC,CAAP;AACD;;AAED;;;;gCACY;AACV,UAAIA,IAAI,KAAKP,MAAL,EAAR;AACA,UAAIO,EAAED,QAAF,CAAWrY,MAAX,GAAoB,CAAxB,EAA2B;AACzBsY,UAAED,QAAF,GAAaC,EAAED,QAAF,CAAWQ,KAAX,CAAiB,CAAjB,CAAb;AACD;AACD,aAAOP,CAAP;AACD;;;wBA7Fc;AACb,aAAO,KAAKL,SAAZ;AACD;;;wBAEU;AACT,aAAO,KAAKE,KAAZ;AACD;;;wBAEY;AACX,aAAO,KAAKC,OAAZ;AACD;;;wBAEY;AACX,UAAI,KAAKC,QAAL,CAAcrY,MAAd,GAAuB,CAA3B,EAA8B;AAC5B,eAAO,KAAKqY,QAAL,CAAc,CAAd,CAAP;AACD,OAFD,MAEO;AACL,eAAO,EAAP;AACD;AACF;;;;;;AA+EH;;;AACO,IAAMS,4CAAkB,IAAId,YAAJ,CAAiB,KAAjB,EAAwB,EAAxB,CAAxB;;AAEP;;;;IAGae,e,WAAAA,e;;AAEX;;;;;;;;AAQA,2BAAYC,KAAZ,EAAmB;AAAA;;AACjB,QAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7BA,cAAQ,EAAC,OAAOA,KAAR,EAAR;AACD;AACD,SAAKC,UAAL,GAAkBC,OAAO9N,IAAP,CAAY4N,KAAZ,CAAlB;AACA,SAAKC,UAAL,CAAgBzD,IAAhB;AACA,SAAK2D,MAAL,GAAcH,KAAd;AACA,SAAKd,MAAL,GAAc,CAAd;AACD;;AAED;;;;;gCACY;AACV,aAAO,KAAKA,MAAL,GAAc,CAAd,GAAkB,KAAKe,UAAL,CAAgBjZ,MAAzC;AACD;;AAED;;;;+BACW;AACT,WAAKkY,MAAL;AACD;;AAED;;;;sCACkB;AAChB,UAAI,KAAKA,MAAL,GAAc,KAAKe,UAAL,CAAgBjZ,MAAlC,EAA0C;AACxC,YAAI2B,WAAW,KAAKsX,UAAL,CAAgB,KAAKf,MAArB,CAAf;AACA,eAAO,IAAIF,YAAJ,CAAiBrW,QAAjB,EAA2B,KAAKwX,MAAL,CAAYxX,QAAZ,CAA3B,CAAP;AACD,OAHD,MAGO;AACL,eAAO,IAAIqW,YAAJ,CAAiB,KAAjB,EAAwB,EAAxB,CAAP;AACD;AACF;;;;;;;;;;;;;;;;;;;;;AClLH;AACO,IAAMoB,wBAAQ9V,OAAOC,GAAP,CAAW,OAAX,CAAd,C,CAA2C;AAC3C,IAAM8V,wBAAQ/V,OAAOC,GAAP,CAAW,OAAX,CAAd,C,CAA2C;AAC3C,IAAM+V,8BAAWhW,OAAOC,GAAP,CAAW,UAAX,CAAjB,C,CAA2C;AAC3C,IAAMgW,gCAAYjW,OAAOC,GAAP,CAAW,WAAX,CAAlB,C,CAA2C;AAC3C,IAAMiW,gCAAYlW,OAAOC,GAAP,CAAW,WAAX,CAAlB,C,CAA2C;;AAElD;AACO,IAAMkW,gCAAYnW,OAAOC,GAAP,CAAW,WAAX,CAAlB;AACA,IAAMmW,wCAAgBpW,OAAOC,GAAP,CAAW,eAAX,CAAtB;AACA,IAAMoW,oCAAcrW,OAAOC,GAAP,CAAW,aAAX,CAApB;AACA,IAAMqW,kCAAatW,OAAOC,GAAP,CAAW,YAAX,CAAnB;AACA,IAAMsW,8BAAWvW,OAAOC,GAAP,CAAW,UAAX,CAAjB;AACA,IAAMuW,sBAAOxW,OAAOC,GAAP,CAAW,MAAX,CAAb;AACA,IAAMwW,0BAASzW,OAAOC,GAAP,CAAW,QAAX,CAAf;AACA,IAAMyW,0BAAS1W,OAAOC,GAAP,CAAW,QAAX,CAAf;AACA,IAAM0W,8BAAW3W,OAAOC,GAAP,CAAW,UAAX,CAAjB;AACA,IAAM2W,gCAAY5W,OAAOC,GAAP,CAAW,WAAX,CAAlB;AACA,IAAM4W,sBAAO7W,OAAOC,GAAP,CAAW,MAAX,CAAb;AACA,IAAM6W,4BAAU9W,OAAOC,GAAP,CAAW,SAAX,CAAhB;AACA,IAAM8W,8BAAW/W,OAAOC,GAAP,CAAW,UAAX,CAAjB;AACA,IAAM+W,sBAAOhX,OAAOC,GAAP,CAAW,MAAX,CAAb;AACA,IAAMgX,wBAAQjX,OAAOC,GAAP,CAAW,OAAX,CAAd;AACA,IAAMiX,wBAAQlX,OAAOC,GAAP,CAAW,OAAX,CAAd;AACA,IAAMkX,wBAAQnX,OAAOC,GAAP,CAAW,OAAX,CAAd;AACA,IAAMmX,wBAAQpX,OAAOC,GAAP,CAAW,OAAX,CAAd;AACA,IAAMoX,0BAASrX,OAAOC,GAAP,CAAW,QAAX,CAAf;AACA,IAAMqX,sBAAOtX,OAAOC,GAAP,CAAW,MAAX,CAAb;AACA,IAAMsX,8BAAWvX,OAAOC,GAAP,CAAW,UAAX,CAAjB;AACA,IAAMuX,gCAAYxX,OAAOC,GAAP,CAAW,WAAX,CAAlB;AACA,IAAMwX,0BAASzX,OAAOC,GAAP,CAAW,QAAX,CAAf;AACA,IAAMyX,4BAAU1X,OAAOC,GAAP,CAAW,SAAX,CAAhB;AACA,IAAM0X,sCAAe3X,OAAOC,GAAP,CAAW,cAAX,CAArB;AACA,IAAM2X,gCAAY5X,OAAOC,GAAP,CAAW,WAAX,CAAlB;;AAEP;AACO,IAAM4X,8BAAW7X,OAAOC,GAAP,CAAW,UAAX,CAAjB;AACA,IAAM6X,8BAAW9X,OAAOC,GAAP,CAAW,UAAX,CAAjB;AACA,IAAM8X,8BAAW/X,OAAOC,GAAP,CAAW,UAAX,CAAjB;AACA,IAAM+X,8BAAWhY,OAAOC,GAAP,CAAW,UAAX,CAAjB;AACA,IAAMgY,8BAAWjY,OAAOC,GAAP,CAAW,UAAX,CAAjB;AACA,IAAMiY,8BAAWlY,OAAOC,GAAP,CAAW,UAAX,CAAjB;AACA,IAAMkY,4BAAUnY,OAAOC,GAAP,CAAW,SAAX,CAAhB;AACA,IAAMmY,oCAAcpY,OAAOC,GAAP,CAAW,aAAX,CAApB;AACA,IAAMoY,4BAAUrY,OAAOC,GAAP,CAAW,SAAX,CAAhB;AACA,IAAMqY,0BAAStY,OAAOC,GAAP,CAAW,QAAX,CAAf;AACA,IAAMsY,0BAASvY,OAAOC,GAAP,CAAW,QAAX,CAAf;AACA,IAAMuY,4BAAUxY,OAAOC,GAAP,CAAW,SAAX,CAAhB;AACA,IAAMwY,8BAAWzY,OAAOC,GAAP,CAAW,UAAX,CAAjB;AACA,IAAMyY,sBAAO1Y,OAAOC,GAAP,CAAW,MAAX,CAAb;AACA,IAAM0Y,sBAAO3Y,OAAOC,GAAP,CAAW,MAAX,CAAb;AACA,IAAM2Y,sBAAO5Y,OAAOC,GAAP,CAAW,MAAX,CAAb;AACA,IAAM4Y,sBAAO7Y,OAAOC,GAAP,CAAW,MAAX,CAAb;AACA,IAAM6Y,sBAAO9Y,OAAOC,GAAP,CAAW,MAAX,CAAb;AACA,IAAM8Y,sBAAO/Y,OAAOC,GAAP,CAAW,MAAX,CAAb;AACA,IAAM+Y,wBAAQhZ,OAAOC,GAAP,CAAW,OAAX,CAAd;AACA,IAAMgZ,sBAAOjZ,OAAOC,GAAP,CAAW,MAAX,CAAb;AACA,IAAMiZ,8BAAWlZ,OAAOC,GAAP,CAAW,UAAX,CAAjB;AACA,IAAMkZ,0BAASnZ,OAAOC,GAAP,CAAW,QAAX,CAAf;AACA,IAAMmZ,4BAAUpZ,OAAOC,GAAP,CAAW,SAAX,CAAhB;AACA,IAAMoZ,4BAAUrZ,OAAOC,GAAP,CAAW,SAAX,CAAhB;AACA,IAAMqZ,wBAAQtZ,OAAOC,GAAP,CAAW,OAAX,CAAd;;AAEP;;;;;;IAKasZ,K,WAAAA,K;AACX,iBAAY7W,GAAZ,EAAiByC,KAAjB,EAAwB/F,QAAxB,EAAkCC,MAAlC,EAA0C;AAAA;;AACxC,SAAK2D,IAAL,GAAYN,GAAZ;AACA,SAAK8W,MAAL,GAAcrU,KAAd;AACA,SAAKjC,SAAL,GAAiB9D,QAAjB;AACA,SAAK+D,OAAL,GAAe9D,MAAf;AACD;;;;+BAEU;AACT,UAAIqD,MAAM1C,OAAO2C,MAAP,CAAc,KAAKK,IAAnB,EAAyBxE,SAAzB,CAAmC,CAAnC,CAAV;AACA,cAAQkE,GAAR;AACE,aAAK,KAAL,CAAY,KAAK,QAAL,CAAe,KAAK,SAAL,CAAgB,KAAK,SAAL;AACzC,iBAAOA,MAAM,IAAN,GAAa,KAAK8W,MAAlB,GAA2B,IAAlC;AACF;AACE,iBAAO9W,GAAP;AAJJ;AAMD;;;wBAES;AACR,aAAO,KAAKM,IAAZ;AACD;;;wBAEW;AACV,aAAO,KAAKwW,MAAZ;AACD;;;wBAEc;AACb,aAAO,KAAKtW,SAAZ;AACD;;;wBAEY;AACX,aAAO,KAAKC,OAAZ;AACD;;;;;;;;;;;;;;;;;;;;ACrGH;;AACA;;;;AAEA;IACMsW,e;AACJ,2BAAY3V,QAAZ,EAAsBhI,eAAtB,EAAuCwB,KAAvC,EAA8C;AAAA;;AAC5C,SAAK+S,SAAL,GAAiBvM,QAAjB;AACA,SAAKuQ,gBAAL,GAAwBvY,eAAxB;AACA,SAAK8Y,MAAL,GAActX,KAAd;AACD;;;;wBAEc;AACb,aAAO,KAAK+S,SAAZ;AACD;;;wBAEqB;AACpB,aAAO,KAAKgE,gBAAZ;AACD;;;wBAEW;AACV,aAAO,KAAKO,MAAZ;AACD;;;;;;AAGH;;;AACO,IAAM8E,wCAAgB1Z,OAAOC,GAAP,CAAW,eAAX,CAAtB;AACA,IAAM0Z,0CAAiB3Z,OAAOC,GAAP,CAAW,gBAAX,CAAvB;AACA,IAAM2Z,kCAAa5Z,OAAOC,GAAP,CAAW,YAAX,CAAnB;;AAEP;;IACM4Z,mB;AACJ,+BAAYC,QAAZ,EAAsB5a,QAAtB,EAAgC;AAAA;;AAC9B,SAAK6a,SAAL,GAAiBD,QAAjB;AACA,SAAKE,SAAL,GAAiB9a,QAAjB;AACD;;;;wBAEc;AACb,aAAO,KAAK6a,SAAZ;AACD;;;wBAEc;AACb,aAAO,KAAKC,SAAZ;AACD;;;;;;AAGH,SAAS5S,IAAT,CAAchI,QAAd,EAAwBC,MAAxB,EAAgCE,MAAhC,EAAwCC,IAAxC,EAA8C;AAC5C,QAAM,+BAAmBJ,QAAnB,EAA6BC,MAA7B,EAAqCE,MAArC,EAA6CC,IAA7C,CAAN;AACD;;AAED;;;;;IAIaya,W,WAAAA,W;AACX,yBAAc;AAAA;;AACZ,SAAKC,QAAL,GAAgB,IAAhB;;AAEA;AACA,SAAKC,qBAAL,GAA6B,KAA7B;;AAEA;AACA,SAAKC,WAAL,GAAmB,EAAnB;;AAEA;AACA,SAAKC,oBAAL,GAA4B,EAA5B;;AAEA;AACA,SAAKC,UAAL,GAAkB,EAAlB;;AAEA;AACA,SAAKC,mBAAL,GAA2B,EAA3B;;AAEA;AACA,SAAKC,MAAL,GAAc,EAAd;;AAEA;AACA,SAAKC,iBAAL,GAAyB,EAAzB;;AAEA;AACA,SAAKC,aAAL,GAAqB,EAArB;;AAEA;AACA,SAAKC,gBAAL,GAAwB,EAAxB;;AAEA;AACA,SAAKC,kBAAL,GAA0B,EAA1B;;AAEA;;;;;;;;;AASA,SAAKtG,OAAL,GAAe,EAAf;;AAEA;;;;;;;;;;;;;AAaA,SAAKuG,WAAL,GAAmB,EAAnB;AACD;;;;2CAMsB;AACrB,aAAO,KAAKV,qBAAZ;AACD;;;gCAEWte,I,EAAM;AAChB,aAAOA,QAAQ,KAAKue,WAApB;AACD;;;wCAEmB;AAClB,UAAIzT,QAAQ,EAAZ;AACA,WAAK,IAAI9K,IAAT,IAAiB,KAAKue,WAAtB,EAAmC;AACjCzT,cAAMtE,IAAN,CAAWxG,IAAX;AACD;AACD,aAAO8K,MAAMuL,IAAN,EAAP;AACD;;;wCAEmBrW,I,EAAM;AACxB,UAAI,KAAKif,WAAL,CAAiBjf,IAAjB,CAAJ,EAA4B;AAC1B,eAAO,KAAKue,WAAL,CAAiBve,IAAjB,CAAP;AACD,OAFD,MAEO;AACL,cAAMmD,MAAM,sBAAN,CAAN;AACD;AACF;;;wCAEmBnD,I,EAAM;AACxB,UAAI,KAAKif,WAAL,CAAiBjf,IAAjB,CAAJ,EAA4B;AAC1B,eAAO,KAAKwe,oBAAL,CAA0Bxe,IAA1B,CAAP;AACD,OAFD,MAEO;AACL,cAAMmD,MAAM,sBAAN,CAAN;AACD;AACF;;;+BAEUnD,I,EAAM;AACf,aAAOA,QAAQ,KAAKye,UAApB;AACD;;;uCAEkB;AACjB,UAAI3T,QAAQ,EAAZ;AACA,WAAK,IAAI9K,IAAT,IAAiB,KAAKye,UAAtB,EAAkC;AAChC3T,cAAMtE,IAAN,CAAWxG,IAAX;AACD;AACD,aAAO8K,MAAMuL,IAAN,EAAP;AACD;;;uCAEkBrW,I,EAAM;AACvB,UAAI,KAAKkf,UAAL,CAAgBlf,IAAhB,CAAJ,EAA2B;AACzB,eAAO,KAAKye,UAAL,CAAgBze,IAAhB,CAAP;AACD,OAFD,MAEO;AACL,cAAMmD,MAAM,qBAAN,CAAN;AACD;AACF;;;uCAEkBnD,I,EAAM;AACvB,UAAI,KAAKkf,UAAL,CAAgBlf,IAAhB,CAAJ,EAA2B;AACzB,eAAO,KAAK0e,mBAAL,CAAyB1e,IAAzB,CAAP;AACD,OAFD,MAEO;AACL,cAAMmD,MAAM,qBAAN,CAAN;AACD;AACF;;;2BAEMnD,I,EAAM;AACX,aAAOA,QAAQ,KAAK2e,MAApB;AACD;;;mCAEc3e,I,EAAM;AACnB,UAAI,KAAKmf,MAAL,CAAYnf,IAAZ,CAAJ,EAAuB;AACrB,eAAO,KAAK2e,MAAL,CAAY3e,IAAZ,CAAP;AACD,OAFD,MAEO;AACL,cAAMmD,MAAM,iBAAN,CAAN;AACD;AACF;;;qCAEgBnD,I,EAAM;AACrB,UAAI,KAAKmf,MAAL,CAAYnf,IAAZ,CAAJ,EAAuB;AACrB,eAAO,KAAK4e,iBAAL,CAAuB5e,IAAvB,CAAP;AACD,OAFD,MAEO;AACL,cAAMmD,MAAM,iBAAN,CAAN;AACD;AACF;;;kCAEanD,I,EAAM;AAClB,aAAOA,QAAQ,KAAK6e,aAApB;AACD;;;2CAEsB7e,I,EAAM;AAC3B,UAAI,KAAKof,aAAL,CAAmBpf,IAAnB,CAAJ,EAA8B;AAC5B,eAAO,KAAK6e,aAAL,CAAmB7e,IAAnB,CAAP;AACD,OAFD,MAEO;AACL,cAAMmD,MAAM,wBAAN,CAAN;AACD;AACF;;;oCAEenD,I,EAAM;AACpB,UAAI,KAAKof,aAAL,CAAmBpf,IAAnB,CAAJ,EAA8B;AAC5B,eAAO,KAAK8e,gBAAL,CAAsB9e,IAAtB,CAAP;AACD,OAFD,MAEO;AACL,cAAMmD,MAAM,wBAAN,CAAN;AACD;AACF;;;sCAEiBnD,I,EAAM;AACtB,UAAI,KAAKof,aAAL,CAAmBpf,IAAnB,CAAJ,EAA8B;AAC5B,eAAO,KAAK+e,kBAAL,CAAwB/e,IAAxB,CAAP;AACD,OAFD,MAEO;AACL,cAAMmD,MAAM,wBAAN,CAAN;AACD;AACF;;;4BAEOnD,I,EAAM;AACZ,aAAOA,QAAQ,KAAKyY,OAApB;AACD;;;oCAEezY,I,EAAM;AACpB,UAAI,KAAKqf,OAAL,CAAarf,IAAb,CAAJ,EAAwB;AACtB,eAAO,KAAKyY,OAAL,CAAazY,IAAb,CAAP;AACD,OAFD,MAEO;AACL,cAAMmD,MAAM,kBAAN,CAAN;AACD;AACF;;;+BAEUmc,U,EAAY;AACrB,UAAI,KAAKjB,QAAL,KAAkB,IAAtB,EAA4B;AAC1B9S,aACE+T,WAAW/b,QADb,EACuB+b,WAAW9b,MADlC,EAEE,yBAFF,EAE6B,CACzB,wBAAa,KAAK6a,QAAL,CAAc9a,QAA3B,CADyB,EAEzB,wBAAa+b,WAAW/b,QAAxB,CAFyB,CAF7B;AAOD;AACD,WAAK8a,QAAL,GAAgBiB,UAAhB;AACD;;;0CAEqBA,U,EAAY;AAChC,WAAKC,UAAL,CAAgBD,UAAhB;AACA,WAAKhB,qBAAL,GAA6B,IAA7B;AACD;;;iCAEYgB,U,EAAY;AACvB,UAAItf,OAAOsf,WAAWtf,IAAX,CAAgBsJ,KAA3B;AACA,UAAItJ,QAAQ,KAAKue,WAAjB,EAA8B;AAC5BhT,aACE+T,WAAWtf,IAAX,CAAgBuD,QADlB,EAC4B+b,WAAWtf,IAAX,CAAgBwD,MAD5C,EAEE,2BAFF,EAE+B,CAC3BxD,IAD2B,EAE3B,wBAAa,KAAKue,WAAL,CAAiBve,IAAjB,EAAuBuD,QAApC,CAF2B,EAG3B,wBAAa+b,WAAW/b,QAAxB,CAH2B,CAF/B;AAQD;AACD,UAAIuE,aAAa,EAAjB;AAZuB;AAAA;AAAA;;AAAA;AAavB,6BAAsBwX,WAAWxX,UAAjC,8HAA6C;AAAA,cAApC0X,SAAoC;;AAC3C1X,qBAAWtB,IAAX,CAAgBgZ,UAAUlW,KAA1B;AACD;AAfsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBvB,WAAKiV,WAAL,CAAiBve,IAAjB,IAAyBsf,UAAzB;AACA,WAAKd,oBAAL,CAA0Bxe,IAA1B,IAAkC8H,UAAlC;AACD;;;gCAEWwX,U,EAAY;AACtB,UAAItf,OAAOsf,WAAWtf,IAAX,CAAgBsJ,KAA3B;AACA,UAAItJ,QAAQ,KAAKye,UAAjB,EAA6B;AAC3BlT,aACE+T,WAAWtf,IAAX,CAAgBuD,QADlB,EAC4B+b,WAAWtf,IAAX,CAAgBwD,MAD5C,EAEE,0BAFF,EAE8B,CAC1BxD,IAD0B,EAE1B,wBAAa,KAAKye,UAAL,CAAgBze,IAAhB,EAAsBuD,QAAnC,CAF0B,EAG1B,wBAAa+b,WAAW/b,QAAxB,CAH0B,CAF9B;AAQD,OATD,MASO,IAAIvD,QAAQ,KAAKyY,OAAjB,EAA0B;AAC/B,YAAIgH,WACF,KAAKZ,aAAL,CAAmB,KAAKpG,OAAL,CAAazY,IAAb,EAAmB,CAAnB,EAAsBC,eAAzC,EAA0DsD,QAD5D;AAEAgI,aACE+T,WAAWtf,IAAX,CAAgBuD,QADlB,EAC4B+b,WAAWtf,IAAX,CAAgBwD,MAD5C,EAEE,8CAFF,EAEkD,CAC9CxD,IAD8C,EAE9C,wBAAasf,WAAW/b,QAAxB,CAF8C,EAG9C,wBAAakc,QAAb,CAH8C,CAFlD;AAQD;AACD,UAAI3X,aAAa,EAAjB;AAvBsB;AAAA;AAAA;;AAAA;AAwBtB,8BAAsBwX,WAAWxX,UAAjC,mIAA6C;AAAA,cAApC0X,SAAoC;;AAC3C1X,qBAAWtB,IAAX,CAAgBgZ,UAAUlW,KAA1B;AACD;AA1BqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA2BtB,WAAKmV,UAAL,CAAgBze,IAAhB,IAAwBsf,UAAxB;AACA,WAAKZ,mBAAL,CAAyB1e,IAAzB,IAAiC8H,UAAjC;AACD;;;4BAEOwX,U,EAAY;AAClB,UAAIrX,WAAWqX,WAAWrX,QAAX,CAAoBqB,KAAnC;AACA,UAAIrB,YAAY,KAAK0W,MAArB,EAA6B;AAC3BpT,aACE+T,WAAWrX,QAAX,CAAoB1E,QADtB,EACgC+b,WAAWrX,QAAX,CAAoBzE,MADpD,EAEE,sBAFF,EAE0B,CACtByE,QADsB,EAEtB,wBAAa,KAAK0W,MAAL,CAAY1W,QAAZ,EAAsB1E,QAAnC,CAFsB,EAGtB,wBAAa+b,WAAW/b,QAAxB,CAHsB,CAF1B;AAQD;AACD,WAAKob,MAAL,CAAY1W,QAAZ,IAAwBqX,UAAxB;AACA,UAAI3e,mBAAmB,EAAvB;AAbkB;AAAA;AAAA;;AAAA;AAclB,8BAAmC2e,WAAWpX,uBAA9C,mIAAuE;AAAA,cAA9DwX,sBAA8D;;AACrE,eAAKC,mBAAL,CAAyB1X,QAAzB,EAAmCyX,sBAAnC;AACA/e,2BAAiB6F,IAAjB,CAAsBkZ,uBAAuBzf,eAAvB,CAAuCqJ,KAA7D;AACD;AAjBiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAkBlB,WAAKsV,iBAAL,CAAuB3W,QAAvB,IAAmCtH,gBAAnC;AACD;;;wCAEmBsH,Q,EAAUyX,sB,EAAwB;AACpD,UAAIzf,kBAAkByf,uBAAuBzf,eAAvB,CAAuCqJ,KAA7D;AACA,UAAIrJ,mBAAmB,KAAK4e,aAA5B,EAA2C;AACzCtT,aACEmU,uBAAuBzf,eAAvB,CAAuCsD,QADzC,EAEEmc,uBAAuBzf,eAAvB,CAAuCuD,MAFzC,EAGE,6BAHF,EAGiC,CAC7BvD,eAD6B,EAE7B,wBAAa,KAAK4e,aAAL,CAAmB5e,eAAnB,EAAoCsD,QAAjD,CAF6B,EAG7B,wBAAamc,uBAAuBnc,QAApC,CAH6B,CAHjC;AASD;AACD,WAAKsb,aAAL,CAAmB5e,eAAnB,IAAsCyf,sBAAtC;AACA,WAAKZ,gBAAL,CAAsB7e,eAAtB,IAAyCgI,QAAzC;;AAEA,UAAI2X,oBAAoB,EAAxB;AACA,UAAIhe,aAAa,EAAjB;AACA,UAAIH,QAAQ,CAAZ;AAlBoD;AAAA;AAAA;;AAAA;AAmBpD,8BAAsBie,uBAAuB9d,UAA7C,mIAAyD;AAAA,cAAhD1B,SAAgD;;AACvD,cAAIA,UAAUoJ,KAAV,IAAmBsW,iBAAvB,EAA0C;AACxCrU,iBACErL,UAAUqD,QADZ,EACsBrD,UAAUsD,MADhC,EAEE,qBAFF,EAGE,CAACvD,eAAD,EAAkBC,UAAUoJ,KAA5B,CAHF;AAKD;AACDsW,4BAAkB1f,UAAUoJ,KAA5B,IAAqC,IAArC;AACA1H,qBAAW4E,IAAX,CAAgBtG,UAAUoJ,KAA1B;AACA,eAAKuW,aAAL,CACE3f,UAAUqD,QADZ,EACsBrD,UAAUsD,MADhC,EAEEyE,QAFF,EAEYhI,eAFZ,EAE6BC,UAAUoJ,KAFvC,EAE8C7H,KAF9C;AAIAA;AACD;AAlCmD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAmCpD,WAAKsd,kBAAL,CAAwB9e,eAAxB,IAA2C2B,UAA3C;AACD;;;kCAEa2B,Q,EAAUC,M,EAAQyE,Q,EAAUhI,e,EAAiBC,S,EAAWuB,K,EAAO;AAC3E,UAAIvB,aAAa,KAAKue,UAAtB,EAAkC;AAChClT,aACEhI,QADF,EACYC,MADZ,EAEE,8CAFF,EAEkD,CAC9CtD,SAD8C,EAE9C,wBAAa,KAAKue,UAAL,CAAgBve,SAAhB,EAA2BqD,QAAxC,CAF8C,EAG9C,wBAAaA,QAAb,CAH8C,CAFlD;AAQD;AACD,UAAI,EAAErD,aAAa,KAAKuY,OAApB,CAAJ,EAAkC;AAChC,aAAKA,OAAL,CAAavY,SAAb,IAA0B,EAA1B;AACD;AACD,WAAKuY,OAAL,CAAavY,SAAb,EAAwBsG,IAAxB,CACI,IAAIoX,eAAJ,CAAoB3V,QAApB,EAA8BhI,eAA9B,EAA+CwB,KAA/C,CADJ;AAGD;;AAED;;;;oCACgBqe,S,EAAW7B,Q,EAAU;AACnC,UAAI6B,UAAUxW,KAAV,IAAmB,KAAK0V,WAA5B,EAAyC;AACvCzT,aACEuU,UAAUvc,QADZ,EACsBuc,UAAUtc,MADhC,EAEE,qBAFF,EAEyB,CACrBsc,UAAUxW,KADW,EAErB,gBAAKnF,OAAO2C,MAAP,CAAc,KAAKkY,WAAL,CAAiBc,UAAUxW,KAA3B,EAAkC2U,QAAhD,CAAL,CAFqB,EAGrB,wBAAa,KAAKe,WAAL,CAAiBc,UAAUxW,KAA3B,EAAkCjG,QAA/C,CAHqB,EAIrB,gBAAKc,OAAO2C,MAAP,CAAcmX,QAAd,CAAL,CAJqB,EAKrB,wBAAa6B,UAAUvc,QAAvB,CALqB,CAFzB;AAUD;AACD,WAAKwc,YAAL,CAAkBD,SAAlB,EAA6B7B,QAA7B;AACD;;AAED;;;;;iCAEa6B,S,EAAW7B,Q,EAAU;AAChC,UAAI6B,UAAUxW,KAAV,IAAmB,KAAK0V,WAAxB,IACA,KAAKA,WAAL,CAAiBc,UAAUxW,KAA3B,EAAkC2U,QAAlC,KAA+CA,QADnD,EAC6D;AAC3D1S,aACEuU,UAAUvc,QADZ,EACsBuc,UAAUtc,MADhC,EAEE,qBAFF,EAEyB,CACrBsc,UAAUxW,KADW,EAErB,gBAAKnF,OAAO2C,MAAP,CAAc,KAAKkY,WAAL,CAAiBc,UAAUxW,KAA3B,EAAkC2U,QAAhD,CAAL,CAFqB,EAGrB,wBAAa,KAAKe,WAAL,CAAiBc,UAAUxW,KAA3B,EAAkCjG,QAA/C,CAHqB,EAIrB,gBAAKc,OAAO2C,MAAP,CAAcmX,QAAd,CAAL,CAJqB,EAKrB,wBAAa6B,UAAUvc,QAAvB,CALqB,CAFzB;AAUD;AACD,WAAKyb,WAAL,CAAiBc,UAAUxW,KAA3B,IACE,IAAI0U,mBAAJ,CAAwBC,QAAxB,EAAkC6B,UAAUvc,QAA5C,CADF;AAED;;AAED;;;;oCACgBuc,S,EAAW;AACzB,aAAO,KAAKd,WAAL,CAAiBc,UAAUxW,KAA3B,CAAP;AACD;;AAED;;;;gCACY;AACV,WAAK0V,WAAL,GAAmB,EAAnB;AACD;;;wBA5Ta;AACZ,aAAO,KAAKX,QAAZ;AACD;;;;;;;;;;;;;;;;;;;;ACpHH;;;;;;;;AAEA;AACO,IAAM2B,wCAAgB7b,OAAOC,GAAP,CAAW,eAAX,CAAtB;AACA,IAAM6b,sCAAe9b,OAAOC,GAAP,CAAW,cAAX,CAArB;AACA,IAAM8b,0CAAiB/b,OAAOC,GAAP,CAAW,gBAAX,CAAvB;AACA,IAAM+b,wCAAgBhc,OAAOC,GAAP,CAAW,eAAX,CAAtB;AACA,IAAMgc,4CAAkBjc,OAAOC,GAAP,CAAW,iBAAX,CAAxB;AACA,IAAMic,4BAAUlc,OAAOC,GAAP,CAAW,SAAX,CAAhB;AACA,IAAMkc,0BAASnc,OAAOC,GAAP,CAAW,QAAX,CAAf;AACA,IAAMmc,wCAAgBpc,OAAOC,GAAP,CAAW,eAAX,CAAtB;AACA,IAAMoc,gDAAoBrc,OAAOC,GAAP,CAAW,mBAAX,CAA1B;AACA,IAAMqc,wCAAgBtc,OAAOC,GAAP,CAAW,eAAX,CAAtB;AACA,IAAMsc,0BAASvc,OAAOC,GAAP,CAAW,QAAX,CAAf;AACA,IAAMuc,8BAAWxc,OAAOC,GAAP,CAAW,UAAX,CAAjB;AACA,IAAMwc,oCAAczc,OAAOC,GAAP,CAAW,aAAX,CAApB;AACA,IAAMyc,kCAAa1c,OAAOC,GAAP,CAAW,YAAX,CAAnB;AACA,IAAM0c,4CAAkB3c,OAAOC,GAAP,CAAW,iBAAX,CAAxB;AACA,IAAM2c,gDAAoB5c,OAAOC,GAAP,CAAW,mBAAX,CAA1B;AACA,IAAM4c,sDAAuB7c,OAAOC,GAAP,CAAW,sBAAX,CAA7B;AACA,IAAM6c,sDAAuB9c,OAAOC,GAAP,CAAW,sBAAX,CAA7B;AACA,IAAM8c,4DAA0B/c,OAAOC,GAAP,CAAW,yBAAX,CAAhC;AACA,IAAM+c,wBAAQhd,OAAOC,GAAP,CAAW,OAAX,CAAd;AACA,IAAMgd,wBAAQjd,OAAOC,GAAP,CAAW,OAAX,CAAd;AACA,IAAMid,wBAAQld,OAAOC,GAAP,CAAW,OAAX,CAAd;AACA,IAAMkd,4CAAkBnd,OAAOC,GAAP,CAAW,iBAAX,CAAxB;AACA,IAAMmd,oCAAcpd,OAAOC,GAAP,CAAW,aAAX,CAApB;AACA,IAAMod,0CAAiBrd,OAAOC,GAAP,CAAW,gBAAX,CAAvB;AACA,IAAMqd,oCAActd,OAAOC,GAAP,CAAW,aAAX,CAApB;;IAEMsd,I,WAAAA,I;AAEX,gBAAYC,YAAZ,EAA0B;AAAA;;AACxB,SAAKC,aAAL,GAAqBD,YAArB;AACD;;;;+BAEU;AACT,UAAI1a,MAAM,EAAV;AADS;AAAA;AAAA;;AAAA;AAET,6BAAwB,KAAK2a,aAA7B,8HAA4C;AAAA,cAAnCC,WAAmC;;AAC1C5a,cAAIT,IAAJ,CAASqb,YAAYviB,QAAZ,EAAT;AACD;AAJQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKT,aAAO2H,IAAInG,IAAJ,CAAS,IAAT,CAAP;AACD;;;4BAEO+gB,W,EAAa;AACnB,WAAKD,aAAL,CAAmBpb,IAAnB,CAAwBqb,WAAxB;AACD;;AAED;;;;uBACGC,E,EAAI;AACL,UAAI,KAAKA,EAAL,IAAWA,KAAK,KAAKF,aAAL,CAAmB/gB,MAAvC,EAA+C;AAC7C,eAAO,KAAK+gB,aAAL,CAAmBE,EAAnB,CAAP;AACD,OAFD,MAEO;AACL,cAAM3e,MAAM,yCAAN,CAAN;AACD;AACF;;AAED;;;;;mCAEe;AACb,UAAI4e,eAAe,EAAnB;AACA,WAAK,IAAI3M,IAAI,CAAb,EAAgBA,IAAI,KAAKwM,aAAL,CAAmB/gB,MAAvC,EAA+CuU,GAA/C,EAAoD;AAClD,YAAI,KAAKwM,aAAL,CAAmBxM,CAAnB,EAAsB4M,MAAtB,KAAiC3B,OAArC,EAA8C;AAC5C,cAAI4B,QAAQ,KAAKL,aAAL,CAAmBxM,CAAnB,EAAsB6M,KAAlC;AACA,cAAIA,SAASF,YAAb,EAA2B;AACzB,kBAAM5e,MAAM,kBAAkB8e,KAAlB,GAA0B,gBAAhC,CAAN;AACD;AACDF,uBAAaE,KAAb,IAAsB7M,CAAtB;AACD;AACF;AACD,aAAO2M,YAAP;AACD;;;;;;AAIH,SAASG,WAAT,CAAqBC,GAArB,EAA0B;AACxB,MAAIA,eAAevb,KAAnB,EAA0B;AACxB,QAAIK,MAAM,EAAV;AADwB;AAAA;AAAA;;AAAA;AAExB,4BAAiBkb,GAAjB,mIAAsB;AAAA,YAAb9J,IAAa;;AACpBpR,YAAIT,IAAJ,CAAS0b,YAAY7J,IAAZ,CAAT;AACD;AAJuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKxB,WAAO,MAAMpR,IAAInG,IAAJ,CAAS,IAAT,CAAN,GAAuB,GAA9B;AACD,GAND,MAMO;AACL,WAAOqhB,IAAI7iB,QAAJ,EAAP;AACD;AACF;;IAEY8iB,W,WAAAA,W;AACX,uBAAYJ,MAAZ,EAAoBre,IAApB,EAA0B;AAAA;;AACxB,SAAK0e,OAAL,GAAeL,MAAf;AACA,SAAKM,KAAL,GAAa3e,IAAb;AACA,SAAK0D,SAAL;AACA,SAAKC,OAAL;AACD;;;;+BAEU;AACT,UAAI0a,SAAS7d,OAAO2C,MAAP,CAAc,KAAKub,OAAnB,EAA4B1f,SAA5B,CAAsC,CAAtC,CAAb;AACA,UAAI4f,QAAQ,EAAZ;AAFS;AAAA;AAAA;;AAAA;AAGT,8BAAgB,KAAKD,KAArB,mIAA4B;AAAA,cAAnBH,GAAmB;;AAC1BI,gBAAM/b,IAAN,CAAW0b,YAAYC,GAAZ,CAAX;AACD;AALQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMT,aAAO,OAAOH,MAAP,GAAgB,GAAhB,GAAsBO,MAAMzhB,IAAN,CAAW,IAAX,CAA7B;AACD;;;wBAEY;AACX,aAAO,KAAKuhB,OAAZ;AACD;;;wBAEU;AACT,aAAO,KAAKC,KAAZ;AACD;;;sBAEYjf,Q,EAAU;AACrB,WAAKgE,SAAL,GAAiBhE,QAAjB;AACD,K;wBAEc;AACb,aAAO,KAAKgE,SAAZ;AACD;;;sBAEUhE,Q,EAAU;AACnB,WAAKiE,OAAL,GAAejE,QAAf;AACD,K;wBAEY;AACX,aAAO,KAAKiE,OAAZ;AACD;;;;;;AAIH;;IAEakb,Y,WAAAA,Y;;;AACX,wBAAYrY,MAAZ,EAAoB;AAAA;;AAAA,uHACZ6V,aADY,EACG,CAAC7V,MAAD,CADH;AAEnB;;;;wBAEY;AACX,aAAO,KAAKmY,KAAL,CAAW,CAAX,CAAP;AACD;;;;EAP+BF,W;;IAUrBK,W,WAAAA,W;;;AACX,uBAAYpc,MAAZ,EAAoB;AAAA;;AAAA,qHACZ4Z,YADY,EACE,CAAC5Z,MAAD,CADF;AAEnB;;;;wBAEY;AACX,aAAO,KAAKic,KAAL,CAAW,CAAX,CAAP;AACD;;;;EAP8BF,W;;AAUjC;;;IACaM,a,WAAAA,a;;;AACX,yBAAYxhB,YAAZ,EAA0B;AAAA;;AAAA,yHAClBgf,cADkB,EACF,CAAChf,YAAD,CADE;AAEzB;;;;wBAEkB;AACjB,aAAO,KAAKohB,KAAL,CAAW,CAAX,CAAP;AACD;;;;EAPgCF,W;;AAUnC;;;IACaO,Y,WAAAA,Y;;;AACX,wBAAYzhB,YAAZ,EAA0B;AAAA;;AAAA,uHAClBif,aADkB,EACH,CAACjf,YAAD,CADG;AAEzB;;;;wBAEkB;AACjB,aAAO,KAAKohB,KAAL,CAAW,CAAX,CAAP;AACD;;;;EAP+BF,W;;AAUlC;;;;;;;;;;;;IAUaQ,c,WAAAA,c;;;AACX,0BAAY1hB,YAAZ,EAA0B;AAAA;;AAAA,2HAClBkf,eADkB,EACD,CAAClf,YAAD,CADC;AAEzB;;;;wBAEkB;AACjB,aAAO,KAAKohB,KAAL,CAAW,CAAX,CAAP;AACD;;;;EAPiCF,W;;AAUpC;;;IACaS,M,WAAAA,M;;;AACX,kBAAYZ,KAAZ,EAAmB;AAAA;;AAAA,2GACX5B,OADW,EACF,CAAC4B,KAAD,CADE;AAElB;;;;+BAEU;AACT,aAAO,KAAKA,KAAL,GAAa,GAApB;AACD;;;wBAEW;AACV,aAAO,KAAKK,KAAL,CAAW,CAAX,CAAP;AACD;;;;EAXyBF,W;;AAc5B;;;IACaU,K,WAAAA,K;;;AACX,iBAAYC,WAAZ,EAAyB;AAAA;;AAAA,yGACjBzC,MADiB,EACT,CAACyC,WAAD,CADS;AAExB;;;;wBAEiB;AAChB,aAAO,KAAKT,KAAL,CAAW,CAAX,CAAP;AACD;;;;EAPwBF,W;;AAU3B;;;;IAEaY,Y,WAAAA,Y;;;AACX,wBAAYD,WAAZ,EAAyB;AAAA;;AAAA,uHACjBxC,aADiB,EACF,CAACwC,WAAD,CADE;AAExB;;;;wBAEiB;AAChB,aAAO,KAAKT,KAAL,CAAW,CAAX,CAAP;AACD;;;;EAP+BF,W;;AAUlC;;;;IAEaa,gB,WAAAA,gB;;;AACX,4BAAYhjB,eAAZ,EAA6B8iB,WAA7B,EAA0C;AAAA;;AAAA,+HAClCvC,iBADkC,EACf,CAACvgB,eAAD,EAAkB8iB,WAAlB,CADe;AAEzC;;;;wBAEqB;AACpB,aAAO,KAAKT,KAAL,CAAW,CAAX,CAAP;AACD;;;wBAEiB;AAChB,aAAO,KAAKA,KAAL,CAAW,CAAX,CAAP;AACD;;;;EAXmCF,W;;AActC;;;;IAEac,Y,WAAAA,Y;;;AACX,wBAAYvhB,IAAZ,EAAkBohB,WAAlB,EAA+B;AAAA;;AAAA,uHACvBtC,aADuB,EACR,CAAC9e,IAAD,EAAOohB,WAAP,CADQ;AAE9B;;;;wBAEU;AACT,aAAO,KAAKT,KAAL,CAAW,CAAX,CAAP;AACD;;;wBAEiB;AAChB,aAAO,KAAKA,KAAL,CAAW,CAAX,CAAP;AACD;;;;EAX+BF,W;;AAclC;;;;;;;;;IAOae,K,WAAAA,K;;;AACX,iBAAYJ,WAAZ,EAAyBK,KAAzB,EAAgC;AAAA;;AAAA,yGACxB1C,MADwB,EAChB,CAACqC,WAAD,EAAcK,KAAd,CADgB;AAE/B;;;;wBAEiB;AAChB,aAAO,KAAKd,KAAL,CAAW,CAAX,CAAP;AACD;;;wBAEW;AACV,aAAO,KAAKA,KAAL,CAAW,CAAX,CAAP;AACD;;;;EAXwBF,W;;AAc3B;;;;;IAGaiB,O,WAAAA,O;;;AACX,qBAAc;AAAA;;AAAA,6GACN1C,QADM,EACI,EADJ;AAEb;;;EAH0ByB,W;;AAM7B;;;;;IAGakB,U,WAAAA,U;;;AACX,sBAAY3hB,IAAZ,EAAkB;AAAA;;AAAA,mHACVif,WADU,EACG,CAACjf,IAAD,CADH;AAEjB;;;;wBAEU;AACT,aAAO,KAAK2gB,KAAL,CAAW,CAAX,CAAP;AACD;;;;EAP6BF,W;;AAUhC;;;;;IAGamB,S,WAAAA,S;;;AACX,qBAAY5hB,IAAZ,EAAkB;AAAA;;AAAA,iHACVkf,UADU,EACE,CAAClf,IAAD,CADF;AAEjB;;;;wBAEU;AACT,aAAO,KAAK2gB,KAAL,CAAW,CAAX,CAAP;AACD;;;;EAP4BF,W;;AAU/B;;;;;IAGaoB,c,WAAAA,c;;;AACX,0BAAYvb,QAAZ,EAAsBhI,eAAtB,EAAuC2B,UAAvC,EAAmD;AAAA;;AAAA,2HAC3Ckf,eAD2C,EAC1B,CAAC7Y,QAAD,EAAWhI,eAAX,EAA4B2B,UAA5B,CAD0B;AAElD;;;;wBAEc;AACb,aAAO,KAAK0gB,KAAL,CAAW,CAAX,CAAP;AACD;;;wBAEqB;AACpB,aAAO,KAAKA,KAAL,CAAW,CAAX,CAAP;AACD;;;wBAEgB;AACf,aAAO,KAAKA,KAAL,CAAW,CAAX,CAAP;AACD;;;;EAfiCF,W;;AAkBpC;;;;;;;IAKaqB,gB,WAAAA,gB;;;AACX,4BAAYxb,QAAZ,EAAsBhI,eAAtB,EAAuC2B,UAAvC,EAAmD;AAAA;;AAAA,+HAC3Cmf,iBAD2C,EACxB,CAAC9Y,QAAD,EAAWhI,eAAX,EAA4B2B,UAA5B,CADwB;AAElD;;;;wBAEc;AACb,aAAO,KAAK0gB,KAAL,CAAW,CAAX,CAAP;AACD;;;wBAEqB;AACpB,aAAO,KAAKA,KAAL,CAAW,CAAX,CAAP;AACD;;;wBAEgB;AACf,aAAO,KAAKA,KAAL,CAAW,CAAX,CAAP;AACD;;;;EAfmCF,W;;AAkBtC;;;;IAEasB,mB,WAAAA,mB;;;AACX,+BAAYjiB,KAAZ,EAAmB;AAAA;;AAAA,qIACXuf,oBADW,EACW,CAACvf,KAAD,CADX;AAElB;;;;wBAEW;AACV,aAAO,KAAK6gB,KAAL,CAAW,CAAX,CAAP;AACD;;;;EAPsCF,W;;AAUzC;;;;IAEauB,mB,WAAAA,mB;;;AACX,+BAAYzjB,SAAZ,EAAuB;AAAA;;AAAA,qIACf+gB,oBADe,EACO,CAAC/gB,SAAD,CADP;AAEtB;;;;wBAEe;AACd,aAAO,KAAKoiB,KAAL,CAAW,CAAX,CAAP;AACD;;;;EAPsCF,W;;AAUzC;;;;IAEawB,sB,WAAAA,sB;;;AACX,kCAAY1jB,SAAZ,EAAuB;AAAA;;AAAA,2IACfghB,uBADe,EACU,CAAChhB,SAAD,CADV;AAEtB;;;;wBAEe;AACd,aAAO,KAAKoiB,KAAL,CAAW,CAAX,CAAP;AACD;;;;EAPyCF,W;;AAU5C;;;IACayB,I,WAAAA,I;;;AACX,kBAAc;AAAA;;AAAA,uGACN1C,KADM,EACC,EADD;AAEb;;;EAHuBiB,W;;AAM1B;;;IACa0B,I,WAAAA,I;;;AACX,kBAAc;AAAA;;AAAA,uGACN1C,KADM,EACC,EADD;AAEb;;;EAHuBgB,W;;AAM1B;;;IACa2B,I,WAAAA,I;;;AACX,kBAAc;AAAA;;AAAA,uGACN1C,KADM,EACC,EADD;AAEb;;;EAHuBe,W;;AAM1B;;;;;;;;;;;;;;;;IAca4B,c,WAAAA,c;;;AACX,0BAAYliB,aAAZ,EAA2BshB,KAA3B,EAAkC;AAAA;;AAAA,2HAC1B9B,eAD0B,EACT,CAACxf,aAAD,EAAgBshB,KAAhB,CADS;AAEjC;;;;wBAEmB;AAClB,aAAO,KAAKd,KAAL,CAAW,CAAX,CAAP;AACD;;;wBAEW;AACV,aAAO,KAAKA,KAAL,CAAW,CAAX,CAAP;AACD;;;;EAXiCF,W;;AAcpC;;;IACa6B,U,WAAAA,U;;;AACX,wBAAc;AAAA;;AAAA,mHACN1C,WADM,EACO,EADP;AAEb;;;EAH6Ba,W;;AAMhC;;;IACa8B,a,WAAAA,a;;;AACX,2BAAc;AAAA;;AAAA,yHACN1C,cADM,EACU,EADV;AAEb;;;EAHgCY,W;;AAMnC;;;;IAEa+B,U,WAAAA,U;;;AACX,sBAAY1jB,IAAZ,EAAkB;AAAA;;AAAA,mHACVghB,WADU,EACG,CAAChhB,IAAD,CADH;AAEjB;;;;wBAEU;AACT,aAAO,KAAK6hB,KAAL,CAAW,CAAX,CAAP;AACD;;;;EAP6BF,W;;;;;;;;;;;;;;;;AChdhC;;AACA;;AACA;;AACA;;AAIA;;AACA;;;;;;0JATA;;;AAaA,IAAMgC,gCAAgC,IAAtC,C,CAA4C;AAC5C,IAAMC,mBAAmB,IAAzB,C,CAA+B;;AAE/B;AACA,SAASC,eAAT,CAAyBC,QAAzB,EAAmC;AACjC,MAAIC,QAAQ,2BAAZ;AACAA,QAAMC,IAAN,CAAW,qCAAiBF,QAAjB,CAAX;AACA,SAAOC,KAAP;AACD;;AAED;AACA,SAASE,iBAAT,CAA2BF,KAA3B,EAAkC;AAChC,SAAO,uCAAmBA,MAAMG,IAAN,EAAnB,CAAP;AACD;;AAED;AACA,SAASC,iBAAT,CAA2Btb,KAA3B,EAAkC;AAChC,MAAIA,UAAU,IAAd,EAAoB;AAClB,WAAO,IAAP;AACD;AACD,MAAIA,MAAMuG,SAAN,EAAJ,EAAuB;AACrB,WAAO;AACLpP,YAAM,gBAAK,cAAL,CADD;AAEL6I,aAAOA,MAAM0E,QAAN;AAFF,KAAP;AAID,GALD,MAKO,IAAI1E,MAAMub,SAAN,EAAJ,EAAuB;AAC5B,WAAO;AACLpkB,YAAM,gBAAK,WAAL,CADD;AAEL6I,aAAO,4BAAcA,KAAd;AAFF,KAAP;AAID,GALM,MAKA,IAAIA,MAAMwb,QAAN,EAAJ,EAAsB;AAC3B,WAAO;AACLrkB,YAAM,gBAAK,aAAL,CADD;AAEL6I,aAAOA,MAAMjD;AAFR,KAAP;AAID,GALM,MAKA,IAAIiD,MAAMyb,WAAN,EAAJ,EAAyB;AAC9B,WAAO;AACLtkB,YAAM6I,MAAMrB,QADP;AAELqB,aAAOA,MAAMhK,QAAN;AAFF,KAAP;AAID,GALM,MAKA;AACL,WAAO;AACLmB,YAAM6I,MAAM7I,IAAN,GAAanB,QAAb,EADD;AAELgK,aAAOA,MAAMhK,QAAN;AAFF,KAAP;AAID;AACF;;IAEK0lB,yB,GAEJ,mCAAYC,SAAZ,EAAuB;AAAA;;AACrB,OAAKjiB,OAAL,GAAeiiB,UAAUjiB,OAAzB;AACA,OAAKU,MAAL,GAAc;AACZT,UAAMgiB,UAAUvhB,MADJ;AAEZwhB,YAAQD,UAAUthB;AAFN,GAAd;AAIA,OAAKwhB,EAAL,GAAU;AACRrc,WAAO;AACLsc,aAAO;AACLxhB,aAAKqhB,UAAU1hB,QAAV,CAAmBd,IADnB;AAELC,gBAAQuiB,UAAU1hB,QAAV,CAAmBb;AAFtB,OADF;AAKL2iB,WAAK;AACHzhB,aAAKqhB,UAAUzhB,MAAV,CAAiBf,IADnB;AAEHC,gBAAQuiB,UAAUzhB,MAAV,CAAiBd;AAFtB;AALA,KADC;AAWR+W,YAAQwL,UAAU1hB,QAAV,CAAmBkW;AAXnB,GAAV;AAaD,C;;IAIG6L,U;;;AACJ,sBAAYL,SAAZ,EAAuB;AAAA;;AAAA,mHACfA,SADe;AAEtB;;;EAHsBD,yB;;IAMnBO,c;;;AACJ,0BAAYN,SAAZ,EAAuB;AAAA;;AAAA,2HACfA,SADe;AAEtB;;;EAH0BD,yB;;IAMvBQ,qB,GACJ,+BAAYC,UAAZ,EAAwBC,SAAxB,EAAmCC,WAAnC,EAAgD;AAAA;;AAC9C,OAAKF,UAAL,GAAkBA,UAAlB;AACA,OAAKC,SAAL,GAAiBA,SAAjB;AACA,OAAKC,WAAL,GAAmBf,kBAAkBe,WAAlB,CAAnB;;AAEA;AACA,OAAKC,iBAAL,GAAyBD,WAAzB;AACD,C;;IAGGE,0B;AACJ,sCAAYrB,KAAZ,EAAmB;AAAA;;AACjB,SAAKvY,IAAL,GAAY,KAAK6Z,gBAAL,CAAsBtB,KAAtB,CAAZ;AACA,SAAKza,OAAL,GAAe,KAAKgc,aAAL,CAAmBvB,KAAnB,CAAf;AACA,SAAKwB,MAAL,GAAc,KAAKC,eAAL,CAAqBzB,KAArB,CAAd;AACA,SAAK0B,KAAL,GAAa,KAAKC,cAAL,CAAoB3B,KAApB,CAAb;AACA,SAAK4B,SAAL,GAAiB,KAAKC,kBAAL,CAAwB7B,KAAxB,CAAjB;AACD;;;;6BAEQA,K,EAAO;AAAA;AAAA;AAAA;;AAAA;AACd,6BAAmBA,MAAM8B,MAAN,CAAaC,WAAb,CAAyBC,OAAzB,CAAiC5e,QAApD,8HAA8D;AAAA,cAArD6e,MAAqD;;AAC5D,cAAIC,IAAID,OAAOtd,OAAf;AACA,cAAIud,EAAE7f,GAAF,gCACA6f,EAAEzmB,eAAF,CAAkBqJ,KAAlB,KAA4B,gBAAK,WAAL,CADhC,EACmD;AACjD,mBAAO,IAAP;AACD;AACF;AAPa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQd,aAAO,KAAP;AACD;;;gCAEWkb,K,EAAO;AACjB,aAAO,KAAKza,OAAL,KAAiB,IAAxB;AACD;;;qCAEgBya,K,EAAO;AACtB,UAAIvY,OAAO,EAAX;AADsB;AAAA;AAAA;;AAAA;AAEtB,8BAAmBuY,MAAM8B,MAAN,CAAaC,WAAb,CAAyBC,OAAzB,CAAiC5e,QAApD,mIAA8D;AAAA,cAArD6e,MAAqD;;AAC5D,cAAIC,IAAID,OAAOtd,OAAf;AACA,cAAIud,EAAE7f,GAAF,gCACA6f,EAAEzmB,eAAF,CAAkBqJ,KAAlB,KAA4B,gBAAK,WAAL,CADhC,EACmD;AACjD2C,iBAAKzF,IAAL,CAAUkgB,EAAEzmB,eAAF,CAAkBqJ,KAA5B;AACD;AACF;AARqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAStB,aAAO2C,IAAP;AACD;;;kCAEauY,K,EAAO;AAAA;AAAA;AAAA;;AAAA;AACnB,8BAAmBA,MAAM8B,MAAN,CAAaC,WAAb,CAAyBC,OAAzB,CAAiC5e,QAApD,mIAA8D;AAAA,cAArD6e,MAAqD;;AAC5D,cAAIA,OAAOtd,OAAP,CAAetC,GAAf,0BAAJ,EAA6C;AAC3C,mBAAO4f,OAAOtd,OAAP,CAAeY,OAAtB;AACD;AACF;AALkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMnB,aAAO,IAAP;AACD;;AAED;;;;;;;;;oCAMgBya,K,EAAO;AACrB,UAAI,KAAKmC,QAAL,CAAcnC,KAAd,CAAJ,EAA0B;AACxB,YAAIoC,OAAO,IAAX;AACA,eAAO,YAAY;AACjB,iBAAO,4BAAiBpC,MAAMqC,QAAvB,EAAiC,YAAM;AAC5C,mBAAOD,KAAKE,QAAL,CACLtC,KADK,EAEL,0BAAmB,gBAAK,YAAL,CAAnB,EAAuC,gBAAK,WAAL,CAAvC,CAFK,CAAP;AAID,WALM,CAAP;AAMD,SAPD;AAQD,OAVD,MAUO;AACL,eAAO,YAAY;AACjB,iBAAO,4BAAiBA,MAAMqC,QAAvB,EAAiC,YAAM;AAC5C,mBAAOnC,kBAAkBF,MAAM8B,MAAN,CAAaxX,WAA/B,CAAP;AACD,WAFM,CAAP;AAGD,SAJD;AAKD;AACF;;AAED;;;;;;;;;uCAMmB0V,K,EAAO;AACxB,UAAI,KAAKuC,WAAL,CAAiBvC,KAAjB,CAAJ,EAA6B;AAC3B,YAAIoC,OAAO,IAAX;AACA,eAAO,YAAY;AACjB,iBAAO,4BAAiBpC,MAAMqC,QAAvB,EAAiC,YAAM;AAC5C,mBAAOD,KAAKE,QAAL,CACLtC,KADK,EAEL,0BAAmB,gBAAK,YAAL,CAAnB,EAAuC,gBAAK,cAAL,CAAvC,CAFK,CAAP;AAID,WALM,CAAP;AAMD,SAPD;AAQD,OAVD,MAUO;AACL,eAAO,YAAY;AACjB,iBAAO,4BAAiBA,MAAMqC,QAAvB,EAAiC,YAAM;AAC5C,mBAAOnC,kBAAkBF,MAAM8B,MAAN,CAAaxX,WAA/B,CAAP;AACD,WAFM,CAAP;AAGD,SAJD;AAKD;AACF;;AAED;;;;;;;;;mCAMe0V,K,EAAO;AACpB,UAAIoC,OAAO,IAAX;AACA,aAAO,UAAUI,OAAV,EAAmB;AACxB,eAAO,4BAAiBxC,MAAMqC,QAAvB,EAAiC,YAAM;AAC5C,iBAAOD,KAAKE,QAAL,CACLtC,KADK,EAEL,0BAAmB,gBAAK,YAAL,CAAnB,EAAuCwC,OAAvC,CAFK,CAAP;AAID,SALM,CAAP;AAMD,OAPD;AAQD;;AAED;;;;;;;6BAISxC,K,EAAOyC,U,EAAY;AAC1B,aAAO,4BAAiBzC,MAAMqC,QAAvB,EAAiC,YAAM;AAC5C,YAAI;AACFrC,gBAAM8B,MAAN,CAAaY,uBAAb,CACED,UADF,EAEEzC,MAAM2C,mBAFR;AAIA,iBAAOzC,kBAAkBF,MAAM8B,MAAN,CAAaxX,WAA/B,CAAP;AACD,SAND,CAME,OAAOmW,SAAP,EAAkB;AAClB,cAAIA,UAAUphB,oBAAV,KAAmCujB,SAAvC,EAAkD;AAChD,kBAAMnC,SAAN;AACD;AACD,iBAAO,IAAIM,cAAJ,CAAmBN,SAAnB,CAAP;AACD;AACF,OAbM,CAAP;AAcD;;;;;;IAIGoC,a;AAEJ,yBAAYf,MAAZ,EAAoB;AAAA;;AAClB,SAAKgB,OAAL,GAAehB,MAAf;AACA,SAAKiB,UAAL,GAAkB,EAAlB;AACA,SAAKxO,MAAL,GAAc,CAAd;AACD;;;;iCAEY5X,W,EAAakC,Q,EAAUmkB,S,EAAW1Y,W,EAAa;AAC1D,UAAI,KAAK2Y,mBAAL,CAAyBtmB,WAAzB,EAAsCqmB,SAAtC,CAAJ,EAAsD;AACpD,aAAKD,UAAL,CAAgB/gB,IAAhB,CACE,KAAKkhB,SAAL,CAAevmB,WAAf,EAA4BkC,QAA5B,EAAsCmkB,SAAtC,EAAiD1Y,WAAjD,CADF;AAGD;AACF;;;gCAEW;AACV,aAAO,KAAKyY,UAAZ;AACD;;;8BAESpmB,W,EAAakC,Q,EAAUmkB,S,EAAW1Y,W,EAAa;AACvD,UAAI6Y,WAAW,EAAf;AACAA,eAASC,YAAT,GAAwB,EAAxB;AAFuD;AAAA;AAAA;;AAAA;AAGvD,8BAAuBJ,SAAvB,mIAAkC;AAAA,cAAzBK,UAAyB;;AAChC,cAAI7nB,OAAO6nB,WAAW1mB,WAAtB;AACA,cAAInB,SAAS,SAAb,EAAwB;AACtB,iBAAK+Y,MAAL,IAAe,CAAf;AACA/Y,mBAAOA,OAAO,GAAP,GAAa,KAAK+Y,MAAL,CAAYzZ,QAAZ,EAApB;AACD;AACDqoB,mBAASC,YAAT,CAAsBphB,IAAtB,CAA2BxG,IAA3B;AACD;AAVsD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWvD2nB,eAAS5Z,KAAT,GAAiB2W,kBAAkB5V,WAAlB,CAAjB;AACA6Y,eAASlO,MAAT,GAAkBpW,SAASoW,MAA3B;AACA,aAAOkO,QAAP;AACD;;;wCAEmBxmB,W,EAAaqmB,S,EAAW;AAC1C,UAAIM,mBAAmB,EAAvB;AAD0C;AAAA;AAAA;;AAAA;AAE1C,8BAAuBN,SAAvB,mIAAkC;AAAA,cAAzBK,UAAyB;;AAChCC,2BAAiBthB,IAAjB,CAAsBqhB,WAAW1mB,WAAjC;AACD;AAJyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAM1C,UAAI,KAAKmmB,OAAL,CAAaS,UAAb,CAAwB9I,WAAxB,CAAoC9d,WAApC,CAAJ,EAAsD;AACpD;;AAEA,eAAO,KAAK6mB,iBAAL,CAAuBF,gBAAvB,CAAP;AACD,OAJD,MAIO;AACL;;;AAGAA,yBAAiBG,GAAjB;AACA,eAAO,KAAKC,WAAL,CAAiB/mB,WAAjB,KACA,KAAK6mB,iBAAL,CAAuBF,gBAAvB,CADP;AAED;AACF;;;sCAEiBA,gB,EAAkB;AAAA;AAAA;AAAA;;AAAA;AAClC,8BAAwBA,gBAAxB,mIAA0C;AAAA,cAAjC3mB,WAAiC;;AACxC,cAAI,KAAKgnB,SAAL,CAAehnB,WAAf,CAAJ,EAAiC;AAC/B,mBAAO,KAAP;AACD;AACF;AALiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMlC,aAAO,IAAP;AACD;;;8BAESA,W,EAAa;AACrB,UAAIA,gBAAgB,SAApB,EAA+B;AAC7B,eAAO,KAAP;AACD,OAFD,MAEO,IAAI,KAAKmmB,OAAL,CAAaS,UAAb,CAAwB9I,WAAxB,CAAoC9d,WAApC,CAAJ,EAAsD;AAC3D;AACA,eAAO,KAAP;AACD,OAHM,MAGA,IAAI,KAAKmmB,OAAL,CAAaf,WAAb,CAAyBtH,WAAzB,CAAqC9d,WAArC,CAAJ,EAAuD;AAC5D;AACA,eAAO,KAAP;AACD,OAHM,MAGA;AACL;AACA,eAAO,IAAP;AACD;AACF;;;gCAEWA,W,EAAa;AACvB,UAAIA,gBAAgB,SAApB,EAA+B;AAC7B,eAAO,IAAP;AACD,OAFD,MAEO,IAAI,KAAKmmB,OAAL,CAAaS,UAAb,CAAwB9I,WAAxB,CAAoC9d,WAApC,CAAJ,EAAsD;AAC3D;AACA,eAAO,IAAP;AACD,OAHM,MAGA,IAAI,KAAKmmB,OAAL,CAAaf,WAAb,CAAyBtH,WAAzB,CAAqC9d,WAArC,CAAJ,EAAuD;AAC5D;AACA,eAAO,KAAP;AACD,OAHM,MAGA;AACL;AACA,eAAO,KAAP;AACD;AACF;;;;;;IAIGinB,W;AAEJ,uBAAY5D,KAAZ,EAAmB;AAAA;;AACjB,QAAIA,MAAM8B,MAAN,CAAaC,WAAb,CAAyBC,OAAzB,KAAqC,IAAzC,EAA+C;AAC7C,WAAKA,OAAL,GAAe,IAAf;AACD,KAFD,MAEO,IAAIhC,MAAM8B,MAAN,CAAaC,WAAb,CAAyB8B,oBAAzB,EAAJ,EAAqD;AAC1D,WAAK7B,OAAL,GAAe,KAAK8B,4BAAL,CAAkC9D,KAAlC,CAAf;AACD,KAFM,MAEA;AACL,WAAKgC,OAAL,GAAe,KAAK+B,iBAAL,CAAuB/D,KAAvB,CAAf;AACD;AACD,SAAKgE,YAAL,GAAoB,KAAKC,oBAAL,CAA0BjE,MAAM8B,MAAhC,CAApB;AACD;;;;sCAEiB9B,K,EAAO;AACvB,UAAIgC,UAAU,EAAd;AACAA,cAAQkC,KAAR,GAAgB,SAAhB;AACAlC,cAAQmC,SAAR,GAAoB,UAAU5a,KAAV,EAAiB;AACnC,eAAO,4BAAiByW,MAAMqC,QAAvB,EAAiC,YAAM;AAC5C,cAAI+B,gBAAgB,IAAIvB,aAAJ,CAAkB7C,MAAM8B,MAAxB,CAApB;AACA,cAAI;AACF9B,kBAAM8B,MAAN,CAAauC,OAAb;AACArE,kBAAM8B,MAAN,CAAawC,iCAAb,CACExE,gBAAgBvW,KAAhB,CADF,EAEEyW,MAAM2C,mBAFR,EAGEyB,cAAcG,YAAd,CAA2BC,IAA3B,CAAgCJ,aAAhC,CAHF;;AAMA,gBAAInD,aAAaf,kBAAkBF,MAAM8B,MAAN,CAAaxX,WAA/B,CAAjB;AACA,gBAAI6W,cAAcnB,MAAM8B,MAAN,CAAahe,MAA/B;AACA,mBAAO,IAAIkd,qBAAJ,CACLC,UADK,EAELmD,cAAclD,SAAd,EAFK,EAGLC,WAHK,CAAP;AAKD,WAfD,CAeE,OAAOV,SAAP,EAAkB;AAClB,gBAAIA,UAAUphB,oBAAV,KAAmCujB,SAAvC,EAAkD;AAChD,oBAAMnC,SAAN;AACD;AACD,mBAAO,IAAIM,cAAJ,CAAmBN,SAAnB,CAAP;AACD;AACF,SAvBM,CAAP;AAwBD,OAzBD;AA0BA,aAAOuB,OAAP;AACD;;;iDAE4BhC,K,EAAO;AAClC,UAAIgC,UAAU,EAAd;AACAA,cAAQkC,KAAR,GAAgB,oBAAhB;AACAlC,cAAQmC,SAAR,GAAoB,UAAU5a,KAAV,EAAiB;AACnC,eAAO,4BAAiByW,MAAMqC,QAAvB,EAAiC,YAAM;AAC5C,cAAI;AACFrC,kBAAM8B,MAAN,CAAauC,OAAb;AACArE,kBAAM8B,MAAN,CAAa2C,wBAAb,CAAsC3E,gBAAgBvW,KAAhB,CAAtC;AACA,mBAAO,IAAI8X,0BAAJ,CAA+BrB,KAA/B,CAAP;AACD,WAJD,CAIE,OAAOS,SAAP,EAAkB;AAClB,gBAAIA,UAAUphB,oBAAV,KAAmCujB,SAAvC,EAAkD;AAChD,oBAAMnC,SAAN;AACD;AACD,mBAAO,IAAIM,cAAJ,CAAmBN,SAAnB,CAAP;AACD;AACF,SAXM,CAAP;AAYD,OAbD;AAcA,aAAOuB,OAAP;AACD;;;yCAEoBF,M,EAAQ;AAC3B,UAAIkC,eAAe,EAAnB;AAD2B;AAAA;AAAA;;AAAA;AAE3B,8BAAiBlC,OAAOC,WAAP,CAAmB2C,iBAAnB,EAAjB,mIAAyD;AAAA,cAAhDlpB,IAAgD;;AACvD,cAAIsmB,OAAOyB,UAAP,CAAkB9I,WAAlB,CAA8Bjf,IAA9B,CAAJ,EAAyC;AACvC,qBADuC,CAC7B;AACX;AACDwoB,uBAAahiB,IAAb,CAAkB;AAChBkiB,mBAAO,sBADS;AAEhB1oB,kBAAMA;AAFU,WAAlB;AAID;AAV0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAW3B,8BAAiBsmB,OAAOC,WAAP,CAAmB4C,gBAAnB,EAAjB,mIAAwD;AAAA,cAA/CnpB,KAA+C;;AACtD,cAAIsmB,OAAOyB,UAAP,CAAkB7I,UAAlB,CAA6Blf,KAA7B,CAAJ,EAAwC;AACtC,qBADsC,CAC5B;AACX;AACDwoB,uBAAahiB,IAAb,CAAkB;AAChBkiB,mBAAO,qBADS;AAEhB1oB,kBAAMA;AAFU,WAAlB;AAID;AAnB0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAoB3B,aAAOwoB,YAAP;AACD;;;;;;IAIUY,uB,WAAAA,uB,GAEX,mCAAc;AAAA;;AACZ;AACA,MAAI5E,QAAQ;AACV2C,yBAAqB/C,6BADX;AAEVyC,cAAUxC,gBAFA;AAGViC,YAAQ;AAHE,GAAZ;;AAMA,OAAK+C,MAAL,GAAc;AACZC,iBAAa,qBAAUrmB,IAAV,EAAgB;AAC3BuhB,YAAMqC,QAAN,GAAiB5jB,IAAjB;AACD,KAHW;AAIZsmB,4BAAwB,gCAAUC,YAAV,EAAwB;AAC9ChF,YAAM2C,mBAAN,GAA4BqC,YAA5B;AACD,KANW;AAOZC,0BAAsB,8BAAUC,SAAV,EAAqB;AACzC;AACD;AATW,GAAd;;AAYA,OAAKC,GAAL,GAAW;AACT;;AAEAC,UAAM,cAAUD,GAAV,EAAe;AACnB,aAAO,uCAAmB,gCAAYA,GAAZ,CAAnB,CAAP;AACD,KALQ;AAMT;;AAEAE,WAAO,eAAUtF,QAAV,EAAoB;AACzB,aAAO,kCAAc,qCAAiBA,QAAjB,CAAd,CAAP;AACD;AAVQ,GAAX;;AAaA,OAAKuF,KAAL,GAAa,UAAUC,UAAV,EAAsB;AACjC,WAAO,4BAAiBvF,MAAMqC,QAAvB,EAAiC,YAAM;AAC5C,UAAI;AACFrC,cAAM8B,MAAN,CAAa0D,UAAb;AACAxF,cAAM8B,MAAN,CAAawD,KAAb,CAAmBC,UAAnB;AACA;AACAvF,cAAM8B,MAAN,CAAa2D,eAAb,CACE,yCADF,EAC6C,KAD7C;AAGAzF,cAAM8B,MAAN,CAAa4D,IAAb;AACA,eAAO,IAAI9B,WAAJ,CAAgB5D,KAAhB,CAAP;AACD,OATD,CASE,OAAOS,SAAP,EAAkB;AAClB,YAAIA,UAAUphB,oBAAV,KAAmCujB,SAAvC,EAAkD;AAChD,gBAAMnC,SAAN;AACD;AACD,eAAO,IAAIK,UAAJ,CAAeL,SAAf,CAAP;AACD;AACF,KAhBM,CAAP;AAiBD,GAlBD;AAoBD,C;;;;;;;;;;;;QC9dakF,O,GAAAA,O;AAXhB;;AAEA;;;AAGA,IAAIC,OAAO,GAAX;AAAA,IACIC,WAAW,CADf;AAAA,IAEIC,UAAU,gBAFd;AAAA,IAGIC,cAAcC,aAAaF,OAAb,CAHlB;AAAA,IAIIG,cAAcC,KAAKC,GAAL,CAASL,OAAT,CAJlB;;AAMO,SAASH,OAAT,CAAiBS,CAAjB,EAAoBC,KAApB,EAA2B;AAC9B,QAAI,OAAOD,CAAP,KAAa,WAAjB,EAA8B,OAAOT,QAAQ,CAAR,CAAP;AAC9B,QAAI,OAAOU,KAAP,KAAiB,WAArB,EAAkC,OAAO,CAACA,KAAD,KAAW,EAAX,GAAgBC,WAAWF,CAAX,CAAhB,GAAgCG,UAAUH,CAAV,EAAaC,KAAb,CAAvC;AAClC,WAAOC,WAAWF,CAAX,CAAP;AACH;;AAED,SAASI,UAAT,CAAoB1hB,KAApB,EAA2B2hB,IAA3B,EAAiC;AAC7B,SAAK3hB,KAAL,GAAaA,KAAb;AACA,SAAK2hB,IAAL,GAAYA,IAAZ;AACA,SAAKC,OAAL,GAAe,KAAf;AACH;AACDF,WAAWG,SAAX,GAAuBpR,OAAOqR,MAAP,CAAcjB,QAAQgB,SAAtB,CAAvB;;AAEA,SAASE,YAAT,CAAsB/hB,KAAtB,EAA6B;AACzB,SAAKA,KAAL,GAAaA,KAAb;AACA,SAAK2hB,IAAL,GAAY3hB,QAAQ,CAApB;AACA,SAAK4hB,OAAL,GAAe,IAAf;AACH;AACDG,aAAaF,SAAb,GAAyBpR,OAAOqR,MAAP,CAAcjB,QAAQgB,SAAtB,CAAzB;;AAEA,SAASG,SAAT,CAAmBnsB,CAAnB,EAAsB;AAClB,WAAO,CAACmrB,OAAD,GAAWnrB,CAAX,IAAgBA,IAAImrB,OAA3B;AACH;;AAED,SAASE,YAAT,CAAsBrrB,CAAtB,EAAyB;AAAE;AACvB,QAAIA,IAAI,GAAR,EACI,OAAO,CAACA,CAAD,CAAP;AACJ,QAAIA,IAAI,IAAR,EACI,OAAO,CAACA,IAAI,GAAL,EAAUurB,KAAKa,KAAL,CAAWpsB,IAAI,GAAf,CAAV,CAAP;AACJ,WAAO,CAACA,IAAI,GAAL,EAAUurB,KAAKa,KAAL,CAAWpsB,IAAI,GAAf,IAAsB,GAAhC,EAAqCurB,KAAKa,KAAL,CAAWpsB,IAAI,IAAf,CAArC,CAAP;AACH;;AAED,SAASqsB,YAAT,CAAsBC,GAAtB,EAA2B;AAAE;AACzBC,SAAKD,GAAL;AACA,QAAI5qB,SAAS4qB,IAAI5qB,MAAjB;AACA,QAAIA,SAAS,CAAT,IAAc8qB,WAAWF,GAAX,EAAgBlB,WAAhB,IAA+B,CAAjD,EAAoD;AAChD,gBAAQ1pB,MAAR;AACI,iBAAK,CAAL;AAAQ,uBAAO,CAAP;AACR,iBAAK,CAAL;AAAQ,uBAAO4qB,IAAI,CAAJ,CAAP;AACR,iBAAK,CAAL;AAAQ,uBAAOA,IAAI,CAAJ,IAASA,IAAI,CAAJ,IAASrB,IAAzB;AACR;AAAS,uBAAOqB,IAAI,CAAJ,IAAS,CAACA,IAAI,CAAJ,IAASA,IAAI,CAAJ,IAASrB,IAAnB,IAA2BA,IAA3C;AAJb;AAMH;AACD,WAAOqB,GAAP;AACH;;AAED,SAASC,IAAT,CAAcd,CAAd,EAAiB;AACb,QAAIxV,IAAIwV,EAAE/pB,MAAV;AACA,WAAO+pB,EAAE,EAAExV,CAAJ,MAAW,CAAlB;AACAwV,MAAE/pB,MAAF,GAAWuU,IAAI,CAAf;AACH;;AAED,SAASwW,WAAT,CAAqB/qB,MAArB,EAA6B;AAAE;AAC3B,QAAIwM,IAAI,IAAIzG,KAAJ,CAAU/F,MAAV,CAAR;AACA,QAAIuU,IAAI,CAAC,CAAT;AACA,WAAO,EAAEA,CAAF,GAAMvU,MAAb,EAAqB;AACjBwM,UAAE+H,CAAF,IAAO,CAAP;AACH;AACD,WAAO/H,CAAP;AACH;;AAED,SAASwe,QAAT,CAAkB1sB,CAAlB,EAAqB;AACjB,QAAIA,IAAI,CAAR,EAAW,OAAOurB,KAAKa,KAAL,CAAWpsB,CAAX,CAAP;AACX,WAAOurB,KAAKoB,IAAL,CAAU3sB,CAAV,CAAP;AACH;;AAED,SAAS8O,GAAT,CAAaoC,CAAb,EAAgBC,CAAhB,EAAmB;AAAE;AACjB,QAAIyb,MAAM1b,EAAExP,MAAZ;AAAA,QACImrB,MAAM1b,EAAEzP,MADZ;AAAA,QAEIsY,IAAI,IAAIvS,KAAJ,CAAUmlB,GAAV,CAFR;AAAA,QAGIE,QAAQ,CAHZ;AAAA,QAIIC,OAAO9B,IAJX;AAAA,QAKI+B,GALJ;AAAA,QAKS/W,CALT;AAMA,SAAKA,IAAI,CAAT,EAAYA,IAAI4W,GAAhB,EAAqB5W,GAArB,EAA0B;AACtB+W,cAAM9b,EAAE+E,CAAF,IAAO9E,EAAE8E,CAAF,CAAP,GAAc6W,KAApB;AACAA,gBAAQE,OAAOD,IAAP,GAAc,CAAd,GAAkB,CAA1B;AACA/S,UAAE/D,CAAF,IAAO+W,MAAMF,QAAQC,IAArB;AACH;AACD,WAAO9W,IAAI2W,GAAX,EAAgB;AACZI,cAAM9b,EAAE+E,CAAF,IAAO6W,KAAb;AACAA,gBAAQE,QAAQD,IAAR,GAAe,CAAf,GAAmB,CAA3B;AACA/S,UAAE/D,GAAF,IAAS+W,MAAMF,QAAQC,IAAvB;AACH;AACD,QAAID,QAAQ,CAAZ,EAAe9S,EAAE3S,IAAF,CAAOylB,KAAP;AACf,WAAO9S,CAAP;AACH;;AAED,SAASiT,MAAT,CAAgB/b,CAAhB,EAAmBC,CAAnB,EAAsB;AAClB,QAAID,EAAExP,MAAF,IAAYyP,EAAEzP,MAAlB,EAA0B,OAAOoN,IAAIoC,CAAJ,EAAOC,CAAP,CAAP;AAC1B,WAAOrC,IAAIqC,CAAJ,EAAOD,CAAP,CAAP;AACH;;AAED,SAASgc,QAAT,CAAkBhc,CAAlB,EAAqB4b,KAArB,EAA4B;AAAE;AAC1B,QAAIK,IAAIjc,EAAExP,MAAV;AAAA,QACIsY,IAAI,IAAIvS,KAAJ,CAAU0lB,CAAV,CADR;AAAA,QAEIJ,OAAO9B,IAFX;AAAA,QAGI+B,GAHJ;AAAA,QAGS/W,CAHT;AAIA,SAAKA,IAAI,CAAT,EAAYA,IAAIkX,CAAhB,EAAmBlX,GAAnB,EAAwB;AACpB+W,cAAM9b,EAAE+E,CAAF,IAAO8W,IAAP,GAAcD,KAApB;AACAA,gBAAQvB,KAAKa,KAAL,CAAWY,MAAMD,IAAjB,CAAR;AACA/S,UAAE/D,CAAF,IAAO+W,MAAMF,QAAQC,IAArB;AACAD,iBAAS,CAAT;AACH;AACD,WAAOA,QAAQ,CAAf,EAAkB;AACd9S,UAAE/D,GAAF,IAAS6W,QAAQC,IAAjB;AACAD,gBAAQvB,KAAKa,KAAL,CAAWU,QAAQC,IAAnB,CAAR;AACH;AACD,WAAO/S,CAAP;AACH;;AAED6R,WAAWG,SAAX,CAAqBld,GAArB,GAA2B,UAAU2c,CAAV,EAAa;AACpC,QAAIzrB,IAAI2rB,WAAWF,CAAX,CAAR;AACA,QAAI,KAAKK,IAAL,KAAc9rB,EAAE8rB,IAApB,EAA0B;AACtB,eAAO,KAAKlU,QAAL,CAAc5X,EAAE+R,MAAF,EAAd,CAAP;AACH;AACD,QAAIb,IAAI,KAAK/G,KAAb;AAAA,QAAoBgH,IAAInR,EAAEmK,KAA1B;AACA,QAAInK,EAAE+rB,OAAN,EAAe;AACX,eAAO,IAAIF,UAAJ,CAAeqB,SAAShc,CAAT,EAAYqa,KAAKxT,GAAL,CAAS5G,CAAT,CAAZ,CAAf,EAAyC,KAAK2a,IAA9C,CAAP;AACH;AACD,WAAO,IAAID,UAAJ,CAAeoB,OAAO/b,CAAP,EAAUC,CAAV,CAAf,EAA6B,KAAK2a,IAAlC,CAAP;AACH,CAVD;AAWAD,WAAWG,SAAX,CAAqBoB,IAArB,GAA4BvB,WAAWG,SAAX,CAAqBld,GAAjD;;AAEAod,aAAaF,SAAb,CAAuBld,GAAvB,GAA6B,UAAU2c,CAAV,EAAa;AACtC,QAAIzrB,IAAI2rB,WAAWF,CAAX,CAAR;AACA,QAAIva,IAAI,KAAK/G,KAAb;AACA,QAAI+G,IAAI,CAAJ,KAAUlR,EAAE8rB,IAAhB,EAAsB;AAClB,eAAO,KAAKlU,QAAL,CAAc5X,EAAE+R,MAAF,EAAd,CAAP;AACH;AACD,QAAIZ,IAAInR,EAAEmK,KAAV;AACA,QAAInK,EAAE+rB,OAAN,EAAe;AACX,YAAII,UAAUjb,IAAIC,CAAd,CAAJ,EAAsB,OAAO,IAAI+a,YAAJ,CAAiBhb,IAAIC,CAArB,CAAP;AACtBA,YAAIka,aAAaE,KAAKxT,GAAL,CAAS5G,CAAT,CAAb,CAAJ;AACH;AACD,WAAO,IAAI0a,UAAJ,CAAeqB,SAAS/b,CAAT,EAAYoa,KAAKxT,GAAL,CAAS7G,CAAT,CAAZ,CAAf,EAAyCA,IAAI,CAA7C,CAAP;AACH,CAZD;AAaAgb,aAAaF,SAAb,CAAuBoB,IAAvB,GAA8BlB,aAAaF,SAAb,CAAuBld,GAArD;;AAEA,SAAS8I,QAAT,CAAkB1G,CAAlB,EAAqBC,CAArB,EAAwB;AAAE;AACtB,QAAIkc,MAAMnc,EAAExP,MAAZ;AAAA,QACI4rB,MAAMnc,EAAEzP,MADZ;AAAA,QAEIsY,IAAI,IAAIvS,KAAJ,CAAU4lB,GAAV,CAFR;AAAA,QAGIE,SAAS,CAHb;AAAA,QAIIR,OAAO9B,IAJX;AAAA,QAKIhV,CALJ;AAAA,QAKOuX,UALP;AAMA,SAAKvX,IAAI,CAAT,EAAYA,IAAIqX,GAAhB,EAAqBrX,GAArB,EAA0B;AACtBuX,qBAAatc,EAAE+E,CAAF,IAAOsX,MAAP,GAAgBpc,EAAE8E,CAAF,CAA7B;AACA,YAAIuX,aAAa,CAAjB,EAAoB;AAChBA,0BAAcT,IAAd;AACAQ,qBAAS,CAAT;AACH,SAHD,MAGOA,SAAS,CAAT;AACPvT,UAAE/D,CAAF,IAAOuX,UAAP;AACH;AACD,SAAKvX,IAAIqX,GAAT,EAAcrX,IAAIoX,GAAlB,EAAuBpX,GAAvB,EAA4B;AACxBuX,qBAAatc,EAAE+E,CAAF,IAAOsX,MAApB;AACA,YAAIC,aAAa,CAAjB,EAAoBA,cAAcT,IAAd,CAApB,KACK;AACD/S,cAAE/D,GAAF,IAASuX,UAAT;AACA;AACH;AACDxT,UAAE/D,CAAF,IAAOuX,UAAP;AACH;AACD,WAAOvX,IAAIoX,GAAX,EAAgBpX,GAAhB,EAAqB;AACjB+D,UAAE/D,CAAF,IAAO/E,EAAE+E,CAAF,CAAP;AACH;AACDsW,SAAKvS,CAAL;AACA,WAAOA,CAAP;AACH;;AAED,SAASyT,WAAT,CAAqBvc,CAArB,EAAwBC,CAAxB,EAA2B2a,IAA3B,EAAiC;AAC7B,QAAI3hB,KAAJ;AACA,QAAIqiB,WAAWtb,CAAX,EAAcC,CAAd,KAAoB,CAAxB,EAA2B;AACvBhH,gBAAQyN,SAAS1G,CAAT,EAAWC,CAAX,CAAR;AACH,KAFD,MAEO;AACHhH,gBAAQyN,SAASzG,CAAT,EAAYD,CAAZ,CAAR;AACA4a,eAAO,CAACA,IAAR;AACH;AACD3hB,YAAQkiB,aAAaliB,KAAb,CAAR;AACA,QAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC3B,YAAI2hB,IAAJ,EAAU3hB,QAAQ,CAACA,KAAT;AACV,eAAO,IAAI+hB,YAAJ,CAAiB/hB,KAAjB,CAAP;AACH;AACD,WAAO,IAAI0hB,UAAJ,CAAe1hB,KAAf,EAAsB2hB,IAAtB,CAAP;AACH;;AAED,SAAS4B,aAAT,CAAuBxc,CAAvB,EAA0BC,CAA1B,EAA6B2a,IAA7B,EAAmC;AAAE;AACjC,QAAIqB,IAAIjc,EAAExP,MAAV;AAAA,QACIsY,IAAI,IAAIvS,KAAJ,CAAU0lB,CAAV,CADR;AAAA,QAEIL,QAAQ,CAAC3b,CAFb;AAAA,QAGI4b,OAAO9B,IAHX;AAAA,QAIIhV,CAJJ;AAAA,QAIOuX,UAJP;AAKA,SAAKvX,IAAI,CAAT,EAAYA,IAAIkX,CAAhB,EAAmBlX,GAAnB,EAAwB;AACpBuX,qBAAatc,EAAE+E,CAAF,IAAO6W,KAApB;AACAA,gBAAQvB,KAAKa,KAAL,CAAWoB,aAAaT,IAAxB,CAAR;AACAS,sBAAcT,IAAd;AACA/S,UAAE/D,CAAF,IAAOuX,aAAa,CAAb,GAAiBA,aAAaT,IAA9B,GAAqCS,UAA5C;AACH;AACDxT,QAAIqS,aAAarS,CAAb,CAAJ;AACA,QAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B;AACvB,YAAI8R,IAAJ,EAAU9R,IAAI,CAACA,CAAL;AACV,eAAO,IAAIkS,YAAJ,CAAiBlS,CAAjB,CAAP;AACH,KAAC,OAAO,IAAI6R,UAAJ,CAAe7R,CAAf,EAAkB8R,IAAlB,CAAP;AACL;;AAEDD,WAAWG,SAAX,CAAqBpU,QAArB,GAAgC,UAAU6T,CAAV,EAAa;AACzC,QAAIzrB,IAAI2rB,WAAWF,CAAX,CAAR;AACA,QAAI,KAAKK,IAAL,KAAc9rB,EAAE8rB,IAApB,EAA0B;AACtB,eAAO,KAAKhd,GAAL,CAAS9O,EAAE+R,MAAF,EAAT,CAAP;AACH;AACD,QAAIb,IAAI,KAAK/G,KAAb;AAAA,QAAoBgH,IAAInR,EAAEmK,KAA1B;AACA,QAAInK,EAAE+rB,OAAN,EACI,OAAO2B,cAAcxc,CAAd,EAAiBqa,KAAKxT,GAAL,CAAS5G,CAAT,CAAjB,EAA8B,KAAK2a,IAAnC,CAAP;AACJ,WAAO2B,YAAYvc,CAAZ,EAAeC,CAAf,EAAkB,KAAK2a,IAAvB,CAAP;AACH,CATD;AAUAD,WAAWG,SAAX,CAAqB2B,KAArB,GAA6B9B,WAAWG,SAAX,CAAqBpU,QAAlD;;AAEAsU,aAAaF,SAAb,CAAuBpU,QAAvB,GAAkC,UAAU6T,CAAV,EAAa;AAC3C,QAAIzrB,IAAI2rB,WAAWF,CAAX,CAAR;AACA,QAAIva,IAAI,KAAK/G,KAAb;AACA,QAAI+G,IAAI,CAAJ,KAAUlR,EAAE8rB,IAAhB,EAAsB;AAClB,eAAO,KAAKhd,GAAL,CAAS9O,EAAE+R,MAAF,EAAT,CAAP;AACH;AACD,QAAIZ,IAAInR,EAAEmK,KAAV;AACA,QAAInK,EAAE+rB,OAAN,EAAe;AACX,eAAO,IAAIG,YAAJ,CAAiBhb,IAAIC,CAArB,CAAP;AACH;AACD,WAAOuc,cAAcvc,CAAd,EAAiBoa,KAAKxT,GAAL,CAAS7G,CAAT,CAAjB,EAA8BA,KAAK,CAAnC,CAAP;AACH,CAXD;AAYAgb,aAAaF,SAAb,CAAuB2B,KAAvB,GAA+BzB,aAAaF,SAAb,CAAuBpU,QAAtD;;AAEAiU,WAAWG,SAAX,CAAqBja,MAArB,GAA8B,YAAY;AACtC,WAAO,IAAI8Z,UAAJ,CAAe,KAAK1hB,KAApB,EAA2B,CAAC,KAAK2hB,IAAjC,CAAP;AACH,CAFD;AAGAI,aAAaF,SAAb,CAAuBja,MAAvB,GAAgC,YAAY;AACxC,QAAI+Z,OAAO,KAAKA,IAAhB;AACA,QAAI8B,QAAQ,IAAI1B,YAAJ,CAAiB,CAAC,KAAK/hB,KAAvB,CAAZ;AACAyjB,UAAM9B,IAAN,GAAa,CAACA,IAAd;AACA,WAAO8B,KAAP;AACH,CALD;;AAOA/B,WAAWG,SAAX,CAAqBjU,GAArB,GAA2B,YAAY;AACnC,WAAO,IAAI8T,UAAJ,CAAe,KAAK1hB,KAApB,EAA2B,KAA3B,CAAP;AACH,CAFD;AAGA+hB,aAAaF,SAAb,CAAuBjU,GAAvB,GAA6B,YAAY;AACrC,WAAO,IAAImU,YAAJ,CAAiBX,KAAKxT,GAAL,CAAS,KAAK5N,KAAd,CAAjB,CAAP;AACH,CAFD;;AAIA,SAAS0jB,YAAT,CAAsB3c,CAAtB,EAAyBC,CAAzB,EAA4B;AACxB,QAAIkc,MAAMnc,EAAExP,MAAZ;AAAA,QACI4rB,MAAMnc,EAAEzP,MADZ;AAAA,QAEIyrB,IAAIE,MAAMC,GAFd;AAAA,QAGItT,IAAIyS,YAAYU,CAAZ,CAHR;AAAA,QAIIJ,OAAO9B,IAJX;AAAA,QAKI6C,OALJ;AAAA,QAKahB,KALb;AAAA,QAKoB7W,CALpB;AAAA,QAKuB8X,GALvB;AAAA,QAK4BC,GAL5B;AAMA,SAAK/X,IAAI,CAAT,EAAYA,IAAIoX,GAAhB,EAAqB,EAAEpX,CAAvB,EAA0B;AACtB8X,cAAM7c,EAAE+E,CAAF,CAAN;AACA,aAAK,IAAIoE,IAAI,CAAb,EAAgBA,IAAIiT,GAApB,EAAyB,EAAEjT,CAA3B,EAA8B;AAC1B2T,kBAAM7c,EAAEkJ,CAAF,CAAN;AACAyT,sBAAUC,MAAMC,GAAN,GAAYhU,EAAE/D,IAAIoE,CAAN,CAAtB;AACAyS,oBAAQvB,KAAKa,KAAL,CAAW0B,UAAUf,IAArB,CAAR;AACA/S,cAAE/D,IAAIoE,CAAN,IAAWyT,UAAUhB,QAAQC,IAA7B;AACA/S,cAAE/D,IAAIoE,CAAJ,GAAQ,CAAV,KAAgByS,KAAhB;AACH;AACJ;AACDP,SAAKvS,CAAL;AACA,WAAOA,CAAP;AACH;;AAED,SAASiU,aAAT,CAAuB/c,CAAvB,EAA0BC,CAA1B,EAA6B;AAAE;AAC3B,QAAIgc,IAAIjc,EAAExP,MAAV;AAAA,QACIsY,IAAI,IAAIvS,KAAJ,CAAU0lB,CAAV,CADR;AAAA,QAEIJ,OAAO9B,IAFX;AAAA,QAGI6B,QAAQ,CAHZ;AAAA,QAIIgB,OAJJ;AAAA,QAIa7X,CAJb;AAKA,SAAKA,IAAI,CAAT,EAAYA,IAAIkX,CAAhB,EAAmBlX,GAAnB,EAAwB;AACpB6X,kBAAU5c,EAAE+E,CAAF,IAAO9E,CAAP,GAAW2b,KAArB;AACAA,gBAAQvB,KAAKa,KAAL,CAAW0B,UAAUf,IAArB,CAAR;AACA/S,UAAE/D,CAAF,IAAO6X,UAAUhB,QAAQC,IAAzB;AACH;AACD,WAAOD,QAAQ,CAAf,EAAkB;AACd9S,UAAE/D,GAAF,IAAS6W,QAAQC,IAAjB;AACAD,gBAAQvB,KAAKa,KAAL,CAAWU,QAAQC,IAAnB,CAAR;AACH;AACD,WAAO/S,CAAP;AACH;;AAED,SAASkU,SAAT,CAAmBhgB,CAAnB,EAAsBlO,CAAtB,EAAyB;AACrB,QAAIga,IAAI,EAAR;AACA,WAAOha,MAAM,CAAb;AAAgBga,UAAE3S,IAAF,CAAO,CAAP;AAAhB,KACA,OAAO2S,EAAEjN,MAAF,CAASmB,CAAT,CAAP;AACH;;AAED,SAASigB,iBAAT,CAA2BjgB,CAA3B,EAA8BC,CAA9B,EAAiC;AAC7B,QAAInO,IAAIurB,KAAK6C,GAAL,CAASlgB,EAAExM,MAAX,EAAmByM,EAAEzM,MAArB,CAAR;;AAEA,QAAI1B,KAAK,EAAT,EAAa,OAAO6tB,aAAa3f,CAAb,EAAgBC,CAAhB,CAAP;AACbnO,QAAIurB,KAAKoB,IAAL,CAAU3sB,IAAI,CAAd,CAAJ;;AAEA,QAAImR,IAAIjD,EAAEqM,KAAF,CAAQva,CAAR,CAAR;AAAA,QACIkR,IAAIhD,EAAEqM,KAAF,CAAQ,CAAR,EAAWva,CAAX,CADR;AAAA,QAEIquB,IAAIlgB,EAAEoM,KAAF,CAAQva,CAAR,CAFR;AAAA,QAGIsuB,IAAIngB,EAAEoM,KAAF,CAAQ,CAAR,EAAWva,CAAX,CAHR;;AAKA,QAAIuuB,KAAKJ,kBAAkBjd,CAAlB,EAAqBod,CAArB,CAAT;AAAA,QACIE,KAAKL,kBAAkBhd,CAAlB,EAAqBkd,CAArB,CADT;AAAA,QAEII,OAAON,kBAAkBlB,OAAO/b,CAAP,EAAUC,CAAV,CAAlB,EAAgC8b,OAAOqB,CAAP,EAAUD,CAAV,CAAhC,CAFX;;AAIA,QAAIP,UAAUb,OAAOA,OAAOsB,EAAP,EAAWL,UAAUtW,SAASA,SAAS6W,IAAT,EAAeF,EAAf,CAAT,EAA6BC,EAA7B,CAAV,EAA4CxuB,CAA5C,CAAX,CAAP,EAAmEkuB,UAAUM,EAAV,EAAc,IAAIxuB,CAAlB,CAAnE,CAAd;AACAusB,SAAKuB,OAAL;AACA,WAAOA,OAAP;AACH;;AAED;AACA;AACA,SAASY,YAAT,CAAsBC,EAAtB,EAA0BC,EAA1B,EAA8B;AAC1B,WAAO,CAAC,KAAD,GAASD,EAAT,GAAc,QAAQC,EAAtB,GAA2B,WAAWD,EAAX,GAAgBC,EAA3C,GAAgD,CAAvD;AACH;;AAED/C,WAAWG,SAAX,CAAqBnU,QAArB,GAAgC,UAAU4T,CAAV,EAAa;AACzC,QAAIzrB,IAAI2rB,WAAWF,CAAX,CAAR;AAAA,QACIva,IAAI,KAAK/G,KADb;AAAA,QACoBgH,IAAInR,EAAEmK,KAD1B;AAAA,QAEI2hB,OAAO,KAAKA,IAAL,KAAc9rB,EAAE8rB,IAF3B;AAAA,QAGI/T,GAHJ;AAIA,QAAI/X,EAAE+rB,OAAN,EAAe;AACX,YAAI5a,MAAM,CAAV,EAAa,OAAO6Z,QAAQ,CAAR,CAAP;AACb,YAAI7Z,MAAM,CAAV,EAAa,OAAO,IAAP;AACb,YAAIA,MAAM,CAAC,CAAX,EAAc,OAAO,KAAKY,MAAL,EAAP;AACdgG,cAAMwT,KAAKxT,GAAL,CAAS5G,CAAT,CAAN;AACA,YAAI4G,MAAMkT,IAAV,EAAgB;AACZ,mBAAO,IAAIY,UAAJ,CAAeoC,cAAc/c,CAAd,EAAiB6G,GAAjB,CAAf,EAAsC+T,IAAtC,CAAP;AACH;AACD3a,YAAIka,aAAatT,GAAb,CAAJ;AACH;AACD,QAAI2W,aAAaxd,EAAExP,MAAf,EAAuByP,EAAEzP,MAAzB,CAAJ,EAAsC;AAClC,eAAO,IAAImqB,UAAJ,CAAesC,kBAAkBjd,CAAlB,EAAqBC,CAArB,CAAf,EAAwC2a,IAAxC,CAAP;AACJ,WAAO,IAAID,UAAJ,CAAegC,aAAa3c,CAAb,EAAgBC,CAAhB,CAAf,EAAmC2a,IAAnC,CAAP;AACH,CAlBD;;AAoBAD,WAAWG,SAAX,CAAqBviB,KAArB,GAA6BoiB,WAAWG,SAAX,CAAqBnU,QAAlD;;AAEA,SAASgX,qBAAT,CAA+B3d,CAA/B,EAAkCC,CAAlC,EAAqC2a,IAArC,EAA2C;AAAE;AACzC,QAAI5a,IAAI+Z,IAAR,EAAc;AACV,eAAO,IAAIY,UAAJ,CAAeoC,cAAc9c,CAAd,EAAiBD,CAAjB,CAAf,EAAoC4a,IAApC,CAAP;AACH;AACD,WAAO,IAAID,UAAJ,CAAegC,aAAa1c,CAAb,EAAgBka,aAAana,CAAb,CAAhB,CAAf,EAAiD4a,IAAjD,CAAP;AACH;AACDI,aAAaF,SAAb,CAAuB8C,gBAAvB,GAA0C,UAAU5d,CAAV,EAAa;AAC/C,QAAIib,UAAUjb,EAAE/G,KAAF,GAAU,KAAKA,KAAzB,CAAJ,EAAqC;AACjC,eAAO,IAAI+hB,YAAJ,CAAiBhb,EAAE/G,KAAF,GAAU,KAAKA,KAAhC,CAAP;AACH;AACD,WAAO0kB,sBAAsBtD,KAAKxT,GAAL,CAAS7G,EAAE/G,KAAX,CAAtB,EAAyCkhB,aAAaE,KAAKxT,GAAL,CAAS,KAAK5N,KAAd,CAAb,CAAzC,EAA6E,KAAK2hB,IAAL,KAAc5a,EAAE4a,IAA7F,CAAP;AACP,CALD;AAMAD,WAAWG,SAAX,CAAqB8C,gBAArB,GAAwC,UAAU5d,CAAV,EAAa;AAC7C,QAAIA,EAAE/G,KAAF,KAAY,CAAhB,EAAmB,OAAO6gB,QAAQ,CAAR,CAAP;AACnB,QAAI9Z,EAAE/G,KAAF,KAAY,CAAhB,EAAmB,OAAO,IAAP;AACnB,QAAI+G,EAAE/G,KAAF,KAAY,CAAC,CAAjB,EAAoB,OAAO,KAAK4H,MAAL,EAAP;AACpB,WAAO8c,sBAAsBtD,KAAKxT,GAAL,CAAS7G,EAAE/G,KAAX,CAAtB,EAAyC,KAAKA,KAA9C,EAAqD,KAAK2hB,IAAL,KAAc5a,EAAE4a,IAArE,CAAP;AACP,CALD;AAMAI,aAAaF,SAAb,CAAuBnU,QAAvB,GAAkC,UAAU4T,CAAV,EAAa;AAC3C,WAAOE,WAAWF,CAAX,EAAcqD,gBAAd,CAA+B,IAA/B,CAAP;AACH,CAFD;AAGA5C,aAAaF,SAAb,CAAuBviB,KAAvB,GAA+ByiB,aAAaF,SAAb,CAAuBnU,QAAtD;;AAEA,SAASkX,MAAT,CAAgB7d,CAAhB,EAAmB;AACf,QAAIic,IAAIjc,EAAExP,MAAV;AAAA,QACIsY,IAAIyS,YAAYU,IAAIA,CAAhB,CADR;AAAA,QAEIJ,OAAO9B,IAFX;AAAA,QAGI6C,OAHJ;AAAA,QAGahB,KAHb;AAAA,QAGoB7W,CAHpB;AAAA,QAGuB8X,GAHvB;AAAA,QAG4BiB,GAH5B;AAIA,SAAK/Y,IAAI,CAAT,EAAYA,IAAIkX,CAAhB,EAAmBlX,GAAnB,EAAwB;AACpB8X,cAAM7c,EAAE+E,CAAF,CAAN;AACA,aAAK,IAAIoE,IAAI,CAAb,EAAgBA,IAAI8S,CAApB,EAAuB9S,GAAvB,EAA4B;AACxB2U,kBAAM9d,EAAEmJ,CAAF,CAAN;AACAyT,sBAAUC,MAAMiB,GAAN,GAAYhV,EAAE/D,IAAIoE,CAAN,CAAtB;AACAyS,oBAAQvB,KAAKa,KAAL,CAAW0B,UAAUf,IAArB,CAAR;AACA/S,cAAE/D,IAAIoE,CAAN,IAAWyT,UAAUhB,QAAQC,IAA7B;AACA/S,cAAE/D,IAAIoE,CAAJ,GAAQ,CAAV,KAAgByS,KAAhB;AACH;AACJ;AACDP,SAAKvS,CAAL;AACA,WAAOA,CAAP;AACH;;AAED6R,WAAWG,SAAX,CAAqB+C,MAArB,GAA8B,YAAY;AACtC,WAAO,IAAIlD,UAAJ,CAAekD,OAAO,KAAK5kB,KAAZ,CAAf,EAAmC,KAAnC,CAAP;AACH,CAFD;;AAIA+hB,aAAaF,SAAb,CAAuB+C,MAAvB,GAAgC,YAAY;AACxC,QAAI5kB,QAAQ,KAAKA,KAAL,GAAa,KAAKA,KAA9B;AACA,QAAIgiB,UAAUhiB,KAAV,CAAJ,EAAsB,OAAO,IAAI+hB,YAAJ,CAAiB/hB,KAAjB,CAAP;AACtB,WAAO,IAAI0hB,UAAJ,CAAekD,OAAO1D,aAAaE,KAAKxT,GAAL,CAAS,KAAK5N,KAAd,CAAb,CAAP,CAAf,EAA2D,KAA3D,CAAP;AACH,CAJD;;AAMA,SAAS8kB,OAAT,CAAiB/d,CAAjB,EAAoBC,CAApB,EAAuB;AAAE;AACrB,QAAIkc,MAAMnc,EAAExP,MAAZ;AAAA,QACI4rB,MAAMnc,EAAEzP,MADZ;AAAA,QAEIqrB,OAAO9B,IAFX;AAAA,QAGI9hB,SAASsjB,YAAYtb,EAAEzP,MAAd,CAHb;AAAA,QAIIwtB,8BAA8B/d,EAAEmc,MAAM,CAAR,CAJlC;;AAKI;AACA6B,aAAS5D,KAAKoB,IAAL,CAAUI,QAAQ,IAAImC,2BAAZ,CAAV,CANb;AAAA,QAOIE,YAAYnB,cAAc/c,CAAd,EAAiBie,MAAjB,CAPhB;AAAA,QAQIE,UAAUpB,cAAc9c,CAAd,EAAiBge,MAAjB,CARd;AAAA,QASIG,aATJ;AAAA,QASmBC,KATnB;AAAA,QAS0BzC,KAT1B;AAAA,QASiCS,MATjC;AAAA,QASyCtX,CATzC;AAAA,QAS4CkX,CAT5C;AAAA,QAS+CjV,CAT/C;AAUA,QAAIkX,UAAU1tB,MAAV,IAAoB2rB,GAAxB,EAA6B+B,UAAU/nB,IAAV,CAAe,CAAf;AAC7BgoB,YAAQhoB,IAAR,CAAa,CAAb;AACA6nB,kCAA8BG,QAAQ/B,MAAM,CAAd,CAA9B;AACA,SAAKiC,QAAQlC,MAAMC,GAAnB,EAAwBiC,SAAS,CAAjC,EAAoCA,OAApC,EAA6C;AACzCD,wBAAgBvC,OAAO,CAAvB;AACA,YAAIqC,UAAUG,QAAQjC,GAAlB,MAA2B4B,2BAA/B,EAA4D;AAC1DI,4BAAgB/D,KAAKa,KAAL,CAAW,CAACgD,UAAUG,QAAQjC,GAAlB,IAAyBP,IAAzB,GAAgCqC,UAAUG,QAAQjC,GAAR,GAAc,CAAxB,CAAjC,IAA+D4B,2BAA1E,CAAhB;AACD;AACD;AACApC,gBAAQ,CAAR;AACAS,iBAAS,CAAT;AACAJ,YAAIkC,QAAQ3tB,MAAZ;AACA,aAAKuU,IAAI,CAAT,EAAYA,IAAIkX,CAAhB,EAAmBlX,GAAnB,EAAwB;AACpB6W,qBAASwC,gBAAgBD,QAAQpZ,CAAR,CAAzB;AACAiC,gBAAIqT,KAAKa,KAAL,CAAWU,QAAQC,IAAnB,CAAJ;AACAQ,sBAAU6B,UAAUG,QAAQtZ,CAAlB,KAAwB6W,QAAQ5U,IAAI6U,IAApC,CAAV;AACAD,oBAAQ5U,CAAR;AACA,gBAAIqV,SAAS,CAAb,EAAgB;AACZ6B,0BAAUG,QAAQtZ,CAAlB,IAAuBsX,SAASR,IAAhC;AACAQ,yBAAS,CAAC,CAAV;AACH,aAHD,MAGO;AACH6B,0BAAUG,QAAQtZ,CAAlB,IAAuBsX,MAAvB;AACAA,yBAAS,CAAT;AACH;AACJ;AACD,eAAOA,WAAW,CAAlB,EAAqB;AACjB+B,6BAAiB,CAAjB;AACAxC,oBAAQ,CAAR;AACA,iBAAK7W,IAAI,CAAT,EAAYA,IAAIkX,CAAhB,EAAmBlX,GAAnB,EAAwB;AACpB6W,yBAASsC,UAAUG,QAAQtZ,CAAlB,IAAuB8W,IAAvB,GAA8BsC,QAAQpZ,CAAR,CAAvC;AACA,oBAAI6W,QAAQ,CAAZ,EAAe;AACXsC,8BAAUG,QAAQtZ,CAAlB,IAAuB6W,QAAQC,IAA/B;AACAD,4BAAQ,CAAR;AACH,iBAHD,MAGO;AACHsC,8BAAUG,QAAQtZ,CAAlB,IAAuB6W,KAAvB;AACAA,4BAAQ,CAAR;AACH;AACJ;AACDS,sBAAUT,KAAV;AACH;AACD3jB,eAAOomB,KAAP,IAAgBD,aAAhB;AACH;AACD;AACAF,gBAAYI,YAAYJ,SAAZ,EAAuBD,MAAvB,EAA+B,CAA/B,CAAZ;AACA,WAAO,CAAC9C,aAAaljB,MAAb,CAAD,EAAuBkjB,aAAa+C,SAAb,CAAvB,CAAP;AACH;;AAED,SAASK,OAAT,CAAiBve,CAAjB,EAAoBC,CAApB,EAAuB;AAAE;AACrB;AACA,QAAIkc,MAAMnc,EAAExP,MAAZ;AAAA,QACI4rB,MAAMnc,EAAEzP,MADZ;AAAA,QAEIyH,SAAS,EAFb;AAAA,QAGIumB,OAAO,EAHX;AAAA,QAII3C,OAAO9B,IAJX;AAAA,QAKI0E,KALJ;AAAA,QAKWC,IALX;AAAA,QAKiBC,KALjB;AAAA,QAKwBC,KALxB;AAAA,QAK+BC,KAL/B;AAMA,WAAO1C,GAAP,EAAY;AACRqC,aAAKM,OAAL,CAAa9e,EAAE,EAAEmc,GAAJ,CAAb;AACAd,aAAKmD,IAAL;AACA,YAAIlD,WAAWkD,IAAX,EAAiBve,CAAjB,IAAsB,CAA1B,EAA6B;AACzBhI,mBAAO9B,IAAP,CAAY,CAAZ;AACA;AACH;AACDuoB,eAAOF,KAAKhuB,MAAZ;AACAmuB,gBAAQH,KAAKE,OAAO,CAAZ,IAAiB7C,IAAjB,GAAwB2C,KAAKE,OAAO,CAAZ,CAAhC;AACAE,gBAAQ3e,EAAEmc,MAAM,CAAR,IAAaP,IAAb,GAAoB5b,EAAEmc,MAAM,CAAR,CAA5B;AACA,YAAIsC,OAAOtC,GAAX,EAAgB;AACZuC,oBAAQ,CAACA,QAAQ,CAAT,IAAc9C,IAAtB;AACH;AACD4C,gBAAQpE,KAAKoB,IAAL,CAAUkD,QAAQC,KAAlB,CAAR;AACA,WAAG;AACCC,oBAAQ9B,cAAc9c,CAAd,EAAiBwe,KAAjB,CAAR;AACA,gBAAInD,WAAWuD,KAAX,EAAkBL,IAAlB,KAA2B,CAA/B,EAAkC;AAClCC;AACH,SAJD,QAISA,KAJT;AAKAxmB,eAAO9B,IAAP,CAAYsoB,KAAZ;AACAD,eAAO9X,SAAS8X,IAAT,EAAeK,KAAf,CAAP;AACH;AACD5mB,WAAO8mB,OAAP;AACA,WAAO,CAAC5D,aAAaljB,MAAb,CAAD,EAAuBkjB,aAAaqD,IAAb,CAAvB,CAAP;AACH;;AAED,SAASF,WAAT,CAAqBrlB,KAArB,EAA4BglB,MAA5B,EAAoC;AAChC,QAAIztB,SAASyI,MAAMzI,MAAnB;AAAA,QACIwuB,WAAWzD,YAAY/qB,MAAZ,CADf;AAAA,QAEIqrB,OAAO9B,IAFX;AAAA,QAGIhV,CAHJ;AAAA,QAGOiC,CAHP;AAAA,QAGUkX,SAHV;AAAA,QAGqBC,OAHrB;AAIAD,gBAAY,CAAZ;AACA,SAAKnZ,IAAIvU,SAAS,CAAlB,EAAqBuU,KAAK,CAA1B,EAA6B,EAAEA,CAA/B,EAAkC;AAC9BoZ,kBAAUD,YAAYrC,IAAZ,GAAmB5iB,MAAM8L,CAAN,CAA7B;AACAiC,YAAIwU,SAAS2C,UAAUF,MAAnB,CAAJ;AACAC,oBAAYC,UAAUnX,IAAIiX,MAA1B;AACAe,iBAASja,CAAT,IAAciC,IAAI,CAAlB;AACH;AACD,WAAO,CAACgY,QAAD,EAAWd,YAAY,CAAvB,CAAP;AACH;;AAED,SAASe,SAAT,CAAmB1I,IAAnB,EAAyBgE,CAAzB,EAA4B;AACxB,QAAIthB,KAAJ;AAAA,QAAWnK,IAAI2rB,WAAWF,CAAX,CAAf;AACA,QAAIva,IAAIuW,KAAKtd,KAAb;AAAA,QAAoBgH,IAAInR,EAAEmK,KAA1B;AACA,QAAI+lB,QAAJ;AACA,QAAI/e,MAAM,CAAV,EAAa,MAAM,IAAInN,KAAJ,CAAU,uBAAV,CAAN;AACb,QAAIyjB,KAAKsE,OAAT,EAAkB;AACd,YAAI/rB,EAAE+rB,OAAN,EAAe;AACX,mBAAO,CAAC,IAAIG,YAAJ,CAAiBQ,SAASxb,IAAIC,CAAb,CAAjB,CAAD,EAAoC,IAAI+a,YAAJ,CAAiBhb,IAAIC,CAArB,CAApC,CAAP;AACH;AACD,eAAO,CAAC6Z,QAAQ,CAAR,CAAD,EAAavD,IAAb,CAAP;AACH;AACD,QAAIznB,EAAE+rB,OAAN,EAAe;AACX,YAAI5a,MAAM,CAAV,EAAa,OAAO,CAACsW,IAAD,EAAOuD,QAAQ,CAAR,CAAP,CAAP;AACb,YAAI7Z,KAAK,CAAC,CAAV,EAAa,OAAO,CAACsW,KAAK1V,MAAL,EAAD,EAAgBiZ,QAAQ,CAAR,CAAhB,CAAP;AACb,YAAIjT,MAAMwT,KAAKxT,GAAL,CAAS5G,CAAT,CAAV;AACA,YAAI4G,MAAMkT,IAAV,EAAgB;AACZ9gB,oBAAQqlB,YAAYte,CAAZ,EAAe6G,GAAf,CAAR;AACAmY,uBAAW7D,aAAaliB,MAAM,CAAN,CAAb,CAAX;AACA,gBAAIilB,YAAYjlB,MAAM,CAAN,CAAhB;AACA,gBAAIsd,KAAKqE,IAAT,EAAesD,YAAY,CAACA,SAAb;AACf,gBAAI,OAAOc,QAAP,KAAoB,QAAxB,EAAkC;AAC9B,oBAAIzI,KAAKqE,IAAL,KAAc9rB,EAAE8rB,IAApB,EAA0BoE,WAAW,CAACA,QAAZ;AAC1B,uBAAO,CAAC,IAAIhE,YAAJ,CAAiBgE,QAAjB,CAAD,EAA6B,IAAIhE,YAAJ,CAAiBkD,SAAjB,CAA7B,CAAP;AACH;AACD,mBAAO,CAAC,IAAIvD,UAAJ,CAAeqE,QAAf,EAAyBzI,KAAKqE,IAAL,KAAc9rB,EAAE8rB,IAAzC,CAAD,EAAiD,IAAII,YAAJ,CAAiBkD,SAAjB,CAAjD,CAAP;AACH;AACDje,YAAIka,aAAatT,GAAb,CAAJ;AACH;AACD,QAAIqY,aAAa5D,WAAWtb,CAAX,EAAcC,CAAd,CAAjB;AACA,QAAIif,eAAe,CAAC,CAApB,EAAuB,OAAO,CAACpF,QAAQ,CAAR,CAAD,EAAavD,IAAb,CAAP;AACvB,QAAI2I,eAAe,CAAnB,EAAsB,OAAO,CAACpF,QAAQvD,KAAKqE,IAAL,KAAc9rB,EAAE8rB,IAAhB,GAAuB,CAAvB,GAA2B,CAAC,CAApC,CAAD,EAAyCd,QAAQ,CAAR,CAAzC,CAAP;;AAEtB;AACA,QAAI9Z,EAAExP,MAAF,GAAWyP,EAAEzP,MAAb,IAAuB,GAA3B,EACIyI,QAAQ8kB,QAAQ/d,CAAR,EAAWC,CAAX,CAAR,CADJ,KAEKhH,QAAQslB,QAAQve,CAAR,EAAWC,CAAX,CAAR;;AAEL+e,eAAW/lB,MAAM,CAAN,CAAX;AACA,QAAIkmB,QAAQ5I,KAAKqE,IAAL,KAAc9rB,EAAE8rB,IAA5B;AAAA,QACIrY,MAAMtJ,MAAM,CAAN,CADV;AAAA,QAEImmB,QAAQ7I,KAAKqE,IAFjB;AAGA,QAAI,OAAOoE,QAAP,KAAoB,QAAxB,EAAkC;AAC9B,YAAIG,KAAJ,EAAWH,WAAW,CAACA,QAAZ;AACXA,mBAAW,IAAIhE,YAAJ,CAAiBgE,QAAjB,CAAX;AACH,KAHD,MAGOA,WAAW,IAAIrE,UAAJ,CAAeqE,QAAf,EAAyBG,KAAzB,CAAX;AACP,QAAI,OAAO5c,GAAP,KAAe,QAAnB,EAA6B;AACzB,YAAI6c,KAAJ,EAAW7c,MAAM,CAACA,GAAP;AACXA,cAAM,IAAIyY,YAAJ,CAAiBzY,GAAjB,CAAN;AACH,KAHD,MAGOA,MAAM,IAAIoY,UAAJ,CAAepY,GAAf,EAAoB6c,KAApB,CAAN;AACP,WAAO,CAACJ,QAAD,EAAWzc,GAAX,CAAP;AACH;;AAEDoY,WAAWG,SAAX,CAAqBuE,MAArB,GAA8B,UAAU9E,CAAV,EAAa;AACvC,QAAItiB,SAASgnB,UAAU,IAAV,EAAgB1E,CAAhB,CAAb;AACA,WAAO;AACHyE,kBAAU/mB,OAAO,CAAP,CADP;AAEHimB,mBAAWjmB,OAAO,CAAP;AAFR,KAAP;AAIH,CAND;AAOA+iB,aAAaF,SAAb,CAAuBuE,MAAvB,GAAgC1E,WAAWG,SAAX,CAAqBuE,MAArD;;AAEA1E,WAAWG,SAAX,CAAqBhU,MAArB,GAA8B,UAAUyT,CAAV,EAAa;AACvC,WAAO0E,UAAU,IAAV,EAAgB1E,CAAhB,EAAmB,CAAnB,CAAP;AACH,CAFD;AAGAS,aAAaF,SAAb,CAAuBwE,IAAvB,GAA8BtE,aAAaF,SAAb,CAAuBhU,MAAvB,GAAgC6T,WAAWG,SAAX,CAAqBwE,IAArB,GAA4B3E,WAAWG,SAAX,CAAqBhU,MAA/G;;AAEA6T,WAAWG,SAAX,CAAqBvY,GAArB,GAA2B,UAAUgY,CAAV,EAAa;AACpC,WAAO0E,UAAU,IAAV,EAAgB1E,CAAhB,EAAmB,CAAnB,CAAP;AACH,CAFD;AAGAS,aAAaF,SAAb,CAAuBoD,SAAvB,GAAmClD,aAAaF,SAAb,CAAuBvY,GAAvB,GAA6BoY,WAAWG,SAAX,CAAqBoD,SAArB,GAAiCvD,WAAWG,SAAX,CAAqBvY,GAAtH;;AAEAoY,WAAWG,SAAX,CAAqByE,GAArB,GAA2B,UAAUhF,CAAV,EAAa;AACpC,QAAIzrB,IAAI2rB,WAAWF,CAAX,CAAR;AAAA,QACIva,IAAI,KAAK/G,KADb;AAAA,QAEIgH,IAAInR,EAAEmK,KAFV;AAAA,QAGIA,KAHJ;AAAA,QAGW+D,CAHX;AAAA,QAGcC,CAHd;AAIA,QAAIgD,MAAM,CAAV,EAAa,OAAO6Z,QAAQ,CAAR,CAAP;AACb,QAAI9Z,MAAM,CAAV,EAAa,OAAO8Z,QAAQ,CAAR,CAAP;AACb,QAAI9Z,MAAM,CAAV,EAAa,OAAO8Z,QAAQ,CAAR,CAAP;AACb,QAAI9Z,MAAM,CAAC,CAAX,EAAc,OAAOlR,EAAE0wB,MAAF,KAAa1F,QAAQ,CAAR,CAAb,GAA0BA,QAAQ,CAAC,CAAT,CAAjC;AACd,QAAIhrB,EAAE8rB,IAAN,EAAY;AACR,eAAOd,QAAQ,CAAR,CAAP;AACH;AACD,QAAI,CAAChrB,EAAE+rB,OAAP,EAAgB,MAAM,IAAI/nB,KAAJ,CAAU,kBAAkBhE,EAAEG,QAAF,EAAlB,GAAiC,gBAA3C,CAAN;AAChB,QAAI,KAAK4rB,OAAT,EAAkB;AACd,YAAII,UAAUhiB,QAAQohB,KAAKkF,GAAL,CAASvf,CAAT,EAAYC,CAAZ,CAAlB,CAAJ,EACI,OAAO,IAAI+a,YAAJ,CAAiBQ,SAASviB,KAAT,CAAjB,CAAP;AACP;AACD+D,QAAI,IAAJ;AACAC,QAAI6c,QAAQ,CAAR,CAAJ;AACA,WAAO,IAAP,EAAa;AACT,YAAI7Z,IAAI,MAAM,CAAd,EAAiB;AACbhD,gBAAIA,EAAE1E,KAAF,CAAQyE,CAAR,CAAJ;AACA,cAAEiD,CAAF;AACH;AACD,YAAIA,MAAM,CAAV,EAAa;AACbA,aAAK,CAAL;AACAjD,YAAIA,EAAE6gB,MAAF,EAAJ;AACH;AACD,WAAO5gB,CAAP;AACH,CA7BD;AA8BA+d,aAAaF,SAAb,CAAuByE,GAAvB,GAA6B5E,WAAWG,SAAX,CAAqByE,GAAlD;;AAEA5E,WAAWG,SAAX,CAAqB2E,MAArB,GAA8B,UAAUC,GAAV,EAAend,GAAf,EAAoB;AAC9Cmd,UAAMjF,WAAWiF,GAAX,CAAN;AACAnd,UAAMkY,WAAWlY,GAAX,CAAN;AACA,QAAIA,IAAIod,MAAJ,EAAJ,EAAkB,MAAM,IAAI7sB,KAAJ,CAAU,mCAAV,CAAN;AAClB,QAAIgW,IAAIgR,QAAQ,CAAR,CAAR;AAAA,QACI+B,OAAO,KAAKtZ,GAAL,CAASA,GAAT,CADX;AAEA,WAAOmd,IAAIE,UAAJ,EAAP,EAAyB;AACrB,YAAI/D,KAAK8D,MAAL,EAAJ,EAAmB,OAAO7F,QAAQ,CAAR,CAAP;AACnB,YAAI4F,IAAIG,KAAJ,EAAJ,EAAiB/W,IAAIA,EAAEnC,QAAF,CAAWkV,IAAX,EAAiBtZ,GAAjB,CAAqBA,GAArB,CAAJ;AACjBmd,cAAMA,IAAI5Y,MAAJ,CAAW,CAAX,CAAN;AACA+U,eAAOA,KAAKgC,MAAL,GAActb,GAAd,CAAkBA,GAAlB,CAAP;AACH;AACD,WAAOuG,CAAP;AACH,CAbD;AAcAkS,aAAaF,SAAb,CAAuB2E,MAAvB,GAAgC9E,WAAWG,SAAX,CAAqB2E,MAArD;;AAEA,SAASnE,UAAT,CAAoBtb,CAApB,EAAuBC,CAAvB,EAA0B;AACtB,QAAID,EAAExP,MAAF,KAAayP,EAAEzP,MAAnB,EAA2B;AACvB,eAAOwP,EAAExP,MAAF,GAAWyP,EAAEzP,MAAb,GAAsB,CAAtB,GAA0B,CAAC,CAAlC;AACH;AACD,SAAK,IAAIuU,IAAI/E,EAAExP,MAAF,GAAW,CAAxB,EAA2BuU,KAAK,CAAhC,EAAmCA,GAAnC,EAAwC;AACpC,YAAI/E,EAAE+E,CAAF,MAAS9E,EAAE8E,CAAF,CAAb,EAAmB,OAAO/E,EAAE+E,CAAF,IAAO9E,EAAE8E,CAAF,CAAP,GAAc,CAAd,GAAkB,CAAC,CAA1B;AACtB;AACD,WAAO,CAAP;AACH;;AAED4V,WAAWG,SAAX,CAAqBQ,UAArB,GAAkC,UAAUf,CAAV,EAAa;AAC3C,QAAIzrB,IAAI2rB,WAAWF,CAAX,CAAR;AAAA,QACIva,IAAI,KAAK/G,KADb;AAAA,QAEIgH,IAAInR,EAAEmK,KAFV;AAGA,QAAInK,EAAE+rB,OAAN,EAAe,OAAO,CAAP;AACf,WAAOS,WAAWtb,CAAX,EAAcC,CAAd,CAAP;AACH,CAND;AAOA+a,aAAaF,SAAb,CAAuBQ,UAAvB,GAAoC,UAAUf,CAAV,EAAa;AAC7C,QAAIzrB,IAAI2rB,WAAWF,CAAX,CAAR;AAAA,QACIva,IAAIqa,KAAKxT,GAAL,CAAS,KAAK5N,KAAd,CADR;AAAA,QAEIgH,IAAInR,EAAEmK,KAFV;AAGA,QAAInK,EAAE+rB,OAAN,EAAe;AACX5a,YAAIoa,KAAKxT,GAAL,CAAS5G,CAAT,CAAJ;AACA,eAAOD,MAAMC,CAAN,GAAU,CAAV,GAAcD,IAAIC,CAAJ,GAAQ,CAAR,GAAY,CAAC,CAAlC;AACH;AACD,WAAO,CAAC,CAAR;AACH,CATD;;AAWA0a,WAAWG,SAAX,CAAqBgF,OAArB,GAA+B,UAAUvF,CAAV,EAAa;AACxC;AACA;AACA,QAAIA,MAAMwF,QAAV,EAAoB;AAChB,eAAO,CAAC,CAAR;AACH;AACD,QAAIxF,MAAM,CAACwF,QAAX,EAAqB;AACjB,eAAO,CAAP;AACH;;AAED,QAAIjxB,IAAI2rB,WAAWF,CAAX,CAAR;AAAA,QACIva,IAAI,KAAK/G,KADb;AAAA,QAEIgH,IAAInR,EAAEmK,KAFV;AAGA,QAAI,KAAK2hB,IAAL,KAAc9rB,EAAE8rB,IAApB,EAA0B;AACtB,eAAO9rB,EAAE8rB,IAAF,GAAS,CAAT,GAAa,CAAC,CAArB;AACH;AACD,QAAI9rB,EAAE+rB,OAAN,EAAe;AACX,eAAO,KAAKD,IAAL,GAAY,CAAC,CAAb,GAAiB,CAAxB;AACH;AACD,WAAOU,WAAWtb,CAAX,EAAcC,CAAd,KAAoB,KAAK2a,IAAL,GAAY,CAAC,CAAb,GAAiB,CAArC,CAAP;AACH,CApBD;AAqBAD,WAAWG,SAAX,CAAqBkF,SAArB,GAAiCrF,WAAWG,SAAX,CAAqBgF,OAAtD;;AAEA9E,aAAaF,SAAb,CAAuBgF,OAAvB,GAAiC,UAAUvF,CAAV,EAAa;AAC1C,QAAIA,MAAMwF,QAAV,EAAoB;AAChB,eAAO,CAAC,CAAR;AACH;AACD,QAAIxF,MAAM,CAACwF,QAAX,EAAqB;AACjB,eAAO,CAAP;AACH;;AAED,QAAIjxB,IAAI2rB,WAAWF,CAAX,CAAR;AAAA,QACIva,IAAI,KAAK/G,KADb;AAAA,QAEIgH,IAAInR,EAAEmK,KAFV;AAGA,QAAInK,EAAE+rB,OAAN,EAAe;AACX,eAAO7a,KAAKC,CAAL,GAAS,CAAT,GAAaD,IAAIC,CAAJ,GAAQ,CAAR,GAAY,CAAC,CAAjC;AACH;AACD,QAAID,IAAI,CAAJ,KAAUlR,EAAE8rB,IAAhB,EAAsB;AAClB,eAAO5a,IAAI,CAAJ,GAAQ,CAAC,CAAT,GAAa,CAApB;AACH;AACD,WAAOA,IAAI,CAAJ,GAAQ,CAAR,GAAY,CAAC,CAApB;AACH,CAlBD;AAmBAgb,aAAaF,SAAb,CAAuBkF,SAAvB,GAAmChF,aAAaF,SAAb,CAAuBgF,OAA1D;;AAEAnF,WAAWG,SAAX,CAAqBmF,MAArB,GAA8B,UAAU1F,CAAV,EAAa;AACvC,WAAO,KAAKuF,OAAL,CAAavF,CAAb,MAAoB,CAA3B;AACH,CAFD;AAGAS,aAAaF,SAAb,CAAuBzY,EAAvB,GAA4B2Y,aAAaF,SAAb,CAAuBmF,MAAvB,GAAgCtF,WAAWG,SAAX,CAAqBzY,EAArB,GAA0BsY,WAAWG,SAAX,CAAqBmF,MAA3G;;AAEAtF,WAAWG,SAAX,CAAqBoF,SAArB,GAAiC,UAAU3F,CAAV,EAAa;AAC1C,WAAO,KAAKuF,OAAL,CAAavF,CAAb,MAAoB,CAA3B;AACH,CAFD;AAGAS,aAAaF,SAAb,CAAuBqF,GAAvB,GAA6BnF,aAAaF,SAAb,CAAuBoF,SAAvB,GAAmCvF,WAAWG,SAAX,CAAqBqF,GAArB,GAA2BxF,WAAWG,SAAX,CAAqBoF,SAAhH;;AAEAvF,WAAWG,SAAX,CAAqBsF,OAArB,GAA+B,UAAU7F,CAAV,EAAa;AACxC,WAAO,KAAKuF,OAAL,CAAavF,CAAb,IAAkB,CAAzB;AACH,CAFD;AAGAS,aAAaF,SAAb,CAAuBra,EAAvB,GAA4Bua,aAAaF,SAAb,CAAuBsF,OAAvB,GAAiCzF,WAAWG,SAAX,CAAqBra,EAArB,GAA0Bka,WAAWG,SAAX,CAAqBsF,OAA5G;;AAEAzF,WAAWG,SAAX,CAAqBuF,MAArB,GAA8B,UAAU9F,CAAV,EAAa;AACvC,WAAO,KAAKuF,OAAL,CAAavF,CAAb,IAAkB,CAAzB;AACH,CAFD;AAGAS,aAAaF,SAAb,CAAuBva,EAAvB,GAA4Bya,aAAaF,SAAb,CAAuBuF,MAAvB,GAAgC1F,WAAWG,SAAX,CAAqBva,EAArB,GAA0Boa,WAAWG,SAAX,CAAqBuF,MAA3G;;AAEA1F,WAAWG,SAAX,CAAqBwF,eAArB,GAAuC,UAAU/F,CAAV,EAAa;AAChD,WAAO,KAAKuF,OAAL,CAAavF,CAAb,KAAmB,CAA1B;AACH,CAFD;AAGAS,aAAaF,SAAb,CAAuB5T,GAAvB,GAA6B8T,aAAaF,SAAb,CAAuBwF,eAAvB,GAAyC3F,WAAWG,SAAX,CAAqB5T,GAArB,GAA2ByT,WAAWG,SAAX,CAAqBwF,eAAtH;;AAEA3F,WAAWG,SAAX,CAAqByF,cAArB,GAAsC,UAAUhG,CAAV,EAAa;AAC/C,WAAO,KAAKuF,OAAL,CAAavF,CAAb,KAAmB,CAA1B;AACH,CAFD;AAGAS,aAAaF,SAAb,CAAuB7T,GAAvB,GAA6B+T,aAAaF,SAAb,CAAuByF,cAAvB,GAAwC5F,WAAWG,SAAX,CAAqB7T,GAArB,GAA2B0T,WAAWG,SAAX,CAAqByF,cAArH;;AAEA5F,WAAWG,SAAX,CAAqB0E,MAArB,GAA8B,YAAY;AACtC,WAAO,CAAC,KAAKvmB,KAAL,CAAW,CAAX,IAAgB,CAAjB,MAAwB,CAA/B;AACH,CAFD;AAGA+hB,aAAaF,SAAb,CAAuB0E,MAAvB,GAAgC,YAAY;AACxC,WAAO,CAAC,KAAKvmB,KAAL,GAAa,CAAd,MAAqB,CAA5B;AACH,CAFD;;AAIA0hB,WAAWG,SAAX,CAAqB+E,KAArB,GAA6B,YAAY;AACrC,WAAO,CAAC,KAAK5mB,KAAL,CAAW,CAAX,IAAgB,CAAjB,MAAwB,CAA/B;AACH,CAFD;AAGA+hB,aAAaF,SAAb,CAAuB+E,KAAvB,GAA+B,YAAY;AACvC,WAAO,CAAC,KAAK5mB,KAAL,GAAa,CAAd,MAAqB,CAA5B;AACH,CAFD;;AAIA0hB,WAAWG,SAAX,CAAqB8E,UAArB,GAAkC,YAAY;AAC1C,WAAO,CAAC,KAAKhF,IAAb;AACH,CAFD;AAGAI,aAAaF,SAAb,CAAuB8E,UAAvB,GAAoC,YAAY;AAC5C,WAAO,KAAK3mB,KAAL,GAAa,CAApB;AACH,CAFD;;AAIA0hB,WAAWG,SAAX,CAAqB0F,UAArB,GAAkC,YAAY;AAC1C,WAAO,KAAK5F,IAAZ;AACH,CAFD;AAGAI,aAAaF,SAAb,CAAuB0F,UAAvB,GAAoC,YAAY;AAC5C,WAAO,KAAKvnB,KAAL,GAAa,CAApB;AACH,CAFD;;AAIA0hB,WAAWG,SAAX,CAAqB2F,MAArB,GAA8B,YAAY;AACtC,WAAO,KAAP;AACH,CAFD;AAGAzF,aAAaF,SAAb,CAAuB2F,MAAvB,GAAgC,YAAY;AACxC,WAAOpG,KAAKxT,GAAL,CAAS,KAAK5N,KAAd,MAAyB,CAAhC;AACH,CAFD;;AAIA0hB,WAAWG,SAAX,CAAqB6E,MAArB,GAA8B,YAAY;AACtC,WAAO,KAAP;AACH,CAFD;AAGA3E,aAAaF,SAAb,CAAuB6E,MAAvB,GAAgC,YAAY;AACxC,WAAO,KAAK1mB,KAAL,KAAe,CAAtB;AACH,CAFD;AAGA0hB,WAAWG,SAAX,CAAqB4F,aAArB,GAAqC,UAAUnG,CAAV,EAAa;AAC9C,QAAIzrB,IAAI2rB,WAAWF,CAAX,CAAR;AACA,QAAIthB,QAAQnK,EAAEmK,KAAd;AACA,QAAIA,UAAU,CAAd,EAAiB,OAAO,KAAP;AACjB,QAAIA,UAAU,CAAd,EAAiB,OAAO,IAAP;AACjB,QAAIA,UAAU,CAAd,EAAiB,OAAO,KAAKumB,MAAL,EAAP;AACjB,WAAO,KAAKjd,GAAL,CAASzT,CAAT,EAAYmxB,MAAZ,CAAmBnG,QAAQ,CAAR,CAAnB,CAAP;AACH,CAPD;AAQAkB,aAAaF,SAAb,CAAuB4F,aAAvB,GAAuC/F,WAAWG,SAAX,CAAqB4F,aAA5D;;AAEA,SAASC,YAAT,CAAsBpG,CAAtB,EAAyB;AACrB,QAAIzrB,IAAIyrB,EAAE1T,GAAF,EAAR;AACA,QAAI/X,EAAE2xB,MAAF,EAAJ,EAAgB,OAAO,KAAP;AAChB,QAAI3xB,EAAEmxB,MAAF,CAAS,CAAT,KAAenxB,EAAEmxB,MAAF,CAAS,CAAT,CAAf,IAA8BnxB,EAAEmxB,MAAF,CAAS,CAAT,CAAlC,EAA+C,OAAO,IAAP;AAC/C,QAAInxB,EAAE0wB,MAAF,MAAc1wB,EAAE4xB,aAAF,CAAgB,CAAhB,CAAd,IAAoC5xB,EAAE4xB,aAAF,CAAgB,CAAhB,CAAxC,EAA4D,OAAO,KAAP;AAC5D,QAAI5xB,EAAEuxB,MAAF,CAAS,EAAT,CAAJ,EAAkB,OAAO,IAAP;AAClB;AACH;;AAED1F,WAAWG,SAAX,CAAqB8F,OAArB,GAA+B,YAAY;AACvC,QAAIA,UAAUD,aAAa,IAAb,CAAd;AACA,QAAIC,YAAY7J,SAAhB,EAA2B,OAAO6J,OAAP;AAC3B,QAAI9xB,IAAI,KAAK+X,GAAL,EAAR;AAAA,QACIga,QAAQ/xB,EAAEgyB,IAAF,EADZ;AAEA,QAAI9gB,IAAI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,CAAR;AAAA,QACIC,IAAI4gB,KADR;AAAA,QAEI1D,CAFJ;AAAA,QAEOtZ,CAFP;AAAA,QAEUkB,CAFV;AAAA,QAEa/H,CAFb;AAGA,WAAOiD,EAAEuf,MAAF,EAAP;AAAmBvf,YAAIA,EAAE6G,MAAF,CAAS,CAAT,CAAJ;AAAnB,KACA,KAAK/B,IAAI,CAAT,EAAYA,IAAI/E,EAAExP,MAAlB,EAA0BuU,GAA1B,EAA+B;AAC3B/H,YAAI+jB,OAAO/gB,EAAE+E,CAAF,CAAP,EAAa0a,MAAb,CAAoBxf,CAApB,EAAuBnR,CAAvB,CAAJ;AACA,YAAIkO,EAAEijB,MAAF,CAASnG,QAAQ,CAAR,CAAT,KAAwB9c,EAAEijB,MAAF,CAASY,KAAT,CAA5B,EAA6C;AAC7C,aAAKhd,IAAI,IAAJ,EAAUsZ,IAAIld,CAAnB,EAAsB4D,KAAKsZ,EAAEkD,MAAF,CAASQ,KAAT,CAA3B,EAA6C1D,IAAIA,EAAExW,QAAF,CAAW,CAAX,CAAjD,EAAgE;AAC5D3J,gBAAIA,EAAE6gB,MAAF,GAAWtb,GAAX,CAAezT,CAAf,CAAJ;AACA,gBAAIkO,EAAEijB,MAAF,CAASY,KAAT,CAAJ,EAAqBhd,IAAI,KAAJ;AACxB;AACD,YAAIA,CAAJ,EAAO,OAAO,KAAP;AACV;AACD,WAAO,IAAP;AACH,CAnBD;AAoBAmX,aAAaF,SAAb,CAAuB8F,OAAvB,GAAiCjG,WAAWG,SAAX,CAAqB8F,OAAtD;;AAEAjG,WAAWG,SAAX,CAAqBkG,eAArB,GAAuC,UAAUC,UAAV,EAAsB;AACzD,QAAIL,UAAUD,aAAa,IAAb,CAAd;AACA,QAAIC,YAAY7J,SAAhB,EAA2B,OAAO6J,OAAP;AAC3B,QAAI9xB,IAAI,KAAK+X,GAAL,EAAR;AACA,QAAIhD,IAAIod,eAAelK,SAAf,GAA2B,CAA3B,GAA+BkK,UAAvC;AACA;AACA,SAAK,IAAIlc,IAAI,CAAb,EAAgBA,IAAIlB,CAApB,EAAuBkB,GAAvB,EAA4B;AACxB,YAAI/E,IAAI+gB,OAAOG,WAAP,CAAmB,CAAnB,EAAsBpyB,EAAE2tB,KAAF,CAAQ,CAAR,CAAtB,CAAR;AACA,YAAI,CAACzc,EAAEyf,MAAF,CAAS3wB,EAAEgyB,IAAF,EAAT,EAAmBhyB,CAAnB,EAAsB2xB,MAAtB,EAAL,EAAqC,OAAO,KAAP,CAFb,CAE2B;AACtD;AACD,WAAO,IAAP,CAVyD,CAU5C;AAChB,CAXD;AAYAzF,aAAaF,SAAb,CAAuBkG,eAAvB,GAAyCrG,WAAWG,SAAX,CAAqBkG,eAA9D;;AAEArG,WAAWG,SAAX,CAAqBqG,MAArB,GAA8B,UAAUryB,CAAV,EAAa;AACvC,QAAI+U,IAAIkd,OAAOK,IAAf;AAAA,QAAqBC,OAAON,OAAOO,GAAnC;AAAA,QAAwCxY,IAAI2R,WAAW3rB,CAAX,CAA5C;AAAA,QAA2DyyB,OAAO,KAAK1a,GAAL,EAAlE;AAAA,QAA8EG,CAA9E;AAAA,QAAiFwa,KAAjF;AAAA,QAAwFC,KAAxF;AACA,WAAO,CAACF,KAAKtB,MAAL,CAAYc,OAAOK,IAAnB,CAAR,EAAkC;AAC9Bpa,YAAI8B,EAAEhC,MAAF,CAASya,IAAT,CAAJ;AACAC,gBAAQ3d,CAAR;AACA4d,gBAAQ3Y,CAAR;AACAjF,YAAIwd,IAAJ;AACAvY,YAAIyY,IAAJ;AACAF,eAAOG,MAAM9a,QAAN,CAAeM,EAAEL,QAAF,CAAW0a,IAAX,CAAf,CAAP;AACAE,eAAOE,MAAM/a,QAAN,CAAeM,EAAEL,QAAF,CAAW4a,IAAX,CAAf,CAAP;AACH;AACD,QAAI,CAACzY,EAAEmX,MAAF,CAAS,CAAT,CAAL,EAAkB,MAAM,IAAIntB,KAAJ,CAAU,KAAK7D,QAAL,KAAkB,OAAlB,GAA4BH,EAAEG,QAAF,EAA5B,GAA2C,mBAArD,CAAN;AAClB,QAAI4U,EAAEic,OAAF,CAAU,CAAV,MAAiB,CAAC,CAAtB,EAAyB;AACrBjc,YAAIA,EAAEjG,GAAF,CAAM9O,CAAN,CAAJ;AACH;AACD,QAAI,KAAK0xB,UAAL,EAAJ,EAAuB;AACnB,eAAO3c,EAAEhD,MAAF,EAAP;AACH;AACD,WAAOgD,CAAP;AACH,CAnBD;;AAqBAmX,aAAaF,SAAb,CAAuBqG,MAAvB,GAAgCxG,WAAWG,SAAX,CAAqBqG,MAArD;;AAEAxG,WAAWG,SAAX,CAAqB4G,IAArB,GAA4B,YAAY;AACpC,QAAIzoB,QAAQ,KAAKA,KAAjB;AACA,QAAI,KAAK2hB,IAAT,EAAe;AACX,eAAO4B,cAAcvjB,KAAd,EAAqB,CAArB,EAAwB,KAAK2hB,IAA7B,CAAP;AACH;AACD,WAAO,IAAID,UAAJ,CAAeqB,SAAS/iB,KAAT,EAAgB,CAAhB,CAAf,EAAmC,KAAK2hB,IAAxC,CAAP;AACH,CAND;AAOAI,aAAaF,SAAb,CAAuB4G,IAAvB,GAA8B,YAAY;AACtC,QAAIzoB,QAAQ,KAAKA,KAAjB;AACA,QAAIA,QAAQ,CAAR,GAAYghB,OAAhB,EAAyB,OAAO,IAAIe,YAAJ,CAAiB/hB,QAAQ,CAAzB,CAAP;AACzB,WAAO,IAAI0hB,UAAJ,CAAeT,WAAf,EAA4B,KAA5B,CAAP;AACH,CAJD;;AAMAS,WAAWG,SAAX,CAAqBgG,IAArB,GAA4B,YAAY;AACpC,QAAI7nB,QAAQ,KAAKA,KAAjB;AACA,QAAI,KAAK2hB,IAAT,EAAe;AACX,eAAO,IAAID,UAAJ,CAAeqB,SAAS/iB,KAAT,EAAgB,CAAhB,CAAf,EAAmC,IAAnC,CAAP;AACH;AACD,WAAOujB,cAAcvjB,KAAd,EAAqB,CAArB,EAAwB,KAAK2hB,IAA7B,CAAP;AACH,CAND;AAOAI,aAAaF,SAAb,CAAuBgG,IAAvB,GAA8B,YAAY;AACtC,QAAI7nB,QAAQ,KAAKA,KAAjB;AACA,QAAIA,QAAQ,CAAR,GAAY,CAACghB,OAAjB,EAA0B,OAAO,IAAIe,YAAJ,CAAiB/hB,QAAQ,CAAzB,CAAP;AAC1B,WAAO,IAAI0hB,UAAJ,CAAeT,WAAf,EAA4B,IAA5B,CAAP;AACH,CAJD;;AAMA,IAAIyH,cAAc,CAAC,CAAD,CAAlB;AACA,OAAOA,YAAYA,YAAYnxB,MAAZ,GAAqB,CAAjC,KAAuCupB,IAA9C;AAAoD4H,gBAAYxrB,IAAZ,CAAiB,IAAIwrB,YAAYA,YAAYnxB,MAAZ,GAAqB,CAAjC,CAArB;AAApD,CACA,IAAIoxB,gBAAgBD,YAAYnxB,MAAhC;AAAA,IAAwCqxB,gBAAgBF,YAAYC,gBAAgB,CAA5B,CAAxD;;AAEA,SAASE,aAAT,CAAuBhzB,CAAvB,EAA0B;AACtB,WAAQ,CAAC,OAAOA,CAAP,KAAa,QAAb,IAAyB,OAAOA,CAAP,KAAa,QAAvC,KAAoD,CAACurB,KAAKxT,GAAL,CAAS/X,CAAT,CAAD,IAAgBirB,IAArE,IACFjrB,aAAa6rB,UAAb,IAA2B7rB,EAAEmK,KAAF,CAAQzI,MAAR,IAAkB,CADlD;AAEH;;AAEDmqB,WAAWG,SAAX,CAAqBkC,SAArB,GAAiC,UAAUluB,CAAV,EAAa;AAC1C,QAAI,CAACgzB,cAAchzB,CAAd,CAAL,EAAuB;AACnB,cAAM,IAAIgE,KAAJ,CAAUivB,OAAOjzB,CAAP,IAAY,6BAAtB,CAAN;AACH;AACDA,QAAI,CAACA,CAAL;AACA,QAAIA,IAAI,CAAR,EAAW,OAAO,KAAKkzB,UAAL,CAAgB,CAAClzB,CAAjB,CAAP;AACX,QAAImJ,SAAS,IAAb;AACA,WAAOnJ,KAAK8yB,aAAZ,EAA2B;AACvB3pB,iBAASA,OAAO0O,QAAP,CAAgBkb,aAAhB,CAAT;AACA/yB,aAAK8yB,gBAAgB,CAArB;AACH;AACD,WAAO3pB,OAAO0O,QAAP,CAAgBgb,YAAY7yB,CAAZ,CAAhB,CAAP;AACH,CAZD;AAaAksB,aAAaF,SAAb,CAAuBkC,SAAvB,GAAmCrC,WAAWG,SAAX,CAAqBkC,SAAxD;;AAEArC,WAAWG,SAAX,CAAqBkH,UAArB,GAAkC,UAAUlzB,CAAV,EAAa;AAC3C,QAAImzB,MAAJ;AACA,QAAI,CAACH,cAAchzB,CAAd,CAAL,EAAuB;AACnB,cAAM,IAAIgE,KAAJ,CAAUivB,OAAOjzB,CAAP,IAAY,6BAAtB,CAAN;AACH;AACDA,QAAI,CAACA,CAAL;AACA,QAAIA,IAAI,CAAR,EAAW,OAAO,KAAKkuB,SAAL,CAAe,CAACluB,CAAhB,CAAP;AACX,QAAImJ,SAAS,IAAb;AACA,WAAOnJ,KAAK8yB,aAAZ,EAA2B;AACvB,YAAI3pB,OAAO0nB,MAAP,EAAJ,EAAqB,OAAO1nB,MAAP;AACrBgqB,iBAAShD,UAAUhnB,MAAV,EAAkB4pB,aAAlB,CAAT;AACA5pB,iBAASgqB,OAAO,CAAP,EAAUzB,UAAV,KAAyByB,OAAO,CAAP,EAAUnB,IAAV,EAAzB,GAA4CmB,OAAO,CAAP,CAArD;AACAnzB,aAAK8yB,gBAAgB,CAArB;AACH;AACDK,aAAShD,UAAUhnB,MAAV,EAAkB0pB,YAAY7yB,CAAZ,CAAlB,CAAT;AACA,WAAOmzB,OAAO,CAAP,EAAUzB,UAAV,KAAyByB,OAAO,CAAP,EAAUnB,IAAV,EAAzB,GAA4CmB,OAAO,CAAP,CAAnD;AACH,CAhBD;AAiBAjH,aAAaF,SAAb,CAAuBkH,UAAvB,GAAoCrH,WAAWG,SAAX,CAAqBkH,UAAzD;;AAEA,SAASE,OAAT,CAAiBllB,CAAjB,EAAoBC,CAApB,EAAuBklB,EAAvB,EAA2B;AACvBllB,QAAIwd,WAAWxd,CAAX,CAAJ;AACA,QAAImlB,QAAQplB,EAAEwjB,UAAF,EAAZ;AAAA,QAA4B6B,QAAQplB,EAAEujB,UAAF,EAApC;AACA,QAAI8B,OAAOF,QAAQplB,EAAEulB,GAAF,EAAR,GAAkBvlB,CAA7B;AAAA,QACIwlB,OAAOH,QAAQplB,EAAEslB,GAAF,EAAR,GAAkBtlB,CAD7B;AAEA,QAAIwlB,QAAQ,EAAZ;AAAA,QAAgBC,QAAQ,EAAxB;AACA,QAAIC,QAAQ,KAAZ;AAAA,QAAmBC,QAAQ,KAA3B;AACA,WAAO,CAACD,KAAD,IAAU,CAACC,KAAlB,EAAyB;AACrB,YAAIN,KAAK3C,MAAL,EAAJ,EAAmB;AAAE;AACjBgD,oBAAQ,IAAR;AACAF,kBAAMtsB,IAAN,CAAWisB,QAAQ,CAAR,GAAY,CAAvB;AACH,SAHD,MAIK,IAAIA,KAAJ,EAAWK,MAAMtsB,IAAN,CAAWmsB,KAAK9C,MAAL,KAAgB,CAAhB,GAAoB,CAA/B,EAAX,CAA8C;AAA9C,aACAiD,MAAMtsB,IAAN,CAAWmsB,KAAK9C,MAAL,KAAgB,CAAhB,GAAoB,CAA/B;;AAEL,YAAIgD,KAAK7C,MAAL,EAAJ,EAAmB;AACfiD,oBAAQ,IAAR;AACAF,kBAAMvsB,IAAN,CAAWksB,QAAQ,CAAR,GAAY,CAAvB;AACH,SAHD,MAIK,IAAIA,KAAJ,EAAWK,MAAMvsB,IAAN,CAAWqsB,KAAKhD,MAAL,KAAgB,CAAhB,GAAoB,CAA/B,EAAX,KACAkD,MAAMvsB,IAAN,CAAWqsB,KAAKhD,MAAL,KAAgB,CAAhB,GAAoB,CAA/B;;AAEL8C,eAAOA,KAAKhD,IAAL,CAAU,CAAV,CAAP;AACAkD,eAAOA,KAAKlD,IAAL,CAAU,CAAV,CAAP;AACH;AACD,QAAIrnB,SAAS,EAAb;AACA,SAAK,IAAI8M,IAAI,CAAb,EAAgBA,IAAI0d,MAAMjyB,MAA1B,EAAkCuU,GAAlC;AAAuC9M,eAAO9B,IAAP,CAAYgsB,GAAGM,MAAM1d,CAAN,CAAH,EAAa2d,MAAM3d,CAAN,CAAb,CAAZ;AAAvC,KACA,IAAI+W,MAAMiF,OAAO9oB,OAAO2f,GAAP,EAAP,EAAqB/W,MAArB,GAA8BtI,KAA9B,CAAoCwoB,OAAO,CAAP,EAAUxB,GAAV,CAActnB,OAAOzH,MAArB,CAApC,CAAV;AACA,WAAOyH,OAAOzH,MAAd,EAAsB;AAClBsrB,cAAMA,IAAIle,GAAJ,CAAQmjB,OAAO9oB,OAAO2f,GAAP,EAAP,EAAqBrf,KAArB,CAA2BwoB,OAAO,CAAP,EAAUxB,GAAV,CAActnB,OAAOzH,MAArB,CAA3B,CAAR,CAAN;AACH;AACD,WAAOsrB,GAAP;AACH;;AAEDnB,WAAWG,SAAX,CAAqByH,GAArB,GAA2B,YAAY;AACnC,WAAO,KAAK1hB,MAAL,GAAcigB,IAAd,EAAP;AACH,CAFD;AAGA9F,aAAaF,SAAb,CAAuByH,GAAvB,GAA6B5H,WAAWG,SAAX,CAAqByH,GAAlD;;AAEA5H,WAAWG,SAAX,CAAqB+H,GAArB,GAA2B,UAAU/zB,CAAV,EAAa;AACpC,WAAOozB,QAAQ,IAAR,EAAcpzB,CAAd,EAAiB,UAAUkR,CAAV,EAAaC,CAAb,EAAgB;AAAE,eAAOD,IAAIC,CAAX;AAAe,KAAlD,CAAP;AACH,CAFD;AAGA+a,aAAaF,SAAb,CAAuB+H,GAAvB,GAA6BlI,WAAWG,SAAX,CAAqB+H,GAAlD;;AAEAlI,WAAWG,SAAX,CAAqBgI,EAArB,GAA0B,UAAUh0B,CAAV,EAAa;AACnC,WAAOozB,QAAQ,IAAR,EAAcpzB,CAAd,EAAiB,UAAUkR,CAAV,EAAaC,CAAb,EAAgB;AAAE,eAAOD,IAAIC,CAAX;AAAe,KAAlD,CAAP;AACH,CAFD;AAGA+a,aAAaF,SAAb,CAAuBgI,EAAvB,GAA4BnI,WAAWG,SAAX,CAAqBgI,EAAjD;;AAEAnI,WAAWG,SAAX,CAAqBiI,GAArB,GAA2B,UAAUj0B,CAAV,EAAa;AACpC,WAAOozB,QAAQ,IAAR,EAAcpzB,CAAd,EAAiB,UAAUkR,CAAV,EAAaC,CAAb,EAAgB;AAAE,eAAOD,IAAIC,CAAX;AAAe,KAAlD,CAAP;AACH,CAFD;AAGA+a,aAAaF,SAAb,CAAuBiI,GAAvB,GAA6BpI,WAAWG,SAAX,CAAqBiI,GAAlD;;AAEA,IAAIC,YAAY,KAAK,EAArB;AAAA,IAAyBC,aAAa,CAAClJ,OAAO,CAACA,IAAT,KAAkBA,OAAO,CAACA,IAA1B,IAAkCiJ,SAAxE;AACA,SAASE,QAAT,CAAkBp0B,CAAlB,EAAqB;AAAE;AACnB;AACA;AACA,QAAIyrB,IAAIzrB,EAAEmK,KAAV;AAAA,QAAiB+D,IAAI,OAAOud,CAAP,KAAa,QAAb,GAAwBA,IAAIyI,SAA5B,GAAwCzI,EAAE,CAAF,IAAOA,EAAE,CAAF,IAAOR,IAAd,GAAqBkJ,UAAlF;AACA,WAAOjmB,IAAI,CAACA,CAAZ;AACH;;AAED,SAASkgB,GAAT,CAAald,CAAb,EAAgBC,CAAhB,EAAmB;AACfD,QAAIya,WAAWza,CAAX,CAAJ;AACAC,QAAIwa,WAAWxa,CAAX,CAAJ;AACA,WAAOD,EAAEogB,OAAF,CAAUngB,CAAV,IAAeD,CAAf,GAAmBC,CAA1B;AACH;AACD,SAASkjB,GAAT,CAAanjB,CAAb,EAAgBC,CAAhB,EAAmB;AACfD,QAAIya,WAAWza,CAAX,CAAJ;AACAC,QAAIwa,WAAWxa,CAAX,CAAJ;AACA,WAAOD,EAAEqgB,MAAF,CAASpgB,CAAT,IAAcD,CAAd,GAAkBC,CAAzB;AACH;AACD,SAASmjB,GAAT,CAAapjB,CAAb,EAAgBC,CAAhB,EAAmB;AACfD,QAAIya,WAAWza,CAAX,EAAc6G,GAAd,EAAJ;AACA5G,QAAIwa,WAAWxa,CAAX,EAAc4G,GAAd,EAAJ;AACA,QAAI7G,EAAEigB,MAAF,CAAShgB,CAAT,CAAJ,EAAiB,OAAOD,CAAP;AACjB,QAAIA,EAAE2f,MAAF,EAAJ,EAAgB,OAAO1f,CAAP;AAChB,QAAIA,EAAE0f,MAAF,EAAJ,EAAgB,OAAO3f,CAAP;AAChB,QAAIod,IAAItD,QAAQ,CAAR,CAAR;AAAA,QAAoBqD,CAApB;AAAA,QAAuBtZ,CAAvB;AACA,WAAO7D,EAAEwf,MAAF,MAAcvf,EAAEuf,MAAF,EAArB,EAAiC;AAC7BrC,YAAI9C,KAAK8I,GAAL,CAASD,SAASljB,CAAT,CAAT,EAAsBkjB,SAASjjB,CAAT,CAAtB,CAAJ;AACAD,YAAIA,EAAE8G,MAAF,CAASqW,CAAT,CAAJ;AACAld,YAAIA,EAAE6G,MAAF,CAASqW,CAAT,CAAJ;AACAC,YAAIA,EAAEzW,QAAF,CAAWwW,CAAX,CAAJ;AACH;AACD,WAAOnd,EAAEwf,MAAF,EAAP,EAAmB;AACfxf,YAAIA,EAAE8G,MAAF,CAASoc,SAASljB,CAAT,CAAT,CAAJ;AACH;AACD,OAAG;AACC,eAAOC,EAAEuf,MAAF,EAAP,EAAmB;AACfvf,gBAAIA,EAAE6G,MAAF,CAASoc,SAASjjB,CAAT,CAAT,CAAJ;AACH;AACD,YAAID,EAAEogB,OAAF,CAAUngB,CAAV,CAAJ,EAAkB;AACd4D,gBAAI5D,CAAJ,CAAOA,IAAID,CAAJ,CAAOA,IAAI6D,CAAJ;AACjB;AACD5D,YAAIA,EAAEyG,QAAF,CAAW1G,CAAX,CAAJ;AACH,KARD,QAQS,CAACC,EAAE0f,MAAF,EARV;AASA,WAAOvC,EAAEqD,MAAF,KAAazgB,CAAb,GAAiBA,EAAE2G,QAAF,CAAWyW,CAAX,CAAxB;AACH;AACD,SAASiG,GAAT,CAAarjB,CAAb,EAAgBC,CAAhB,EAAmB;AACfD,QAAIya,WAAWza,CAAX,EAAc6G,GAAd,EAAJ;AACA5G,QAAIwa,WAAWxa,CAAX,EAAc4G,GAAd,EAAJ;AACA,WAAO7G,EAAE8G,MAAF,CAASsc,IAAIpjB,CAAJ,EAAOC,CAAP,CAAT,EAAoB0G,QAApB,CAA6B1G,CAA7B,CAAP;AACH;AACD,SAASihB,WAAT,CAAqBlhB,CAArB,EAAwBC,CAAxB,EAA2B;AACvBD,QAAIya,WAAWza,CAAX,CAAJ;AACAC,QAAIwa,WAAWxa,CAAX,CAAJ;AACA,QAAIqjB,MAAMH,IAAInjB,CAAJ,EAAOC,CAAP,CAAV;AAAA,QAAqBsjB,OAAOrG,IAAIld,CAAJ,EAAOC,CAAP,CAA5B;AACA,QAAIxH,QAAQ8qB,KAAK7c,QAAL,CAAc4c,GAAd,CAAZ;AACA,QAAI7qB,MAAMoiB,OAAV,EAAmB,OAAOyI,IAAI1lB,GAAJ,CAAQyc,KAAKmJ,KAAL,CAAWnJ,KAAKoJ,MAAL,KAAgBhrB,KAA3B,CAAR,CAAP;AACnB,QAAIjI,SAASiI,MAAMQ,KAAN,CAAYzI,MAAZ,GAAqB,CAAlC;AACA,QAAIyH,SAAS,EAAb;AAAA,QAAiByrB,aAAa,IAA9B;AACA,SAAK,IAAI3e,IAAIvU,MAAb,EAAqBuU,KAAK,CAA1B,EAA6BA,GAA7B,EAAkC;AAC9B,YAAI4e,MAAMD,aAAajrB,MAAMQ,KAAN,CAAY8L,CAAZ,CAAb,GAA8BgV,IAAxC;AACA,YAAI6J,QAAQpI,SAASnB,KAAKoJ,MAAL,KAAgBE,GAAzB,CAAZ;AACA1rB,eAAO6mB,OAAP,CAAe8E,KAAf;AACA,YAAIA,QAAQD,GAAZ,EAAiBD,aAAa,KAAb;AACpB;AACDzrB,aAASkjB,aAAaljB,MAAb,CAAT;AACA,WAAOqrB,IAAI1lB,GAAJ,CAAQ,OAAO3F,MAAP,KAAkB,QAAlB,GAA6B,IAAI+iB,YAAJ,CAAiB/iB,MAAjB,CAA7B,GAAwD,IAAI0iB,UAAJ,CAAe1iB,MAAf,EAAuB,KAAvB,CAAhE,CAAP;AACH;AACD,IAAIyiB,YAAY,SAAZA,SAAY,CAAUmJ,IAAV,EAAgBhI,IAAhB,EAAsB;AAClC,QAAIrrB,SAASqzB,KAAKrzB,MAAlB;AACJ,QAAIuU,CAAJ;AACA,QAAI+e,UAAUzJ,KAAKxT,GAAL,CAASgV,IAAT,CAAd;AACA,SAAI,IAAI9W,IAAI,CAAZ,EAAeA,IAAIvU,MAAnB,EAA2BuU,GAA3B,EAAgC;AAC/B,YAAIqY,IAAIyG,KAAK9e,CAAL,EAAQgf,WAAR,EAAR;AACA,YAAG3G,MAAM,GAAT,EAAc;AACd,YAAG,WAAW4G,IAAX,CAAgB5G,CAAhB,CAAH,EAAuB;AACnB,gBAAG,QAAQ4G,IAAR,CAAa5G,CAAb,KAAmB,CAACA,CAAD,IAAM0G,OAA5B,EAAqC;AACvC,oBAAG1G,MAAM,GAAN,IAAa0G,YAAY,CAA5B,EAA+B;AAClB,sBAAM,IAAIhxB,KAAJ,CAAUsqB,IAAI,gCAAJ,GAAuCvB,IAAvC,GAA8C,GAAxD,CAAN;AACb,aAHE,MAGI,IAAGuB,EAAE6G,UAAF,CAAa,CAAb,IAAkB,EAAlB,IAAwBH,OAA3B,EAAoC;AAC1C,sBAAM,IAAIhxB,KAAJ,CAAUsqB,IAAI,gCAAJ,GAAuCvB,IAAvC,GAA8C,GAAxD,CAAN;AACA;AACD;AACD;AACG,QAAI,KAAKA,IAAL,IAAaA,QAAQ,EAAzB,EAA6B;AACzB,YAAIrrB,UAAU4pB,cAAcC,KAAKC,GAAL,CAASuB,IAAT,CAA5B,EAA4C;AAClD,gBAAI5jB,SAAS0B,SAASkqB,IAAT,EAAehI,IAAf,CAAb;AACA,gBAAGqI,MAAMjsB,MAAN,CAAH,EAAkB;AACjB,sBAAM,IAAInF,KAAJ,CAAUsqB,IAAI,gCAAJ,GAAuCvB,IAAvC,GAA8C,GAAxD,CAAN;AACA;AACS,mBAAO,IAAIb,YAAJ,CAAiBrhB,SAASkqB,IAAT,EAAehI,IAAf,CAAjB,CAAP;AACH;AACJ;AACDA,WAAOpB,WAAWoB,IAAX,CAAP;AACA,QAAIsI,SAAS,EAAb;AACA,QAAI3D,aAAaqD,KAAK,CAAL,MAAY,GAA7B;AACA,SAAK9e,IAAIyb,aAAa,CAAb,GAAiB,CAA1B,EAA6Bzb,IAAI8e,KAAKrzB,MAAtC,EAA8CuU,GAA9C,EAAmD;AAC/C,YAAIqY,IAAIyG,KAAK9e,CAAL,EAAQgf,WAAR,EAAR;AAAA,YACIK,WAAWhH,EAAE6G,UAAF,CAAa,CAAb,CADf;AAEA,YAAI,MAAMG,QAAN,IAAkBA,YAAY,EAAlC,EAAsCD,OAAOhuB,IAAP,CAAYskB,WAAW2C,CAAX,CAAZ,EAAtC,KACK,IAAI,MAAMgH,QAAN,IAAkBA,YAAY,GAAlC,EAAuCD,OAAOhuB,IAAP,CAAYskB,WAAW2C,EAAE6G,UAAF,CAAa,CAAb,IAAkB,EAA7B,CAAZ,EAAvC,KACA,IAAI7G,MAAM,GAAV,EAAe;AAChB,gBAAIrI,QAAQhQ,CAAZ;AACA,eAAG;AAAEA;AAAM,aAAX,QAAmB8e,KAAK9e,CAAL,MAAY,GAA/B;AACAof,mBAAOhuB,IAAP,CAAYskB,WAAWoJ,KAAKxa,KAAL,CAAW0L,QAAQ,CAAnB,EAAsBhQ,CAAtB,CAAX,CAAZ;AACH,SAJI,MAKA,MAAM,IAAIjS,KAAJ,CAAUsqB,IAAI,2BAAd,CAAN;AACR;AACD,WAAOiH,mBAAmBF,MAAnB,EAA2BtI,IAA3B,EAAiC2E,UAAjC,CAAP;AACH,CAzCD;;AA2CA,SAAS6D,kBAAT,CAA4BF,MAA5B,EAAoCtI,IAApC,EAA0C2E,UAA1C,EAAsD;AAClD,QAAI8D,MAAMxK,QAAQ,CAAR,CAAV;AAAA,QAAsByF,MAAMzF,QAAQ,CAAR,CAA5B;AAAA,QAAwC/U,CAAxC;AACA,SAAKA,IAAIof,OAAO3zB,MAAP,GAAgB,CAAzB,EAA4BuU,KAAK,CAAjC,EAAoCA,GAApC,EAAyC;AACrCuf,cAAMA,IAAI1mB,GAAJ,CAAQumB,OAAOpf,CAAP,EAAUxM,KAAV,CAAgBgnB,GAAhB,CAAR,CAAN;AACAA,cAAMA,IAAIhnB,KAAJ,CAAUsjB,IAAV,CAAN;AACH;AACD,WAAO2E,aAAa8D,IAAIzjB,MAAJ,EAAb,GAA4ByjB,GAAnC;AACH;;AAED,SAASC,SAAT,CAAmBX,KAAnB,EAA0B;AACtB,QAAIrJ,IAAIqJ,MAAM3qB,KAAd;AACA,QAAI,OAAOshB,CAAP,KAAa,QAAjB,EAA2BA,IAAI,CAACA,CAAD,CAAJ;AAC3B,QAAIA,EAAE/pB,MAAF,KAAa,CAAb,IAAkB+pB,EAAE,CAAF,KAAQ,EAA9B,EAAkC;AAC9B,eAAO,uCAAuCiK,MAAvC,CAA8CjK,EAAE,CAAF,CAA9C,CAAP;AACH;AACD,WAAO,MAAMA,CAAN,GAAU,GAAjB;AACH;AACD,SAASkK,MAAT,CAAgB31B,CAAhB,EAAmB+sB,IAAnB,EAAyB;AACrBA,WAAOkF,OAAOlF,IAAP,CAAP;AACA,QAAIA,KAAK8D,MAAL,EAAJ,EAAmB;AACf,YAAI7wB,EAAE6wB,MAAF,EAAJ,EAAgB,OAAO,GAAP;AAChB,cAAM,IAAI7sB,KAAJ,CAAU,2CAAV,CAAN;AACH;AACD,QAAI+oB,KAAKoE,MAAL,CAAY,CAAC,CAAb,CAAJ,EAAqB;AACjB,YAAInxB,EAAE6wB,MAAF,EAAJ,EAAgB,OAAO,GAAP;AAChB,YAAI7wB,EAAE0xB,UAAF,EAAJ,EAAoB,OAAO,IAAIjqB,KAAJ,CAAU,IAAIzH,CAAd,EAAiB2B,IAAjB,CAAsB,IAAtB,CAAP;AACpB,eAAO,MAAM,IAAI8F,KAAJ,CAAU,CAACzH,CAAX,EAAc2B,IAAd,CAAmB,IAAnB,CAAb;AACH;AACD,QAAIi0B,YAAY,EAAhB;AACA,QAAI51B,EAAE0xB,UAAF,MAAkB3E,KAAK+D,UAAL,EAAtB,EAAyC;AACrC8E,oBAAY,GAAZ;AACA51B,YAAIA,EAAE+X,GAAF,EAAJ;AACH;AACD,QAAIgV,KAAKoE,MAAL,CAAY,CAAZ,CAAJ,EAAoB;AAChB,YAAInxB,EAAE6wB,MAAF,EAAJ,EAAgB,OAAO,GAAP;AAChB,eAAO+E,YAAY,IAAInuB,KAAJ,CAAU,CAACzH,CAAD,GAAK,CAAf,EAAkB2B,IAAlB,CAAuB,CAAvB,CAAnB;AACH;AACD,QAAIk0B,MAAM,EAAV;AACA,QAAIC,OAAO91B,CAAX;AAAA,QAAcuwB,MAAd;AACA,WAAOuF,KAAKpE,UAAL,MAAqBoE,KAAKtJ,UAAL,CAAgBO,IAAhB,KAAyB,CAArD,EAAwD;AACpDwD,iBAASuF,KAAKvF,MAAL,CAAYxD,IAAZ,CAAT;AACA+I,eAAOvF,OAAOL,QAAd;AACA,YAAI4E,QAAQvE,OAAOnB,SAAnB;AACA,YAAI0F,MAAMpD,UAAN,EAAJ,EAAwB;AACpBoD,oBAAQ/H,KAAKY,KAAL,CAAWmH,KAAX,EAAkB/c,GAAlB,EAAR;AACA+d,mBAAOA,KAAKlD,IAAL,EAAP;AACH;AACDiD,YAAIxuB,IAAJ,CAASouB,UAAUX,KAAV,CAAT;AACH;AACDe,QAAIxuB,IAAJ,CAASouB,UAAUK,IAAV,CAAT;AACA,WAAOF,YAAYC,IAAI5F,OAAJ,GAActuB,IAAd,CAAmB,EAAnB,CAAnB;AACH;;AAEDkqB,WAAWG,SAAX,CAAqB7rB,QAArB,GAAgC,UAAUurB,KAAV,EAAiB;AAC7C,QAAIA,UAAUzD,SAAd,EAAyByD,QAAQ,EAAR;AACzB,QAAIA,UAAU,EAAd,EAAkB,OAAOiK,OAAO,IAAP,EAAajK,KAAb,CAAP;AAClB,QAAID,IAAI,KAAKthB,KAAb;AAAA,QAAoBgjB,IAAI1B,EAAE/pB,MAA1B;AAAA,QAAkCq0B,MAAM9C,OAAOxH,EAAE,EAAE0B,CAAJ,CAAP,CAAxC;AAAA,QAAwD6I,QAAQ,SAAhE;AAAA,QAA2ElB,KAA3E;AACA,WAAO,EAAE3H,CAAF,IAAO,CAAd,EAAiB;AACb2H,gBAAQ7B,OAAOxH,EAAE0B,CAAF,CAAP,CAAR;AACA4I,eAAOC,MAAMzb,KAAN,CAAYua,MAAMpzB,MAAlB,IAA4BozB,KAAnC;AACH;AACD,QAAIhJ,OAAO,KAAKA,IAAL,GAAY,GAAZ,GAAkB,EAA7B;AACA,WAAOA,OAAOiK,GAAd;AACH,CAVD;AAWA7J,aAAaF,SAAb,CAAuB7rB,QAAvB,GAAkC,UAAUurB,KAAV,EAAiB;AAC/C,QAAIA,UAAUzD,SAAd,EAAyByD,QAAQ,EAAR;AACzB,QAAIA,SAAS,EAAb,EAAiB,OAAOiK,OAAO,IAAP,EAAajK,KAAb,CAAP;AACjB,WAAOuH,OAAO,KAAK9oB,KAAZ,CAAP;AACH,CAJD;;AAMA0hB,WAAWG,SAAX,CAAqBiK,OAArB,GAA+B,YAAY;AACvC,WAAO,CAAC,KAAK91B,QAAL,EAAR;AACH,CAFD;AAGA0rB,WAAWG,SAAX,CAAqBkK,UAArB,GAAkCrK,WAAWG,SAAX,CAAqBiK,OAAvD;;AAEA/J,aAAaF,SAAb,CAAuBiK,OAAvB,GAAiC,YAAY;AACzC,WAAO,KAAK9rB,KAAZ;AACH,CAFD;AAGA+hB,aAAaF,SAAb,CAAuBkK,UAAvB,GAAoChK,aAAaF,SAAb,CAAuBiK,OAA3D;;AAEA,SAASE,gBAAT,CAA0B1K,CAA1B,EAA6B;AACrB,QAAIU,UAAU,CAACV,CAAX,CAAJ,EAAmB;AACf,YAAIvd,IAAI,CAACud,CAAT;AACA,YAAIvd,MAAMwe,SAASxe,CAAT,CAAV,EACI,OAAO,IAAIge,YAAJ,CAAiBhe,CAAjB,CAAP;AACJ,cAAM,sBAAsBud,CAA5B;AACH;AACD,QAAIK,OAAOL,EAAE,CAAF,MAAS,GAApB;AACA,QAAIK,IAAJ,EAAUL,IAAIA,EAAElR,KAAF,CAAQ,CAAR,CAAJ;AACV,QAAInT,QAAQqkB,EAAErkB,KAAF,CAAQ,IAAR,CAAZ;AACA,QAAIA,MAAM1F,MAAN,GAAe,CAAnB,EAAsB,MAAM,IAAIsC,KAAJ,CAAU,sBAAsBoD,MAAMzF,IAAN,CAAW,GAAX,CAAhC,CAAN;AACtB,QAAIyF,MAAM1F,MAAN,KAAiB,CAArB,EAAwB;AACpB,YAAIkvB,MAAMxpB,MAAM,CAAN,CAAV;AACA,YAAIwpB,IAAI,CAAJ,MAAW,GAAf,EAAoBA,MAAMA,IAAIrW,KAAJ,CAAU,CAAV,CAAN;AACpBqW,cAAM,CAACA,GAAP;AACA,YAAIA,QAAQlE,SAASkE,GAAT,CAAR,IAAyB,CAACzE,UAAUyE,GAAV,CAA9B,EAA8C,MAAM,IAAI5sB,KAAJ,CAAU,sBAAsB4sB,GAAtB,GAA4B,2BAAtC,CAAN;AAC9C,YAAImE,OAAO3tB,MAAM,CAAN,CAAX;AACA,YAAIgvB,eAAerB,KAAKznB,OAAL,CAAa,GAAb,CAAnB;AACA,YAAI8oB,gBAAgB,CAApB,EAAuB;AACnBxF,mBAAOmE,KAAKrzB,MAAL,GAAc00B,YAAd,GAA6B,CAApC;AACArB,mBAAOA,KAAKxa,KAAL,CAAW,CAAX,EAAc6b,YAAd,IAA8BrB,KAAKxa,KAAL,CAAW6b,eAAe,CAA1B,CAArC;AACH;AACD,YAAIxF,MAAM,CAAV,EAAa,MAAM,IAAI5sB,KAAJ,CAAU,oDAAV,CAAN;AACb+wB,gBAAS,IAAIttB,KAAJ,CAAUmpB,MAAM,CAAhB,CAAD,CAAqBjvB,IAArB,CAA0B,GAA1B,CAAR;AACA8pB,YAAIsJ,IAAJ;AACH;AACD,QAAIsB,UAAU,kBAAkBnB,IAAlB,CAAuBzJ,CAAvB,CAAd;AACA,QAAI,CAAC4K,OAAL,EAAc,MAAM,IAAIryB,KAAJ,CAAU,sBAAsBynB,CAAhC,CAAN;AACd,QAAIzR,IAAI,EAAR;AAAA,QAAYoU,MAAM3C,EAAE/pB,MAApB;AAAA,QAA4ByrB,IAAIjC,QAAhC;AAAA,QAA0CmJ,MAAMjG,MAAMjB,CAAtD;AACA,WAAOiB,MAAM,CAAb,EAAgB;AACZpU,UAAE3S,IAAF,CAAO,CAACokB,EAAElR,KAAF,CAAQ8Z,GAAR,EAAajG,GAAb,CAAR;AACAiG,eAAOlH,CAAP;AACA,YAAIkH,MAAM,CAAV,EAAaA,MAAM,CAAN;AACbjG,eAAOjB,CAAP;AACH;AACDZ,SAAKvS,CAAL;AACA,WAAO,IAAI6R,UAAJ,CAAe7R,CAAf,EAAkB8R,IAAlB,CAAP;AACP;;AAED,SAASwK,gBAAT,CAA0B7K,CAA1B,EAA6B;AACzB,QAAIU,UAAUV,CAAV,CAAJ,EAAkB;AACd,YAAIA,MAAMiB,SAASjB,CAAT,CAAV,EAAuB,MAAM,IAAIznB,KAAJ,CAAUynB,IAAI,qBAAd,CAAN;AACvB,eAAO,IAAIS,YAAJ,CAAiBT,CAAjB,CAAP;AACH;AACD,WAAO0K,iBAAiB1K,EAAEtrB,QAAF,EAAjB,CAAP;AACH;;AAED,SAASwrB,UAAT,CAAoBF,CAApB,EAAuB;AACnB,QAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B;AACvB,eAAO6K,iBAAiB7K,CAAjB,CAAP;AACH;AACD,QAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B;AACvB,eAAO0K,iBAAiB1K,CAAjB,CAAP;AACH;AACD,WAAOA,CAAP;AACH;AACD;AACA,KAAK,IAAIxV,IAAI,CAAb,EAAgBA,IAAI,IAApB,EAA0BA,GAA1B,EAA+B;AAC3B+U,YAAQ/U,CAAR,IAAa,IAAIiW,YAAJ,CAAiBjW,CAAjB,CAAb;AACA,QAAIA,IAAI,CAAR,EAAW+U,QAAQ,CAAC/U,CAAT,IAAc,IAAIiW,YAAJ,CAAiB,CAACjW,CAAlB,CAAd;AACd;AACD;AACA+U,QAAQwH,GAAR,GAAcxH,QAAQ,CAAR,CAAd;AACAA,QAAQsH,IAAR,GAAetH,QAAQ,CAAR,CAAf;AACAA,QAAQuL,QAAR,GAAmBvL,QAAQ,CAAC,CAAT,CAAnB;AACAA,QAAQoD,GAAR,GAAcA,GAAd;AACApD,QAAQqJ,GAAR,GAAcA,GAAd;AACArJ,QAAQsJ,GAAR,GAAcA,GAAd;AACAtJ,QAAQuJ,GAAR,GAAcA,GAAd;AACAvJ,QAAQwL,UAAR,GAAqB,UAAUtoB,CAAV,EAAa;AAAE,WAAOA,aAAa2d,UAAb,IAA2B3d,aAAage,YAA/C;AAA8D,CAAlG;AACAlB,QAAQoH,WAAR,GAAsBA,WAAtB;;AAEApH,QAAQyL,SAAR,GAAoB,UAAUpB,MAAV,EAAkBtI,IAAlB,EAAwB2E,UAAxB,EAAoC;AACpD,WAAO6D,mBAAmBF,OAAOlyB,GAAP,CAAWwoB,UAAX,CAAnB,EAA2CA,WAAWoB,QAAQ,EAAnB,CAA3C,EAAmE2E,UAAnE,CAAP;AACH,CAFD,C;;;;;;;;;;;;;;;;ACltCA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AAKA;;;;AAQA;;;;AAIA,SAASgF,GAAT,CAAahvB,GAAb,EAAkByC,KAAlB,EAAyB;AACvB,SAAO,iBAAUzC,GAAV,EAAeyC,KAAf,mDAAP;AACD;;IAEYwsB,M,WAAAA,M;AAEX,oBAAc;AAAA;;AACZ,SAAK9L,UAAL;AACD;;;;iCAEY;AACX,WAAK+L,IAAL,GAAY,IAAZ;AACA,WAAKC,WAAL,GAAmB,gCAAnB;AACA,WAAKC,SAAL,GAAiB,KAAKC,0BAAL,EAAjB;AACA,WAAKC,OAAL,GAAe,mBAAW,KAAKF,SAAhB,CAAf;AACA,WAAKG,KAAL,GAAa,IAAb;AACA,WAAKC,GAAL,GAAW,IAAX;AACA,WAAKC,OAAL,GAAe,IAAf;AACD;;AAED;;;;;;;;wBAKIzc,K,EAAO;AACT,aAAO,KAAK0c,QAAL,CAAc1c,KAAd,EAAqB,2BAArB,EAAyCvR,MAAhD;AACD;;AAED;;;;;;;;;6BAMSuR,K,EAAO2c,Y,EAAc;AAC5B,WAAK1M,KAAL,CAAWjQ,KAAX;AACA,WAAKqQ,IAAL;AACA,WAAKrB,OAAL;AACA,WAAK4N,OAAL,CAAaD,YAAb;AACA,aAAO,EAAC,UAAU,KAAKF,OAAhB,EAAyB,SAAS,KAAKD,GAAL,CAASvnB,WAAT,EAAlC,EAAP;AACD;;;0BAEK+K,K,EAAO;AACX,WAAKkc,IAAL,GAAY,mBAAWlc,KAAX,EAAkBiQ,KAAlB,EAAZ;AACD;;;oCAEe4M,a,EAAeC,O,EAAS;AACtC,WAAKR,OAAL,CAAaS,WAAb,CAAyBF,aAAzB,EAAwCC,OAAxC;AACD;;;2BAEM;AACL,WAAKV,SAAL,GAAiB,KAAKE,OAAL,CAAajM,IAAb,CAAkB,KAAK6L,IAAvB,CAAjB;AACD;;;8BAES;AACR,WAAKK,KAAL,GAAa,uBAAa,KAAKH,SAAlB,EAA6BpN,OAA7B,CAAqC,KAAKkN,IAA1C,CAAb;AACD;;;6CAEwBS,Y,EAAc;AACrC,WAAKH,GAAL,GAAW,uBAAmB,KAAKD,KAAxB,EAA+BI,YAA/B,CAAX;AACD;;;4BAEOA,Y,EAAc;AACpB,WAAKK,kBAAL,CAAwBL,YAAxB,EAAsC,CAAtC;AACD;;;uCAEkBA,Y,EAAcr0B,S,EAAW;AAC1C,WAAK2mB,iCAAL,CAAuC0N,YAAvC,EAAqDr0B,SAArD,EAAgE,IAAhE;AACD;;;sDAEiCq0B,Y,EAAcr0B,S,EAAW20B,gB,EAAkB;AAC3E,WAAK7N,wBAAL,CAA8BuN,YAA9B;AACA,WAAKF,OAAL,GAAe,KAAKD,GAAL,CAASU,6BAAT,CACb50B,SADa,EACF20B,gBADE,CAAf;AAGD;;;4CAEuB7P,U,EAAY9kB,S,EAAW;AAC7C,WAAKm0B,OAAL,GAAe,KAAKD,GAAL,CAASW,mBAAT,CAA6B/P,UAA7B,EAAyC9kB,SAAzC,CAAf;AACD;;;;;AA0BD;;iDAE6B;AAC3B,UAAI80B,WAAW,2BAAf;;AAEA;AAH2B;AAAA;AAAA;;AAAA;AAI3B,6BAAiB,KAAKjB,WAAL,CAAiB5kB,KAAjB,EAAjB,8HAA2C;AAAA,cAAlC3Q,IAAkC;;AACzCw2B,mBAASC,OAAT,CAAiB,KAAKC,WAAL,CAAiB12B,IAAjB,CAAjB;AACD;;AAED;AAR2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAS3B,8BAA0B,KAAKu1B,WAAL,CAAiBoB,UAAjB,EAA1B,mIAAyD;AAAA,cAAhD1tB,aAAgD;;AACvDutB,mBAASI,YAAT,CAAsB,KAAKC,gBAAL,CAAsB5tB,aAAtB,CAAtB;AACD;;AAED;AAb2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAc3B,8BAAyB,KAAKssB,WAAL,CAAiBuB,SAAjB,EAAzB,mIAAuD;AAAA,cAA9CpsB,YAA8C;;AACrD8rB,mBAASO,WAAT,CAAqB,KAAKC,eAAL,CAAqBtsB,YAArB,CAArB;AACD;AAhB0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAkB3B,aAAO8rB,QAAP;AACD;;;gCAEWx2B,I,EAAM;AAChB,UAAIyH,0BAA0B,EAA9B;AADgB;AAAA;AAAA;;AAAA;AAEhB,8BAAwB,KAAK8tB,WAAL,CAAiB0B,gBAAjB,CAAkCj3B,IAAlC,CAAxB,mIAAiE;AAAA,cAAxDk3B,YAAwD;;AAC/DzvB,kCAAwB1B,IAAxB,CACE,KAAKoxB,0BAAL,CAAgCn3B,IAAhC,EAAsCk3B,YAAtC,CADF;AAGD;AANe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOhB,aAAO,oBAAe9B,sBAAep1B,IAAf,CAAf,EAAqCyH,uBAArC,CAAP;AACD;;;qCAEgBwB,a,EAAe;AAC9B,UAAI0Z,QAAQ,KAAK4S,WAAL,CAAiB6B,YAAjB,CAA8BnuB,aAA9B,EAA6C0Z,KAA7C,EAAZ;AACA,UAAItb,aAAa,EAAjB;AACA,WAAK,IAAIsN,IAAI,CAAb,EAAgBA,KAAKgO,KAArB,EAA4BhO,GAA5B,EAAiC;AAC/BtN,mBAAWtB,IAAX,CAAgBqvB,sBAAe,MAAMzgB,EAAE9V,QAAF,EAArB,CAAhB;AACD;AACD,aAAO,yBACHu2B,sBAAensB,aAAf,CADG,EAEH5B,UAFG,EAGH,sBAAiB,EAAjB,CAHG,CAAP;AAKD;;;oCAEeqD,Y,EAAc;AAC5B,UAAIiY,QAAQ,KAAK4S,WAAL,CAAiB6B,YAAjB,CAA8B1sB,YAA9B,EAA4CiY,KAA5C,EAAZ;AACA,UAAItb,aAAa,EAAjB;AACA,WAAK,IAAIsN,IAAI,CAAb,EAAgBA,KAAKgO,KAArB,EAA4BhO,GAA5B,EAAiC;AAC/BtN,mBAAWtB,IAAX,CAAgBqvB,sBAAe,MAAMzgB,EAAE9V,QAAF,EAArB,CAAhB;AACD;AACD,aAAO,wBACHu2B,sBAAe1qB,YAAf,CADG,EAEHrD,UAFG,EAGH,sBAAiB,EAAjB,CAHG,CAAP;AAKD;;;+CAE0BrH,I,EAAMk3B,W,EAAa;AAC5C,UAAIpf,SAAS,EAAb;AAD4C;AAAA;AAAA;;AAAA;AAE5C,8BAAkB,KAAKyd,WAAL,CAAiBpW,iBAAjB,CAAmCnf,IAAnC,EAAyCk3B,WAAzC,CAAlB,mIAAyE;AAAA,cAAhEG,KAAgE;;AACvEvf,iBAAO/R,IAAP,CAAYqvB,sBAAeiC,KAAf,CAAZ;AACD;AAJ2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAK5C,aAAO,mCAA8BjC,sBAAe8B,WAAf,CAA9B,EAA2Dpf,MAA3D,CAAP;AACD;;;wBAzFwB;AACvB,aAAO,KAAKwd,IAAZ;AACD;;;wBAEgB;AACf,aAAO,KAAKC,WAAZ;AACD;;;wBAEiB;AAChB,aAAO,KAAKC,SAAZ;AACD;;;wBAEwB;AACvB,aAAO,KAAKG,KAAZ;AACD;;;wBAEY;AACX,aAAO,KAAKE,OAAZ;AACD;;;wBAEiB;AAChB,aAAO,KAAKD,GAAL,CAASvnB,WAAT,EAAP;AACD;;;;;;;;;;;;;;;;;;;;AClIH;;AACA;;AACA;;AACA;;AAcA;;;;AA6CA,IAAMipB,QAAQ5zB,OAAOC,GAAP,CAAW,OAAX,CAAd;AACA,IAAM4zB,SAAS7zB,OAAOC,GAAP,CAAW,QAAX,CAAf;AACA,IAAM6zB,SAAS9zB,OAAOC,GAAP,CAAW,QAAX,CAAf;AACA,IAAM8zB,SAAS/zB,OAAOC,GAAP,CAAW,QAAX,CAAf;;IAEM+zB,e;AACJ;;AAEA,2BAAYC,MAAZ,EAAoBC,SAApB,EAA+B;AAAA;;AAC7B,SAAKC,OAAL,GAAeF,MAAf;AACA,SAAKG,UAAL,GAAkBF,SAAlB;AACD;;;;+BAMUG,K,EAAO;AAChB,aAAOr0B,OAAO2C,MAAP,CAAc0xB,MAAM3xB,GAApB,KAA4B,KAAK0xB,UAAxC;AACD;;;iCAEYC,K,EAAO;AAClB,aAAO,mCAEL,KAAKD,UAAL,CAAgBp0B,OAAO2C,MAAP,CAAc0xB,MAAM3xB,GAApB,CAAhB,CAFK,EAGL2xB,MAAMj1B,QAHD,EAILi1B,MAAMh1B,MAJD,CAAP;AAMD;;;wBAfY;AACX,aAAO,KAAK80B,OAAZ;AACD;;;;;;AAgBH;;;;;AAGA,IAAMG,YAAY;AAChB;AACA,IAAIN,eAAJ,CAAoBF,MAApB,EAA4B;AAC1B,UAAQ;AADkB,CAA5B,CAFgB,EAKhB,IAAIE,eAAJ,CAAoBF,MAApB,EAA4B;AAC1B,WAAS;AADiB,CAA5B,CALgB,EAQhB,IAAIE,eAAJ,CAAoBD,MAApB,EAA4B;AAC1B,WAAS;AADiB,CAA5B,CARgB;AAWhB;AACA,IAAIC,eAAJ,CAAoBJ,KAApB,EAA2B;AACzB,UAAQ,IADiB;AAEzB,UAAQ,IAFiB;AAGzB,UAAQ,IAHiB;AAIzB,UAAQ,IAJiB;AAKzB,UAAQ,GALiB;AAMzB,UAAQ;AANiB,CAA3B,CAZgB;AAoBhB;AACA,IAAII,eAAJ,CAAoBH,MAApB,EAA4B;AAC1B,cAAY;AADc,CAA5B,CArBgB;AAwBhB;AACA,IAAIG,eAAJ,CAAoBH,MAApB,EAA4B;AAC1B,YAAU,GADgB;AAE1B,aAAW;AAFe,CAA5B,CAzBgB;AA6BhB;AACA,IAAIG,eAAJ,CAAoBH,MAApB,EAA4B;AAC1B,aAAW;AADe,CAA5B,CA9BgB;AAiChB;AACA,IAAIG,eAAJ,CAAoBH,MAApB,EAA4B;AAC1B,WAAS,KADiB;AAE1B,WAAS;AAFiB,CAA5B,CAlCgB;AAsChB;AACA,IAAIG,eAAJ,CAAoBF,MAApB,EAA4B;AAC1B,WAAS;AADiB,CAA5B,CAvCgB;AA0ChB;AACA,IAAIE,eAAJ,CAAoBD,MAApB,EAA4B;AAC1B,aAAW;AADe,CAA5B,CA3CgB,CAAlB;;AAgDA,SAAS3sB,IAAT,CAAchI,QAAd,EAAwBC,MAAxB,EAAgCE,MAAhC,EAAwCC,IAAxC,EAA8C;AAC5C,QAAM,+BAAmBJ,QAAnB,EAA6BC,MAA7B,EAAqCE,MAArC,EAA6CC,IAA7C,CAAN;AACD;;AAED;;;;;;;;;;;;;;;;IAea+0B,M,WAAAA,M;AAEX,kBAAY7e,KAAZ,EAAmB;AAAA;;AACjB,SAAK8e,MAAL,GAAc,iBAAU9e,KAAV,CAAd;AACA,SAAK+e,UAAL;AACD;;AAED;;;;;4BACQ;AACN,UAAIpxB,cAAc,EAAlB;AACA,aAAO,KAAKqxB,aAAL,CAAmBhyB,GAAnB,iBAAP,EAAyC;AACvCW,oBAAYhB,IAAZ,CAAiB,KAAKsyB,gBAAL,EAAjB;AACD;AACD,aAAO,iBAAYtxB,WAAZ,CAAP;AACD;;AAED;;;;uCAEmB;AACjB,cAAQ,KAAKqxB,aAAL,CAAmBhyB,GAA3B;AACE;AACE,iBAAO,KAAKkyB,gBAAL,EAAP;AACF;AACE,iBAAO,KAAKC,2BAAL,EAAP;AACF;AACE,iBAAO,KAAKC,kBAAL,EAAP;AACF;AACE,iBAAO,KAAKC,iBAAL,EAAP;AACF;AACE,iBAAO,KAAKC,aAAL,EAAP;AACF;AACE,iBAAO5tB,KACL,KAAKstB,aAAL,CAAmBt1B,QADd,EACwB,KAAKs1B,aAAL,CAAmBr1B,MAD3C,EAEL,oBAFK,EAEiB,CACpB,gBAAK,YAAL,CADoB,EAEpB,gBAAKW,OAAO2C,MAAP,CAAc,KAAK+xB,aAAL,CAAmBhyB,GAAjC,CAAL,CAFoB,CAFjB,CAAP;AAZJ;AAoBD;;;uCAEkB;AACjB,UAAItD,WAAW,KAAKs1B,aAAL,CAAmBt1B,QAAlC;AACA,WAAK61B,MAAL;AACA,UAAIC,QAAQ,KAAKC,eAAL,EAAZ;AACA,UAAIhxB,SAAS,uBAAkB+wB,KAAlB,CAAb;AACA/wB,aAAO/E,QAAP,GAAkBA,QAAlB;AACA+E,aAAO9E,MAAP,GAAgB61B,MAAM71B,MAAtB;AACA,aAAO8E,MAAP;AACD;;;kDAE6B;AAC5B,UAAI/E,WAAW,KAAKs1B,aAAL,CAAmBt1B,QAAlC;AACA,WAAK61B,MAAL;AACA,WAAKA,MAAL;AACA,WAAKA,MAAL;AACA,UAAIxxB,WAAW,KAAK2xB,oBAAL,EAAf;AACA,UAAI/1B,SAAS,KAAKq1B,aAAL,CAAmBt1B,QAAhC;AACA,WAAK61B,MAAL;AACA,UAAI9wB,SAAS,kCAA6BV,QAA7B,CAAb;AACAU,aAAO/E,QAAP,GAAkBA,QAAlB;AACA+E,aAAO9E,MAAP,GAAgBA,MAAhB;AACA,aAAO8E,MAAP;AACD;;;yCAEoB;AACnB,UAAI/E,WAAW,KAAKs1B,aAAL,CAAmBt1B,QAAlC;AACA,WAAK61B,MAAL;AACA,UAAIp5B,OAAO,KAAKw5B,aAAL,EAAX;AACA,WAAKJ,MAAL;AACA,UAAItxB,aAAa,KAAK2xB,gBAAL,EAAjB;AACA,WAAKL,MAAL;AACA,UAAIC,QAAQ,KAAKC,eAAL,EAAZ;AACA,UAAIhxB,SAAS,yBAAoBtI,IAApB,EAA0B8H,UAA1B,EAAsCuxB,KAAtC,CAAb;AACA/wB,aAAO/E,QAAP,GAAkBA,QAAlB;AACA+E,aAAO9E,MAAP,GAAgB61B,MAAM71B,MAAtB;AACA,aAAO8E,MAAP;AACD;;;wCAEmB;AAClB,UAAI/E,WAAW,KAAKs1B,aAAL,CAAmBt1B,QAAlC;AACA,WAAK61B,MAAL;AACA,UAAIp5B,OAAO,KAAK64B,aAAhB;AACA,WAAKO,MAAL;AACA,WAAKA,MAAL;AACA,UAAItxB,aAAa,KAAK2xB,gBAAL,EAAjB;AACA,WAAKL,MAAL;AACA,UAAIC,QAAQ,KAAKC,eAAL,EAAZ;AACA,UAAIhxB,SAAS,wBAAmBtI,IAAnB,EAAyB8H,UAAzB,EAAqCuxB,KAArC,CAAb;AACA/wB,aAAO/E,QAAP,GAAkBA,QAAlB;AACA+E,aAAO9E,MAAP,GAAgB61B,MAAM71B,MAAtB;AACA,aAAO8E,MAAP;AACD;;;oCAEe;AACd,UAAI/E,WAAW,KAAKs1B,aAAL,CAAmBt1B,QAAlC;AACA,WAAK61B,MAAL;AACA,UAAInxB,WAAW,KAAKuxB,aAAL,EAAf;AACA,WAAKJ,MAAL;AACA,cAAQ,KAAKP,aAAL,CAAmBhyB,GAA3B;AACE;AACE,iBAAO,KAAK6yB,mBAAL,CAAyBn2B,QAAzB,EAAmC0E,QAAnC,CAAP;AACF;AACE,iBAAO,KAAK0xB,oBAAL,CAA0Bp2B,QAA1B,EAAoC0E,QAApC,CAAP;AACF;AACE,iBAAOsD,KACL,KAAKstB,aAAL,CAAmBt1B,QADd,EACwB,KAAKs1B,aAAL,CAAmBr1B,MAD3C,EAEL,oBAFK,EAEiB,CACpB,gBAAK,eAAL,EAAsB,CACpB,gBAAK,UAAL,CADoB,EAEpB,gBAAK,WAAL,CAFoB,CAAtB,CADoB,EAKpB,gBAAKW,OAAO2C,MAAP,CAAc,KAAK+xB,aAAL,CAAmBhyB,GAAjC,CAAL,CALoB,CAFjB,CAAP;AANJ;AAiBD;;;wCAEmBtD,Q,EAAU0E,Q,EAAU;AACtC,WAAKmxB,MAAL;AACA,WAAKA,MAAL;AACA,UAAIx3B,aAAa,KAAKg4B,gBAAL,EAAjB;AACA,UAAIp2B,SAAS,KAAKq1B,aAAL,CAAmBt1B,QAAhC;AACA,WAAKs2B,cAAL,kBAA8B,iCAA9B;AACA,UAAIvxB,SAAS,oBAAeL,QAAf,EAAyB,CACvB,mCAA8BA,QAA9B,EAAwCrG,UAAxC,CADuB,CAAzB,CAAb;AAGA0G,aAAO/E,QAAP,GAAkBA,QAAlB;AACA+E,aAAO9E,MAAP,GAAgBA,MAAhB;AACA,aAAO8E,MAAP;AACD;;;yCAEoB/E,Q,EAAU0E,Q,EAAU;AACvC,UAAIC,0BAA0B,EAA9B;AACA,WAAKkxB,MAAL;AACA,WAAKA,MAAL;AACA,aAAO,KAAKP,aAAL,CAAmBhyB,GAAnB,kBAAP,EAA0C;AACxCqB,gCAAwB1B,IAAxB,CAA6B,KAAKszB,4BAAL,EAA7B;AACD;AACD,UAAIt2B,SAAS,KAAKq1B,aAAL,CAAmBt1B,QAAhC;AACA,WAAKs2B,cAAL,kBAA8B,gCAA9B;AACA,UAAIvxB,SAAS,oBAAeL,QAAf,EAAyBC,uBAAzB,CAAb;AACAI,aAAO/E,QAAP,GAAkBA,QAAlB;AACA+E,aAAO9E,MAAP,GAAgBA,MAAhB;AACA,aAAO8E,MAAP;AACD;;;mDAE8B;AAC7B,UAAI/E,WAAW,KAAKs1B,aAAL,CAAmBt1B,QAAlC;AACA,WAAK61B,MAAL;AACA,UAAIn5B,kBAAkB,KAAKu5B,aAAL,EAAtB;AACA,WAAKJ,MAAL;AACA,UAAIx3B,aAAa,KAAKg4B,gBAAL,EAAjB;AACA,UAAIp2B,SAAS,KAAKq1B,aAAL,CAAmBt1B,QAAhC;AACA,WAAKs2B,cAAL,kBAA8B,iCAA9B;AACA,UAAIvxB,SAAS,mCAA8BrI,eAA9B,EAA+C2B,UAA/C,CAAb;AACA0G,aAAO/E,QAAP,GAAkBA,QAAlB;AACA+E,aAAO9E,MAAP,GAAgBA,MAAhB;AACA,aAAO8E,MAAP;AACD;;;uCAEkB;AACjB,UAAI1G,aAAa,EAAjB;AACA,aAAO,KAAKi3B,aAAL,CAAmBhyB,GAAnB,mBAAP,EAA2C;AACzC,aAAKuyB,MAAL;AACAx3B,mBAAW4E,IAAX,CAAgB,KAAKuzB,aAAL,EAAhB;AACD;AACD,aAAOn4B,UAAP;AACD;;AAED;;AAEA;;;;sCACkB;AAChB,UAAIo4B,YAAY,KAAKC,mBAAL,EAAhB;AACA,UAAI,KAAKpB,aAAL,CAAmBhyB,GAAnB,uBAAJ,EAA4C;AAC1C,aAAKuyB,MAAL;AACD;AACD,aAAOY,SAAP;AACD;;AAED;;;;0CACsB;AACpB,cAAQ,KAAKnB,aAAL,CAAmBhyB,GAA3B;AACE;AACE,iBAAO,KAAKqzB,gBAAL,EAAP;AACF;AACE,iBAAO,KAAKC,YAAL,EAAP;AACF;AACE,iBAAO,KAAKC,gBAAL,EAAP;AACF;AACE,iBAAO,KAAKC,iBAAL,EAAP;AACF;AACE,iBAAO,KAAKC,eAAL,EAAP;AACF;AACE,iBAAO,KAAKC,gBAAL,EAAP;AACF;AACE,iBAAO,KAAKC,aAAL,EAAP;AACF;AACE,iBAAO,KAAKlB,eAAL,EAAP;AACF;AACE,iBAAO,KAAKmB,wBAAL,EAAP;AACF;AACE,iBAAO,KAAKC,uBAAL,EAAP;AACF;AACE;;;;;AAKA,iBAAOnvB,KACL,KAAKstB,aAAL,CAAmBt1B,QADd,EACwB,KAAKs1B,aAAL,CAAmBr1B,MAD3C,EAEL,2BAFK,EAEwB,EAFxB,CAAP;AAIF;AACE,iBAAO+H,KACL,KAAKstB,aAAL,CAAmBt1B,QADd,EACwB,KAAKs1B,aAAL,CAAmBr1B,MAD3C,EAEL,oBAFK,EAEiB,CACpB,gBAAK,WAAL,CADoB,EAEpB,gBAAKW,OAAO2C,MAAP,CAAc,KAAK+xB,aAAL,CAAmBhyB,GAAjC,CAAL,CAFoB,CAFjB,CAAP;AAhCJ;AAwCD;;;sCAEiB;AAChB,UAAItD,WAAW,KAAKs1B,aAAL,CAAmBt1B,QAAlC;AACA,UAAI6E,aAAa,EAAjB;AACA,WAAKgxB,MAAL;AACA,aAAO,KAAKP,aAAL,CAAmBhyB,GAAnB,oBAAP,EAA4C;AAC1CuB,mBAAW5B,IAAX,CAAgB,KAAKm0B,eAAL,EAAhB;AACA,YAAI,KAAK9B,aAAL,uBAAJ,EAAwC;AACtC,eAAKO,MAAL;AACD;AACF;AACD,UAAI51B,SAAS,KAAKq1B,aAAL,CAAmBt1B,QAAhC;AACA,WAAK61B,MAAL;AACA,UAAI9wB,SAAS,sBAAiBF,UAAjB,CAAb;AACAE,aAAO/E,QAAP,GAAkBA,QAAlB;AACA+E,aAAO9E,MAAP,GAAgBA,MAAhB;AACA,aAAO8E,MAAP;AACD;;;uCAEkB;AACjB,UAAI/E,WAAW,KAAKs1B,aAAL,CAAmBt1B,QAAlC;AACA,WAAK61B,MAAL;AACA,UAAIwB,QAAQ,KAAKC,eAAL,EAAZ;AACA,UAAIvyB,SAAS,uBAAkBsyB,KAAlB,CAAb;AACAtyB,aAAO/E,QAAP,GAAkBA,QAAlB;AACA+E,aAAO9E,MAAP,GAAgBo3B,MAAMp3B,MAAtB;AACA,aAAO8E,MAAP;AACD;;;mCAEc;AACb,UAAI/E,WAAW,KAAKs1B,aAAL,CAAmBt1B,QAAlC;AACA,WAAK61B,MAAL;AACA,WAAKA,MAAL;AACA,UAAI5wB,YAAY,KAAKsyB,gBAAL,EAAhB;AACA,WAAK1B,MAAL;AACA;AACA,UAAI,KAAKP,aAAL,CAAmBhyB,GAAnB,kBAAJ,EAAuC;AACrC,aAAKuyB,MAAL;AACD;AACD,UAAI3wB,YAAY,KAAK6wB,eAAL,EAAhB;AACA,UAAI91B,eAAJ;AACA,UAAIkF,kBAAJ;AACA,UAAI,KAAKmwB,aAAL,CAAmBhyB,GAAnB,kBAAJ,EAAuC;AACrC,aAAKuyB,MAAL;AACA1wB,oBAAY,KAAK4wB,eAAL,EAAZ;AACA91B,iBAASkF,UAAUlF,MAAnB;AACD,OAJD,MAIO;AACLkF,oBAAY,IAAZ;AACAlF,iBAASiF,UAAUjF,MAAnB;AACD;AACD,UAAI8E,SAAS,mBAAcE,SAAd,EAAyBC,SAAzB,EAAoCC,SAApC,CAAb;AACAJ,aAAO/E,QAAP,GAAkBA,QAAlB;AACA+E,aAAO9E,MAAP,GAAgBA,MAAhB;AACA,aAAO8E,MAAP;AACD;;;uCAEkB;AACjB,UAAI/E,WAAW,KAAKs1B,aAAL,CAAmBt1B,QAAlC;AACA,WAAK61B,MAAL;AACA,WAAKA,MAAL;AACA,UAAIxwB,QAAQ,KAAKkyB,gBAAL,EAAZ;AACA,WAAK1B,MAAL;AACA,UAAI1xB,OAAO,KAAK4xB,eAAL,EAAX;AACA,UAAIhxB,SAAS,uBAAkBM,KAAlB,EAAyBlB,IAAzB,CAAb;AACAY,aAAO/E,QAAP,GAAkBA,QAAlB;AACA+E,aAAO9E,MAAP,GAAgBkE,KAAKlE,MAArB;AACA,aAAO8E,MAAP;AACD;;;wCAEmB;AAClB,UAAI/E,WAAW,KAAKs1B,aAAL,CAAmBt1B,QAAlC;AACA,WAAK61B,MAAL;AACA,UAAI33B,QAAQ,KAAKs4B,aAAL,EAAZ;AACA,WAAKX,MAAL;AACA,UAAItwB,QAAQ,KAAKgyB,gBAAL,EAAZ;AACA,UAAIpzB,OAAO,KAAK4xB,eAAL,EAAX;AACA,UAAIhxB,SAAS,wBAAmB7G,KAAnB,EAA0BqH,KAA1B,EAAiCpB,IAAjC,CAAb;AACAY,aAAO/E,QAAP,GAAkBA,QAAlB;AACA+E,aAAO9E,MAAP,GAAgBkE,KAAKlE,MAArB;AACA,aAAO8E,MAAP;AACD;;;sCAEiB;AAChB,UAAI/E,WAAW,KAAKs1B,aAAL,CAAmBt1B,QAAlC;AACA,WAAK61B,MAAL;AACA,WAAKA,MAAL;AACA,UAAI5wB,YAAY,KAAKsyB,gBAAL,EAAhB;AACA,WAAK1B,MAAL;AACA,UAAI1xB,OAAO,KAAK4xB,eAAL,EAAX;AACA,UAAIhxB,SAAS,sBAAiBE,SAAjB,EAA4Bd,IAA5B,CAAb;AACAY,aAAO/E,QAAP,GAAkBA,QAAlB;AACA+E,aAAO9E,MAAP,GAAgBkE,KAAKlE,MAArB;AACA,aAAO8E,MAAP;AACD;;;uCAEkB;AACjB,UAAI/E,WAAW,KAAKs1B,aAAL,CAAmBt1B,QAAlC;AACA,WAAK61B,MAAL;AACA,WAAKA,MAAL;AACA,UAAInwB,UAAU,KAAK6xB,gBAAL,EAAd;AACA,WAAK1B,MAAL;AACA,UAAI,KAAKP,aAAL,CAAmBhyB,GAAnB,gBAAJ,EAAqC;AACnC,aAAKuyB,MAAL;AACD;AACD,WAAKA,MAAL;AACA,UAAIxxB,WAAW,KAAK2xB,oBAAL,EAAf;AACA,UAAI/1B,SAAS,KAAKq1B,aAAL,CAAmBt1B,QAAhC;AACA,WAAK61B,MAAL;AACA,UAAI9wB,SAAS,uBAAkBW,OAAlB,EAA2BrB,QAA3B,CAAb;AACAU,aAAO/E,QAAP,GAAkBA,QAAlB;AACA+E,aAAO9E,MAAP,GAAgBA,MAAhB;AACA,aAAO8E,MAAP;AACD;;;oCAEe;AACd,UAAI/E,WAAW,KAAKs1B,aAAL,CAAmBt1B,QAAlC;AACA,WAAK61B,MAAL;AACA,UAAI9wB,eAAJ;AACA,UAAI,KAAKuwB,aAAL,CAAmBhyB,GAAnB,qBAAJ,EAA0C;AACxCyB,iBAAS,KAAKmyB,wBAAL,EAAT;AACD,OAFD,MAEO,IAAI,KAAK5B,aAAL,CAAmBhyB,GAAnB,oBAAJ,EAAyC;AAC9CyB,iBAAS,KAAKyyB,qBAAL,EAAT;AACD,OAFM,MAEA;AACLxvB,aACE,KAAKstB,aAAL,CAAmBt1B,QADrB,EAC+B,KAAKs1B,aAAL,CAAmBr1B,MADlD,EAEE,oBAFF,EAEwB,CACpB,gBAAK,eAAL,EACE,gBAAK,WAAL,CADF,EAEE,gBAAK,UAAL,CAFF,CADoB,EAKpB,gBAAKW,OAAO62B,MAAP,CAAc,KAAKnC,aAAL,CAAmBhyB,GAAjC,CAAL,CALoB,CAFxB;AAUD;AACDyB,aAAO/E,QAAP,GAAkBA,QAAlB;AACA,aAAO+E,MAAP;AACD;;;+CAE0B;AACzB,UAAIe,WAAW,KAAK0wB,aAAL,EAAf;AACA,WAAKX,MAAL;AACA,UAAI9vB,QAAQ,KAAKwxB,gBAAL,EAAZ;AACA,UAAIxyB,SAAS,+BAA0Be,QAA1B,EAAoCC,KAApC,CAAb;AACAhB,aAAO/E,QAAP,GAAkB8F,SAAS9F,QAA3B;AACA+E,aAAO9E,MAAP,GAAgB8F,MAAM9F,MAAtB;AACA,aAAO8E,MAAP;AACD;;;4CAEuB;AACtB,UAAI/E,WAAW,KAAKs1B,aAAL,CAAmBt1B,QAAlC;AACA,WAAK61B,MAAL;AACA,UAAI5vB,YAAY,KAAKiwB,gBAAL,EAAhB;AACA,UAAIjwB,UAAU3I,MAAV,KAAqB,CAAzB,EAA4B;AAC1B0K,aACEhI,QADF,EACY,KAAKs1B,aAAL,CAAmBr1B,MAD/B,EAEE,sCAFF,EAE0C,EAF1C;AAID;AACD,WAAK41B,MAAL;AACA,WAAKA,MAAL;AACA,UAAI9vB,QAAQ,KAAKwxB,gBAAL,EAAZ;AACA,UAAIxyB,SAAS,4BAAuBkB,SAAvB,EAAkCF,KAAlC,CAAb;AACAhB,aAAO/E,QAAP,GAAkBA,QAAlB;AACA+E,aAAO9E,MAAP,GAAgB8F,MAAM9F,MAAtB;AACA,aAAO8E,MAAP;AACD;;;8CAEyB;AAAA;;AACxB,UAAIoB,gBAAgB,KAAK8vB,aAAL,EAApB;AACA,WAAKJ,MAAL;AACA,UAAIz1B,OAAO,KAAKs3B,kBAAL,kCAEE;AAAA,eAAM,MAAKH,gBAAL,EAAN;AAAA,OAFF,CAAX;AAIA,UAAIt3B,SAAS,KAAKq1B,aAAL,CAAmBt1B,QAAhC;AACA,WAAK61B,MAAL;AACA,UAAI9wB,SAAS,8BAAyBoB,aAAzB,EAAwC/F,IAAxC,CAAb;AACA2E,aAAO/E,QAAP,GAAkBmG,cAAcnG,QAAhC;AACA+E,aAAO9E,MAAP,GAAgBA,MAAhB;AACA,aAAO8E,MAAP;AACD;;AAED;;;;oCAEgB;AACd,cAAQ,KAAKuwB,aAAL,CAAmBhyB,GAA3B;AACE;AACE,iBAAO,KAAKq0B,qBAAL,EAAP;AACF;AACE,iBAAO,KAAKC,sBAAL,EAAP;AACF;AACE,iBAAO,KAAKC,kBAAL,EAAP;AACF;AACE,iBAAO,KAAKC,oBAAL,EAAP;AACF;AACE,iBAAO9vB,KACL,KAAKstB,aAAL,CAAmBt1B,QADd,EACwB,KAAKs1B,aAAL,CAAmBr1B,MAD3C,EAEL,oBAFK,EAEiB,CACpB,gBAAK,SAAL,CADoB,EAEpB,gBAAKW,OAAO2C,MAAP,CAAc,KAAK+xB,aAAL,CAAmBhyB,GAAjC,CAAL,CAFoB,CAFjB,CAAP;AAVJ;AAkBD;;;4CAEuB;AACtB,UAAItD,WAAW,KAAKs1B,aAAL,CAAmBt1B,QAAlC;AACA,WAAK61B,MAAL;AACA,UAAI9wB,SAAS,6BAAb;AACA,UAAI9E,SAASD,QAAb;AACA+E,aAAO/E,QAAP,GAAkBA,QAAlB;AACA+E,aAAO9E,MAAP,GAAgBA,MAAhB;AACA,aAAO8E,MAAP;AACD;;;6CAEwB;AACvB,UAAI/E,WAAW,KAAKs1B,aAAL,CAAmBt1B,QAAlC;AACA,UAAIC,SAAS,KAAKq1B,aAAL,CAAmBt1B,QAAhC;AACA,UAAIo0B,cAAc,KAAK6B,aAAL,EAAlB;AACA,UAAI1xB,mBAAJ;AACA,UAAI,KAAK+wB,aAAL,CAAmBhyB,GAAnB,oBAAJ,EAAyC;AACvC,aAAKuyB,MAAL;AACAtxB,qBAAa,KAAK2xB,gBAAL,EAAb;AACAj2B,iBAAS,KAAKq1B,aAAL,CAAmBt1B,QAA5B;AACA,aAAK61B,MAAL;AACD,OALD,MAKO;AACLtxB,qBAAa,EAAb;AACD;AACD,UAAIQ,SAAS,6BAAwBqvB,WAAxB,EAAqC7vB,UAArC,CAAb;AACAQ,aAAO/E,QAAP,GAAkBA,QAAlB;AACA+E,aAAO9E,MAAP,GAAgBA,MAAhB;AACA,aAAO8E,MAAP;AACD;;;yCAEoB;AACnB,UAAI/E,WAAW,KAAKs1B,aAAL,CAAmBt1B,QAAlC;AACA,WAAK61B,MAAL;AACA,UAAItxB,aAAa,KAAK2xB,gBAAL,EAAjB;AACA,UAAI3xB,WAAWjH,MAAX,KAAsB,CAA1B,EAA6B;AAC3B0K,aACEhI,QADF,EACY,KAAKs1B,aAAL,CAAmBr1B,MAD/B,EAEE,mCAFF,EAEuC,EAFvC;AAID;AACD,UAAIA,SAAS,KAAKq1B,aAAL,CAAmBt1B,QAAhC;AACA,WAAK61B,MAAL;AACA,UAAI9wB,SAAS,yBAAoBR,UAApB,CAAb;AACAQ,aAAO/E,QAAP,GAAkBA,QAAlB;AACA+E,aAAO9E,MAAP,GAAgBA,MAAhB;AACA,aAAO8E,MAAP;AACD;;;2CAEsB;AACrB,UAAI/E,WAAW,KAAKs1B,aAAL,CAAmBt1B,QAAlC;AACA,WAAK61B,MAAL;AACA,WAAKA,MAAL;AACA,UAAIrvB,UAAU,KAAK8uB,aAAnB;AACA,WAAKO,MAAL;AACA,UAAI51B,SAAS,KAAKq1B,aAAL,CAAmBt1B,QAAhC;AACA,WAAK61B,MAAL;AACA,UAAI9wB,SAAS,2BAAsByB,OAAtB,CAAb;AACAzB,aAAO/E,QAAP,GAAkBA,QAAlB;AACA+E,aAAO9E,MAAP,GAAgBA,MAAhB;AACA,aAAO8E,MAAP;AACD;;AAED;;;;uCAEmB;AACjB,aAAO,KAAKgzB,kBAAL,CAAwB,CAAxB,CAAP;AACD;;AAED;;;;;;;;;;;;;uCAUmBC,K,EAAO;AACxB,UAAIA,UAAU9C,UAAU53B,MAAxB,EAAgC;AAC9B,eAAO,KAAK26B,cAAL,EAAP;AACD;AACD,cAAQ/C,UAAU8C,KAAV,EAAiBnD,MAAzB;AACE,aAAKL,KAAL;AACE,iBAAO,KAAK0D,uBAAL,CAA6BF,KAA7B,CAAP;AACF,aAAKvD,MAAL;AACE,iBAAO,KAAK0D,wBAAL,CAA8BH,KAA9B,CAAP;AACF,aAAKtD,MAAL;AACE,iBAAO,KAAK0D,wBAAL,CAA8BJ,KAA9B,CAAP;AACF,aAAKrD,MAAL;AACE,iBAAO,KAAK0D,wBAAL,CAA8BL,KAA9B,CAAP;AACF;AACE,gBAAMp4B,MAAM,mBAAN,CAAN;AAVJ;AAYD;;;4CAEuBo4B,K,EAAO;AAC7B,UAAItG,OAAO,KAAKqG,kBAAL,CAAwBC,QAAQ,CAAhC,CAAX;AACA,UAAI9C,UAAU8C,KAAV,EAAiBM,UAAjB,CAA4B,KAAKhD,aAAjC,CAAJ,EAAqD;AACnD,YAAIiD,KAAK,KAAKjD,aAAd;AACA,aAAKD,UAAL;AACA,YAAImD,QAAQ,KAAKT,kBAAL,CAAwBC,QAAQ,CAAhC,CAAZ;;AAEA;AACA,YAAI9C,UAAU8C,KAAV,EAAiBM,UAAjB,CAA4B,KAAKhD,aAAjC,CAAJ,EAAqD;AACnDttB,eACE,KAAKstB,aAAL,CAAmBt1B,QADrB,EAC+B,KAAKs1B,aAAL,CAAmBr1B,MADlD,EAEE,+BAFF,EAEmC,CAC/B,gBAAKW,OAAO2C,MAAP,CAAcg1B,GAAGj1B,GAAjB,CAAL,CAD+B,EAE/B,gBAAK1C,OAAO2C,MAAP,CAAc,KAAK+xB,aAAL,CAAmBhyB,GAAjC,CAAL,CAF+B,CAFnC;AAOD;;AAED,YAAIyB,SAAS,6BACEmwB,UAAU8C,KAAV,EAAiBpwB,YAAjB,CAA8B2wB,EAA9B,CADF,EACqC,CAAC7G,IAAD,EAAO8G,KAAP,CADrC,CAAb;AAGAzzB,eAAO/E,QAAP,GAAkB0xB,KAAK1xB,QAAvB;AACA+E,eAAO9E,MAAP,GAAgBu4B,MAAMv4B,MAAtB;AACA,eAAO8E,MAAP;AACD,OAtBD,MAsBO;AACL,eAAO2sB,IAAP;AACD;AACF;;;6CAEwBsG,K,EAAO;AAC9B,UAAIjzB,SAAS,KAAKgzB,kBAAL,CAAwBC,QAAQ,CAAhC,CAAb;AACA,aAAO9C,UAAU8C,KAAV,EAAiBM,UAAjB,CAA4B,KAAKhD,aAAjC,CAAP,EAAwD;AACtD,YAAIiD,KAAK,KAAKjD,aAAd;AACA,aAAKD,UAAL;AACA,YAAImD,QAAQ,KAAKT,kBAAL,CAAwBC,QAAQ,CAAhC,CAAZ;AACA,YAAIS,UAAU,6BACEvD,UAAU8C,KAAV,EAAiBpwB,YAAjB,CAA8B2wB,EAA9B,CADF,EACqC,CAACxzB,MAAD,EAASyzB,KAAT,CADrC,CAAd;AAGAC,gBAAQz4B,QAAR,GAAmB+E,OAAO/E,QAA1B;AACAy4B,gBAAQx4B,MAAR,GAAiBu4B,MAAMv4B,MAAvB;AACA8E,iBAAS0zB,OAAT;AACD;AACD,aAAO1zB,MAAP;AACD;;;6CAEwBizB,K,EAAO;AAC9B,UAAItG,OAAO,KAAKqG,kBAAL,CAAwBC,QAAQ,CAAhC,CAAX;AACA,UAAI9C,UAAU8C,KAAV,EAAiBM,UAAjB,CAA4B,KAAKhD,aAAjC,CAAJ,EAAqD;AACnD,YAAIiD,KAAK,KAAKjD,aAAd;AACA,aAAKD,UAAL;AACA,YAAImD,QAAQ,KAAKT,kBAAL,CAAwBC,KAAxB,CAAZ,CAHmD,CAGP;AAC5C,YAAIjzB,SAAS,6BACGmwB,UAAU8C,KAAV,EAAiBpwB,YAAjB,CAA8B2wB,EAA9B,CADH,EACsC,CAAC7G,IAAD,EAAO8G,KAAP,CADtC,CAAb;AAGAzzB,eAAO/E,QAAP,GAAkB0xB,KAAK1xB,QAAvB;AACA+E,eAAO9E,MAAP,GAAgBu4B,MAAMv4B,MAAtB;AACA,eAAO8E,MAAP;AACD,OAVD,MAUO;AACL,eAAO2sB,IAAP;AACD;AACF;;;6CAEwBsG,K,EAAO;AAC9B,UAAI9C,UAAU8C,KAAV,EAAiBM,UAAjB,CAA4B,KAAKhD,aAAjC,CAAJ,EAAqD;AACnD,YAAIiD,KAAK,KAAKjD,aAAd;AACA,aAAKD,UAAL;AACA,YAAIqD,QAAQ,KAAKX,kBAAL,CAAwBC,KAAxB,CAAZ,CAHmD,CAGP;AAC5C,YAAIjzB,SAAS,6BACGmwB,UAAU8C,KAAV,EAAiBpwB,YAAjB,CAA8B2wB,EAA9B,CADH,EACsC,CAACG,KAAD,CADtC,CAAb;AAGA3zB,eAAO/E,QAAP,GAAkBu4B,GAAGv4B,QAArB;AACA+E,eAAO9E,MAAP,GAAgBy4B,MAAMz4B,MAAtB;AACA,eAAO8E,MAAP;AACD,OAVD,MAUO;AACL,eAAO,KAAKgzB,kBAAL,CAAwBC,QAAQ,CAAhC,CAAP;AACD;AACF;;AAED;;;;;qCAEiB;AACf,cAAQ,KAAK1C,aAAL,CAAmBhyB,GAA3B;AACE;AACE,iBAAO,KAAKq1B,gCAAL,EAAP;AACF;AACE,iBAAO,KAAKC,wBAAL,EAAP;AACF;AACE,iBAAO,KAAKC,wBAAL,EAAP;AACF;AACE,iBAAO,KAAKC,oCAAL,EAAP;AACF;AACE,iBAAO,KAAKxB,eAAL,EAAP;AACF;AACE,iBAAO,KAAKyB,qBAAL,EAAP;AACF;AACE,iBAAO/wB,KACL,KAAKstB,aAAL,CAAmBt1B,QADd,EACwB,KAAKs1B,aAAL,CAAmBr1B,MAD3C,EAEL,oBAFK,EAEiB,CACpB,gBAAK,YAAL,CADoB,EAEpB,gBAAKW,OAAO2C,MAAP,CAAc,KAAK+xB,aAAL,CAAmBhyB,GAAjC,CAAL,CAFoB,CAFjB,CAAP;AAdJ;AAsBD;;;uDAEkC;AACjC,UAAI01B,KAAK,KAAKxC,aAAL,EAAT;AACA,UAAIzxB,eAAJ;AACA,UAAI9E,eAAJ;AACA,UAAI,KAAKq1B,aAAL,CAAmBhyB,GAAnB,oBAAJ,EAAyC;AACvC,aAAKuyB,MAAL;AACA,YAAIz1B,OAAO,KAAK64B,mBAAL,iBAAX;AACAl0B,iBAAS,6BAAwBi0B,EAAxB,EAA4B54B,IAA5B,CAAT;AACAH,iBAAS,KAAKq1B,aAAL,CAAmBt1B,QAA5B;AACA,aAAK61B,MAAL;AACD,OAND,MAMO;AACL9wB,iBAAS,yBAAoBi0B,EAApB,CAAT;AACA/4B,iBAAS+4B,GAAG/4B,MAAZ;AACD;AACD8E,aAAO/E,QAAP,GAAkBg5B,GAAGh5B,QAArB;AACA+E,aAAO9E,MAAP,GAAgBA,MAAhB;AACA,aAAO8E,MAAP;AACD;;;+CAE0B;AACzB,UAAI6B,SAAS,KAAK0uB,aAAlB;AACA,WAAKO,MAAL;AACA,UAAI9wB,SAAS,+BAA0B6B,MAA1B,CAAb;AACA7B,aAAO/E,QAAP,GAAkB4G,OAAO5G,QAAzB;AACA+E,aAAO9E,MAAP,GAAgB2G,OAAO3G,MAAvB;AACA,aAAO8E,MAAP;AACD;;;+CAE0B;AACzB,UAAIjC,SAAS,KAAKwyB,aAAlB;AACA,WAAKO,MAAL;AACA,UAAI9wB,SAAS,+BAA0BjC,MAA1B,CAAb;AACAiC,aAAO/E,QAAP,GAAkB8C,OAAO9C,QAAzB;AACA+E,aAAO9E,MAAP,GAAgB6C,OAAO7C,MAAvB;AACA,aAAO8E,MAAP;AACD;;AAED;;;;;;;;;;;;;;;;;;;;2DAiBuC;AACrC,UAAIrI,kBAAkB,KAAKu5B,aAAL,EAAtB;AACA,UAAI,KAAKX,aAAL,CAAmBhyB,GAAnB,oBAAJ,EAAyC;AACvC;AACA,YAAIyB,SAAS,0BAAqBrI,eAArB,EAAsC,EAAtC,CAAb;AACAqI,eAAO/E,QAAP,GAAkBtD,gBAAgBsD,QAAlC;AACA+E,eAAO9E,MAAP,GAAgBvD,gBAAgBuD,MAAhC;AACA,eAAO8E,MAAP;AACD;AACD,WAAK8wB,MAAL;AACA,UAAI,KAAKP,aAAL,CAAmBhyB,GAAnB,oBAAJ,EAAyC;AACvC;;AAEA,YAAIyB,UAAS,0BAAqBrI,eAArB,EAAsC,EAAtC,CAAb;AACA,YAAIuD,SAAS,KAAKq1B,aAAL,CAAmBt1B,QAAhC;AACA,aAAK61B,MAAL;AACA9wB,gBAAO/E,QAAP,GAAkBtD,gBAAgBsD,QAAlC;AACA+E,gBAAO9E,MAAP,GAAgBA,MAAhB;AACA,eAAO8E,OAAP;AACD;AACD,UAAIW,UAAU,KAAK6xB,gBAAL,EAAd;AACA,cAAQ,KAAKjC,aAAL,CAAmBhyB,GAA3B;AACE;AACE,cAAIoC,QAAQpC,GAAR,wBAAJ,EAAoC;AAClC0E,iBACE,KAAKstB,aAAL,CAAmBt1B,QADrB,EAC+B,KAAKs1B,aAAL,CAAmBr1B,MADlD,EAEE,oBAFF,EAEwB,CACpB,gBAAK,QAAL,CADoB,EAEpB,gBAAK,QAAL,CAFoB,CAFxB;AAOD;AACD,iBAAO,KAAKi5B,eAAL,CAAqBx8B,eAArB,EAAsCgJ,QAAQ/H,YAA9C,CAAP;AACF;AACE,iBAAO,KAAKw7B,qBAAL,CAA2Bz8B,eAA3B,EAA4CgJ,OAA5C,CAAP;AACF,4BAAc;AACZ;;;AAGA,iBAAOsC,KACLtL,gBAAgBsD,QADX,EACqBtD,gBAAgBuD,MADrC,EAEL,oBAFK,EAEiB,CACpB,gBAAK,YAAL,CADoB,EAEpB,gBAAK,gBAAL,CAFoB,CAFjB,CAAP;AAOF;AACE,cAAI9D,iBAAJ;AACA,cAAIuJ,QAAQpC,GAAR,wBAAJ,EAAoC;AAClCnH,uBAAW,gBAAK,eAAL,EAAsB,CACpB,gBAAK,QAAL,CADoB,EAEpB,gBAAK,QAAL,CAFoB,CAAtB,CAAX;AAID,WALD,MAKO;AACLA,uBAAW,gBAAK,QAAL,CAAX;AACD;AACD,iBAAO6L,KACLtL,gBAAgBsD,QADX,EACqBtD,gBAAgBuD,MADrC,EAEL,oBAFK,EAEiB,CACpB9D,QADoB,EAEpB,gBAAKyE,OAAO2C,MAAP,CAAc,KAAK+xB,aAAL,CAAmBhyB,GAAjC,CAAL,CAFoB,CAFjB,CAAP;AAnCJ;AA2CD;;AAED;;;;;;;;;;oCAOgB5G,e,EAAiB08B,U,EAAY;AAAA;;AAC3C;AACA,WAAKvD,MAAL;AACA,UAAIwD,SAAS,KAAK9B,gBAAL,EAAb;AACA,UAAI+B,gBAAgB,yBAAoBF,UAApB,EAAgCC,MAAhC,CAApB;AACAC,oBAAct5B,QAAd,GAAyBo5B,WAAWp5B,QAApC;AACAs5B,oBAAcr5B,MAAd,GAAuBo5B,OAAOp5B,MAA9B;AACA;AACA,UAAIqH,gBAAgB,KAAKiyB,0BAAL,kCACqB,CAACD,aAAD,CADrB,EAEE;AAAA,eAAM,OAAKE,kBAAL,EAAN;AAAA,OAFF,CAApB;AAIA;AACA,UAAIv5B,SAAS,KAAKq1B,aAAL,CAAmBt1B,QAAhC;AACA,WAAK61B,MAAL;AACA;AACA,UAAI9wB,SAAS,0BAAqBrI,eAArB,EAAsC4K,aAAtC,CAAb;AACAvC,aAAO/E,QAAP,GAAkBtD,gBAAgBsD,QAAlC;AACA+E,aAAO9E,MAAP,GAAgBA,MAAhB;AACA,aAAO8E,MAAP;AACD;;AAED;;;;;;;;;;0CAOsBrI,e,EAAiBgL,Q,EAAU;AAAA;;AAC/C;AACA,WAAKmuB,MAAL;AACA;AACA,UAAIvuB,gBAAgB,KAAKowB,kBAAL,kCAEE;AAAA,eAAM,OAAK8B,kBAAL,EAAN;AAAA,OAFF,CAApB;AAIA;AACA,UAAIv5B,SAAS,KAAKq1B,aAAL,CAAmBt1B,QAAhC;AACA,WAAK61B,MAAL;AACA;AACA,UAAI9wB,SAAS,gCACKrI,eADL,EACsBgL,QADtB,EACgCJ,aADhC,CAAb;AAGAvC,aAAO/E,QAAP,GAAkBtD,gBAAgBsD,QAAlC;AACA+E,aAAO9E,MAAP,GAAgBA,MAAhB;AACA,aAAO8E,MAAP;AACD;;AAED;;;;;;;;;;4CAOwB;AACtB,UAAI/E,WAAW,KAAKs1B,aAAL,CAAmBt1B,QAAlC;AACA,WAAK61B,MAAL;AACA,UAAI,KAAKP,aAAL,CAAmBhyB,GAAnB,oBAAJ,EAAyC;AACvC,eAAO,KAAKm2B,uBAAL,CAA6Bz5B,QAA7B,EAAuC,EAAvC,CAAP;AACD;AACD,UAAIiH,QAAQ,KAAKswB,gBAAL,EAAZ;AACA,cAAQ,KAAKjC,aAAL,CAAmBhyB,GAA3B;AACE;AACE,iBAAO,KAAKm2B,uBAAL,CAA6Bz5B,QAA7B,EAAuC,CAACiH,KAAD,CAAvC,CAAP;AACF;AACE,iBAAO,KAAKyyB,eAAL,CAAqB15B,QAArB,EAA+BiH,KAA/B,EAAsC,IAAtC,CAAP;AACF;AACE,eAAK4uB,MAAL;AACA,cAAI3uB,SAAS,KAAKqwB,gBAAL,EAAb;AACA,kBAAQ,KAAKjC,aAAL,CAAmBhyB,GAA3B;AACE;AACA;AACE,qBAAO,KAAKm2B,uBAAL,CAA6Bz5B,QAA7B,EAAuC,CAACiH,KAAD,EAAQC,MAAR,CAAvC,CAAP;AACF;AACE,qBAAO,KAAKwyB,eAAL,CAAqB15B,QAArB,EAA+BiH,KAA/B,EAAsCC,MAAtC,CAAP;AACF;AACE,qBAAOc,KACL,KAAKstB,aAAL,CAAmBt1B,QADd,EACwB,KAAKs1B,aAAL,CAAmBr1B,MAD3C,EAEL,oBAFK,EAEiB,CACpB,gBAAK,eAAL,EAAsB,CACpB,gBAAK,SAAL,CADoB,EAEpB,gBAAK,SAAL,CAFoB,EAGpB,gBAAK,UAAL,CAHoB,CAAtB,CADoB,EAMpB,gBAAKW,OAAO2C,MAAP,CAAc,KAAK+xB,aAAL,CAAmBhyB,GAAjC,CAAL,CANoB,CAFjB,CAAP;AAPJ;AAmBF;AACE,iBAAO0E,KACL,KAAKstB,aAAL,CAAmBt1B,QADd,EACwB,KAAKs1B,aAAL,CAAmBr1B,MAD3C,EAEL,oBAFK,EAEiB,CACpB,gBAAK,eAAL,EAAsB,CACpB,gBAAK,SAAL,CADoB,EAEpB,gBAAK,SAAL,CAFoB,EAGpB,gBAAK,UAAL,CAHoB,CAAtB,CADoB,EAMpB,gBAAKW,OAAO2C,MAAP,CAAc,KAAK+xB,aAAL,CAAmBhyB,GAAjC,CAAL,CANoB,CAFjB,CAAP;AA5BJ;AAwCD;;AAED;;;;;;;;4CAKwBtD,Q,EAAU25B,M,EAAQ;AAAA;;AACxC,UAAI5yB,WAAW,KAAKwyB,0BAAL,kCACqBI,MADrB,EAEE;AAAA,eAAM,OAAKpC,gBAAL,EAAN;AAAA,OAFF,CAAf;AAIA,UAAIt3B,SAAS,KAAKq1B,aAAL,CAAmBt1B,QAAhC;AACA,WAAK61B,MAAL;AACA,UAAI9wB,SAAS,qBAAgBgC,QAAhB,CAAb;AACAhC,aAAO/E,QAAP,GAAkBA,QAAlB;AACA+E,aAAO9E,MAAP,GAAgBA,MAAhB;AACA,aAAO8E,MAAP;AACD;;AAED;;;;;;;oCAIgB/E,Q,EAAUiH,K,EAAOC,M,EAAQ;AACvC,WAAK2uB,MAAL;AACA,UAAI1uB,OAAO,KAAKowB,gBAAL,EAAX;AACA,UAAIt3B,SAAS,KAAKq1B,aAAL,CAAmBt1B,QAAhC;AACA,WAAK61B,MAAL;AACA,UAAI9wB,SAAS,sBAAiBkC,KAAjB,EAAwBC,MAAxB,EAAgCC,IAAhC,CAAb;AACApC,aAAO/E,QAAP,GAAkBA,QAAlB;AACA+E,aAAO9E,MAAP,GAAgBA,MAAhB;AACA,aAAO8E,MAAP;AACD;;AAED;;;;;;;;sCAKkB;AAChB,UAAI/E,WAAW,KAAKs1B,aAAL,CAAmBt1B,QAAlC;AACA,WAAK61B,MAAL;AACA,UAAI+D,iBAAiB,KAAKX,mBAAL,iBAArB;AACA,UAAIh5B,SAAS,KAAKq1B,aAAL,CAAmBt1B,QAAhC;AACA,WAAK61B,MAAL;;AAEA,UAAI9wB,eAAJ;AACA,UAAI60B,eAAet8B,MAAf,KAA0B,CAA9B,EAAiC;AAC/ByH,iBAAS60B,eAAe,CAAf,CAAT;AACD,OAFD,MAEO;AACL70B,iBAAS,sBAAiB60B,cAAjB,CAAT;AACD;AACD70B,aAAO/E,QAAP,GAAkBA,QAAlB;AACA+E,aAAO9E,MAAP,GAAgBA,MAAhB;AACA,aAAO8E,MAAP;AACD;;AAED;;;;2CAEuB;AACrB,UAAIV,WAAW,EAAf;AACA,aAAO,KAAKixB,aAAL,CAAmBhyB,GAAnB,oBAAP,EAA4C;AAC1Ce,iBAASpB,IAAT,CAAc,KAAK42B,kBAAL,EAAd;AACD;AACD,aAAOx1B,QAAP;AACD;;;yCAEoB;AACnB,UAAIuB,UAAU,KAAKk0B,aAAL,EAAd;AACA,WAAKjE,MAAL;AACA,UAAI1xB,OAAO,KAAK4xB,eAAL,EAAX;AACA,UAAIhxB,SAAS,yBAAoBa,OAApB,EAA6BzB,IAA7B,CAAb;AACAY,aAAO/E,QAAP,GAAkB4F,QAAQ5F,QAA1B;AACA+E,aAAO9E,MAAP,GAAgBkE,KAAKlE,MAArB;AACA,aAAO8E,MAAP;AACD;;AAED;;;;yCAEqB;AACnB,UAAIpI,YAAY,KAAK65B,aAAL,EAAhB;AACA,WAAKX,MAAL;AACA,UAAI9vB,QAAQ,KAAKwxB,gBAAL,EAAZ;AACA,UAAIxyB,SAAS,yBAAoBpI,SAApB,EAA+BoJ,KAA/B,CAAb;AACAhB,aAAO/E,QAAP,GAAkBrD,UAAUqD,QAA5B;AACA+E,aAAO9E,MAAP,GAAgB8F,MAAM9F,MAAtB;AACA,aAAO8E,MAAP;AACD;;AAED;;AAEA;;;;iCACa;AACX,WAAKuwB,aAAL,GAAqB,KAAKF,MAAL,CAAY2E,SAAZ,EAArB;AACD;;AAED;;;;;2BAEOC,Q,EAAU;AACf,UAAI,KAAK1E,aAAL,CAAmBhyB,GAAnB,KAA2B02B,QAA/B,EAAyC;AACvChyB,aACE,KAAKstB,aAAL,CAAmBt1B,QADrB,EAC+B,KAAKs1B,aAAL,CAAmBr1B,MADlD,EAEE,oBAFF,EAEwB,CACpB,gBAAKW,OAAO2C,MAAP,CAAcy2B,QAAd,CAAL,CADoB,EAEpB,gBAAKp5B,OAAO2C,MAAP,CAAc,KAAK+xB,aAAL,CAAmBhyB,GAAjC,CAAL,CAFoB,CAFxB;AAOD;AACD,WAAK+xB,UAAL;AACD;;AAED;;;;;;;;mCAKe2E,Q,EAAUC,O,EAAS;AAChC,UAAI,KAAK3E,aAAL,CAAmBhyB,GAAnB,KAA2B02B,QAA/B,EAAyC;AACvChyB,aACE,KAAKstB,aAAL,CAAmBt1B,QADrB,EAC+B,KAAKs1B,aAAL,CAAmBr1B,MADlD,EAEE,oBAFF,EAEwB,CACpB,gBAAK,eAAL,EACEg6B,QAAQl7B,GAAR,CAAY;AAAA,iBAAO,gBAAK6B,OAAO2C,MAAP,CAAcD,GAAd,CAAL,CAAP;AAAA,SAAZ,CADF,CADoB,EAIpB,gBAAK1C,OAAO2C,MAAP,CAAc,KAAK+xB,aAAL,CAAmBhyB,GAAjC,CAAL,CAJoB,CAFxB;AASD;AACD,WAAK+xB,UAAL;AACD;;AAED;;;;;;;uCAImB6E,c,EAAgBC,S,EAAWC,Y,EAAc;AAC1D,UAAI,KAAK9E,aAAL,CAAmBhyB,GAAnB,KAA2B42B,cAA/B,EAA+C;AAC7C,eAAO,EAAP,CAD6C,CAClC;AACZ;AACD,UAAIjzB,QAAQmzB,cAAZ;AACA,aAAO,KAAKb,0BAAL,CACEW,cADF,EACkBC,SADlB,EAC6B,CAAClzB,KAAD,CAD7B,EACsCmzB,YADtC,CAAP;AAGD;;AAED;;;;;;;;+CAK2BF,c,EAAgBC,S,EAAWR,M,EAAQS,Y,EAAc;AAC1E,UAAIprB,OAAO2qB,MAAX;AACA,aAAO,KAAKrE,aAAL,CAAmBhyB,GAAnB,KAA2B62B,SAAlC,EAA6C;AAC3C,aAAKtE,MAAL,CAAYsE,SAAZ;AACAnrB,aAAK/L,IAAL,CAAUm3B,cAAV;AACD;AACD,UAAI,KAAK9E,aAAL,CAAmBhyB,GAAnB,KAA2B42B,cAA/B,EAA+C;AAC7ClyB,aACE,KAAKstB,aAAL,CAAmBt1B,QADrB,EAC+B,KAAKs1B,aAAL,CAAmBr1B,MADlD,EAEE,oBAFF,EAEwB,CACpB,gBAAK,eAAL,EAAsB,CACpB,gBAAKW,OAAO2C,MAAP,CAAc42B,SAAd,CAAL,CADoB,EAEpB,gBAAKv5B,OAAO2C,MAAP,CAAc22B,cAAd,CAAL,CAFoB,CAAtB,CADoB,EAKpB,gBAAKt5B,OAAO2C,MAAP,CAAc,KAAK+xB,aAAL,CAAmBhyB,GAAjC,CAAL,CALoB,CAFxB;AAUD;AACD,aAAO0L,IAAP;AACD;;;oCAEe;AACd,UAAIqrB,UAAU,KAAK/E,aAAnB;AACA,WAAKO,MAAL;AACA,aAAOwE,OAAP;AACD;;;oCAEe;AACd,UAAIC,UAAU,KAAKhF,aAAnB;AACA,WAAKO,MAAL;AACA,aAAOyE,OAAP;AACD;;;uCAEkB;AAAA;;AACjB,aAAO,KAAK5C,kBAAL,kCACqB;AAAA,eAAM,OAAKlB,aAAL,EAAN;AAAA,OADrB,CAAP;AAGD;;AAED;;;;;wCAEoB0D,c,EAAgB;AAAA;;AAClC,aAAO,KAAKxC,kBAAL,CACEwC,cADF,kBAC2B;AAAA,eAAM,OAAK3C,gBAAL,EAAN;AAAA,OAD3B,CAAP;AAGD;;;;;;;;;;;;;;;;;;;;;;AClsCH;;AACA;;AACA;;AACA;;;;AAeA,SAASgD,YAAT,CAAsBpmB,GAAtB,EAA2B;AACzB,SAAOA,QAAQ,GAAR,IACAA,QAAQ,IADR,IAEAA,QAAQ,IAFR,IAGAA,QAAQ,IAHf;AAID;;AAED,SAASqmB,OAAT,CAAiBrmB,GAAjB,EAAsB;AACpB,SAAO,OAAOA,GAAP,IAAcA,OAAO,GAA5B;AACD;;AAED;;;;;AAKA,SAASsmB,OAAT,CAAiBtmB,GAAjB,EAAsB;AACpB,SAAOA,IAAIumB,WAAJ,CAAgBvmB,GAAhB,MAAyBA,IAAI0c,WAAJ,EAAhC;AACD;;AAED;;AAEA,SAAS8J,OAAT,CAAiBxmB,GAAjB,EAAsB;AACpB,SAAOsmB,QAAQtmB,GAAR,KAAgBA,IAAIumB,WAAJ,OAAsBvmB,GAA7C;AACD;;AAED;;AAEA,SAASymB,OAAT,CAAiBzmB,GAAjB,EAAsB;AACpB,SAAOsmB,QAAQtmB,GAAR,KAAgBA,IAAI0c,WAAJ,OAAsB1c,GAA7C;AACD;;AAED,SAAS0mB,OAAT,CAAiB1mB,GAAjB,EAAsB;AACpB,SAAOsmB,QAAQtmB,GAAR,KAAgBqmB,QAAQrmB,GAAR,CAAhB,IAAgCA,QAAQ,GAAxC,IAA+CA,QAAQ,GAA9D;AACD;;AAED,IAAI2mB,WAAW;AACb,6BADa;AAEb,qCAFa;AAGb,iCAHa;AAIb,+BAJa;AAKb,2BALa;AAMb;AACA,mBAPa;AAQb,uBARa;AASb,uBATa;AAUb,2BAVa;AAWb,6BAXa;AAYb,mBAZa;AAab,yBAba;AAcb,2BAda;AAeb,0BAfa;AAgBb,mBAhBa;AAiBb;AACA,qBAlBa;AAmBb;AACA,qBApBa;AAqBb,qBArBa;AAsBb,qBAtBa;AAuBb;AACA,uBAxBa;AAyBb,mBAzBa;AA0Bb,2BA1Ba;AA2Bb,6BA3Ba;AA4Bb,uBA5Ba;AA6Bb,yBA7Ba;AA8Bb;AACA;AA/Ba,CAAf;;AAkCA;AACAA,SAAS,gBAAK,cAAL,CAAT;;AAEA;AACA,IAAMC,UAAU;AACd;AACA,CAAC,GAAD,kBAFc,EAGd,CAAC,GAAD,kBAHc,EAId,CAAC,GAAD,kBAJc,EAKd,CAAC,GAAD,kBALc,EAMd,CAAC,GAAD,kBANc,EAMM;AACpB,CAAC,GAAD,kBAPc,EAQd,CAAC,GAAD,iBARc,EASd,CAAC,GAAD,qBATc;AAUd;AACA,CAAC,IAAD,iBAXc;AAYd;AACA,CAAC,IAAD,kBAbc;AAcd;AACA,CAAC,IAAD,eAfc,EAgBd,CAAC,IAAD,cAhBc;AAiBd;AACA,CAAC,IAAD,gBAlBc,EAkBM;AACpB,CAAC,GAAD,gBAnBc,EAmBM;AACpB;AACA,CAAC,IAAD,iBArBc,EAqBM;AACpB;AACA,CAAC,IAAD,cAvBc,EAwBd,CAAC,IAAD,cAxBc,EAyBd,CAAC,IAAD,cAzBc,EA0Bd,CAAC,IAAD,cA1Bc,EA2Bd,CAAC,GAAD,cA3Bc,EA4Bd,CAAC,GAAD,cA5Bc;AA6Bd;AACA,CAAC,IAAD,kBA9Bc,EA+Bd,CAAC,GAAD,gBA/Bc,EAgCd,CAAC,GAAD,iBAhCc,EAiCd,CAAC,GAAD,iBAjCc,EAkCd,CAAC,GAAD,eAlCc,CAAhB;;AAqCA,SAASC,aAAT,CAAuBl4B,MAAvB,EAA+B;AAC7B,SAAOA,OAAOxF,MAAP,IAAiB,CAAjB,IAAsBwF,OAAO,CAAP,MAAc,GAA3C;AACD;;AAED,SAASkF,IAAT,CAAchI,QAAd,EAAwBC,MAAxB,EAAgCE,MAAhC,EAAwCC,IAAxC,EAA8C;AAC5C,QAAM,+BAAmBJ,QAAnB,EAA6BC,MAA7B,EAAqCE,MAArC,EAA6CC,IAA7C,CAAN;AACD;;AAED;;;;;;;;;;;;;;IAaa66B,K,WAAAA,K;AAEX,iBAAY3kB,KAAZ,EAAmB;AAAA;;AACjB,SAAK4kB,gBAAL,GAAwB,4BAAoB5kB,KAApB,CAAxB;AACA,SAAK6kB,OAAL,GAAe,KAAKD,gBAAL,CAAsBE,eAAtB,EAAf;AACA,SAAKC,SAAL,GAAiB,EAAjB;AACD;;AAED;;;;;gCACY;AACV,UAAI,CAAC,KAAKC,cAAL,EAAL,EAA4B;AAC1B,eAAO,+BAAiB,IAAjB,EAAuB,KAAKH,OAA5B,EAAqC,KAAKA,OAA1C,CAAP;AACD;AACD,UAAIX,QAAQ,KAAKW,OAAL,CAAatlB,IAAb,EAAR,CAAJ,EAAkC;AAChC,YAAI7V,WAAW,KAAKm7B,OAApB;AACA,YAAIp1B,QAAQ,KAAKw1B,gBAAL,CAAsBf,OAAtB,CAAZ;AACA,YAAIv6B,SAAS,KAAKk7B,OAAlB;AACA,YAAIH,cAAcj1B,KAAd,KAAwBA,MAAMzI,MAAN,GAAe,CAA3C,EAA8C;AAC5C,iBAAO0K,KACLhI,QADK,EACKC,MADL,EAEL,iDAFK,EAE8C,EAF9C,CAAP;AAID;AACD,eAAO,+BAAiB8F,KAAjB,EAAwB/F,QAAxB,EAAkCC,MAAlC,CAAP;AACD,OAXD,MAWO,IAAI46B,QAAQ,KAAKM,OAAL,CAAatlB,IAAb,EAAR,CAAJ,EAAkC;AACvC,YAAI7V,YAAW,KAAKm7B,OAApB;AACA,YAAIp1B,SAAQ,KAAKw1B,gBAAL,CAAsBV,OAAtB,CAAZ;AACA,YAAI56B,UAAS,KAAKk7B,OAAlB;AACA,YAAIp1B,UAAS+0B,QAAb,EAAuB;AACrB,iBAAO,iBAAUA,SAAS/0B,MAAT,CAAV,EAA2BA,MAA3B,EAAkC/F,SAAlC,EAA4CC,OAA5C,CAAP;AACD,SAFD,MAEO,IAAI06B,QAAQ50B,OAAM,CAAN,CAAR,CAAJ,EAAuB;AAC5B,iBAAO,mCAAqBA,MAArB,EAA4B/F,SAA5B,EAAsCC,OAAtC,CAAP;AACD,SAFM,MAEA,IAAI26B,QAAQ70B,OAAM,CAAN,CAAR,CAAJ,EAAuB;AAC5B,iBAAO,mCAAqBA,MAArB,EAA4B/F,SAA5B,EAAsCC,OAAtC,CAAP;AACD,SAFM,MAEA;AACL,iBAAO+H,KACLhI,SADK,EACKC,OADL,EAEL,iDAFK,EAE8C,EAF9C,CAAP;AAID;AACF,OAhBM,MAgBA,IAAI,KAAKk7B,OAAL,CAAatlB,IAAb,OAAwB,GAA5B,EAAiC;AACtC,eAAO,KAAK2lB,mBAAL,EAAP;AACD,OAFM,MAEA;AACL,eAAO,KAAKC,WAAL,EAAP;AACD;AACF;;AAED;;;;;+BAEW;AACT,aAAO,KAAKJ,SAAZ;AACD;;AAED;;;;;qCAEiB;AACf,eAAS;AACP,aAAKK,4BAAL;AACA,YAAI,CAAC,KAAKP,OAAL,CAAaQ,GAAb,EAAL,EAAyB;AACvB;AACD;AACD,YAAI,KAAKT,gBAAL,CAAsBU,SAAtB,EAAJ,EAAuC;AACrC,eAAKV,gBAAL,CAAsBW,QAAtB;AACA,eAAKV,OAAL,GAAe,KAAKD,gBAAL,CAAsBE,eAAtB,EAAf;AACD,SAHD,MAGO;AACL,iBAAO,KAAP;AACD;AACF;AACD,aAAO,IAAP;AACD;;AAED;;;;;qCAEiBn2B,S,EAAW;AAC1B,UAAIF,SAAS,EAAb;AACA,aAAO,CAAC,KAAKo2B,OAAL,CAAaQ,GAAb,EAAR,EAA4B;AAC1B,YAAI,CAAC12B,UAAU,KAAKk2B,OAAL,CAAatlB,IAAb,EAAV,CAAL,EAAqC;AACnC;AACD;AACD9Q,eAAO9B,IAAP,CAAY,KAAKk4B,OAAL,CAAatlB,IAAb,EAAZ;AACA,aAAKslB,OAAL,GAAe,KAAKA,OAAL,CAAaplB,gBAAb,EAAf;AACD;AACD,aAAOhR,OAAOxH,IAAP,CAAY,EAAZ,CAAP;AACD;;AAED;;;;;0CAEsB;AACpB,UAAIyC,WAAW,KAAKm7B,OAApB;AACA,UAAIp2B,SAAS,EAAb;AACA,WAAKo2B,OAAL,GAAe,KAAKA,OAAL,CAAaplB,gBAAb,EAAf;AACA,aAAO,CAAC,KAAKolB,OAAL,CAAaQ,GAAb,EAAR,EAA4B;AAC1B,YAAIzR,IAAI,KAAKiR,OAAL,CAAatlB,IAAb,EAAR;AACA,YAAIqU,MAAM,GAAV,EAAe;AACb,eAAKiR,OAAL,GAAe,KAAKA,OAAL,CAAaplB,gBAAb,EAAf;AACA,iBAAO,kCAAoBhR,OAAOxH,IAAP,CAAY,EAAZ,CAApB,EAAqCyC,QAArC,EAA+C,KAAKm7B,OAApD,CAAP;AACD,SAHD,MAGO,IAAIjR,MAAM,IAAV,EAAgB;AACrB,eAAKiR,OAAL,GAAe,KAAKA,OAAL,CAAaplB,gBAAb,EAAf;AACA,cAAI,KAAKolB,OAAL,CAAaQ,GAAb,EAAJ,EAAwB;AACtB;AACD;AACD,cAAIG,KAAK,KAAKX,OAAL,CAAatlB,IAAb,EAAT;AACA,eAAKslB,OAAL,GAAe,KAAKA,OAAL,CAAaplB,gBAAb,EAAf;AACA,kBAAQ+lB,EAAR;AACE,iBAAK,GAAL;AACE/2B,qBAAO9B,IAAP,CAAY,MAAZ;AACA;AACF,iBAAK,GAAL;AACE8B,qBAAO9B,IAAP,CAAY,IAAZ;AACA;AACF,iBAAK,GAAL;AACE8B,qBAAO9B,IAAP,CAAY,IAAZ;AACA;AACF,iBAAK,GAAL;AACE8B,qBAAO9B,IAAP,CAAY,IAAZ;AACA;AACF,iBAAK,GAAL;AACE8B,qBAAO9B,IAAP,CAAY,IAAZ;AACA;AACF,iBAAK,GAAL;AACE8B,qBAAO9B,IAAP,CAAY,IAAZ;AACA;AACF,iBAAK,GAAL;AACE8B,qBAAO9B,IAAP,CAAY,MAAZ;AACA;AACF;AACE8B,qBAAO9B,IAAP,CAAY64B,EAAZ;AACA;AAxBJ;AA0BD,SAjCM,MAiCA;AACL/2B,iBAAO9B,IAAP,CAAYinB,CAAZ;AACA,eAAKiR,OAAL,GAAe,KAAKA,OAAL,CAAaplB,gBAAb,EAAf;AACD;AACF;AACD,aAAO/N,KAAKhI,QAAL,EAAe,KAAKm7B,OAApB,EAA6B,0BAA7B,EAAyD,EAAzD,CAAP;AACD;;AAED;;;;kCACc;AAAA;AAAA;AAAA;;AAAA;AACZ,6BAA0BJ,OAA1B,8HAAmC;AAAA;AAAA,cAAzB9+B,MAAyB;AAAA,cAAjBqH,GAAiB;;AACjC,cAAI,KAAK63B,OAAL,CAAaY,UAAb,CAAwB9/B,MAAxB,CAAJ,EAAqC;AACnC,gBAAI+D,WAAW,KAAKm7B,OAApB;AACA,iBAAKA,OAAL,GAAe,KAAKA,OAAL,CAAaa,aAAb,CAA2B//B,MAA3B,CAAf;AACA,gBAAIgE,SAAS,KAAKk7B,OAAlB;AACA,mBAAO,iBAAU73B,GAAV,EAAerH,MAAf,EAAuB+D,QAAvB,EAAiCC,MAAjC,CAAP;AACD;AACF;AARW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASZ,aAAO+H,KACL,KAAKmzB,OADA,EACS,KAAKA,OADd,EAEL,eAFK,EAEY,CAAC,KAAKA,OAAL,CAAatlB,IAAb,EAAD,CAFZ,CAAP;AAID;;;mDAE8B;AAC7B,aAAO,KAAKomB,iBAAL,MAA4B,KAAKC,eAAL,EAAnC,EAA2D;AACzD;AACD;AACF;;;wCAEmB;AAClB,UAAI,CAAC,KAAKf,OAAL,CAAaQ,GAAb,EAAD,IAAuBpB,aAAa,KAAKY,OAAL,CAAatlB,IAAb,EAAb,CAA3B,EAA8D;AAC5D,aAAKslB,OAAL,GAAe,KAAKA,OAAL,CAAaplB,gBAAb,EAAf;AACA,eAAO,IAAP;AACD,OAHD,MAGO;AACL,eAAO,KAAP;AACD;AACF;;AAED;;;;sCACkB;AAChB,UAAI,KAAKomB,uBAAL,EAAJ,EAAoC;AAClC,aAAKC,wBAAL;AACA,eAAO,IAAP;AACD,OAHD,MAGO,IAAI,KAAKjB,OAAL,CAAaY,UAAb,CAAwB,KAAxB,CAAJ,EAAoC;AACzC,YAAI/7B,WAAW,KAAKm7B,OAApB;AACA,aAAKkB,eAAL,CAAqBr8B,QAArB,EACqB,KAAKs8B,oBAAL,CAA0B,IAA1B,EAAgC,IAAhC,EAAsC,GAAtC,CADrB;AAEA,eAAO,IAAP;AACD,OALM,MAKA,IAAI,KAAKnB,OAAL,CAAaY,UAAb,CAAwB,IAAxB,CAAJ,EAAmC;AACxC,aAAKQ,uBAAL,CAA6B,IAA7B,EAAmC,IAAnC;AACA,eAAO,IAAP;AACD,OAHM,MAGA,IAAI,KAAKpB,OAAL,CAAaY,UAAb,CAAwB,IAAxB,CAAJ,EAAmC;AACxC,aAAKQ,uBAAL,CAA6B,IAA7B,EAAmC,IAAnC;AACA,eAAO,IAAP;AACD,OAHM,MAGA;AACL,eAAO,KAAP;AACD;AACF;;AAED;;;;8CAC0B;AACxB,aAAO,KAAKpB,OAAL,CAAaY,UAAb,CAAwB,IAAxB,KACA,KAAKZ,OAAL,CAAaY,UAAb,CAAwB,IAAxB,CADA,IAEA,KAAKZ,OAAL,CAAaY,UAAb,CAAwB,GAAxB,CAFP;AAGD;;AAED;;;;+CAC2B;AACzB,aAAO,CAAC,KAAKZ,OAAL,CAAaQ,GAAb,EAAR,EAA4B;AAC1B,aAAKR,OAAL,GAAe,KAAKA,OAAL,CAAaplB,gBAAb,EAAf;AACA,YAAI,KAAKolB,OAAL,CAAatlB,IAAb,OAAwB,IAA5B,EAAkC;AAChC;AACD;AACF;AACF;;AAED;;;;;4CAEwB6b,I,EAAM8G,K,EAAO;AACnC,UAAIgE,UAAU,CAAd;AACA,UAAIx8B,WAAW,KAAKm7B,OAApB;AACA,aAAO,CAAC,KAAKA,OAAL,CAAaQ,GAAb,EAAR,EAA4B;AAC1B,YAAI,KAAKR,OAAL,CAAaY,UAAb,CAAwBrK,IAAxB,CAAJ,EAAmC;AACjC,eAAKyJ,OAAL,GAAe,KAAKA,OAAL,CAAaa,aAAb,CAA2BtK,IAA3B,CAAf;AACA8K;AACD,SAHD,MAGO,IAAI,KAAKrB,OAAL,CAAaY,UAAb,CAAwBvD,KAAxB,CAAJ,EAAoC;AACzC,eAAK2C,OAAL,GAAe,KAAKA,OAAL,CAAaa,aAAb,CAA2BxD,KAA3B,CAAf;AACAgE;AACA,cAAIA,YAAY,CAAhB,EAAmB;AACjB;AACD;AACF,SANM,MAMA;AACL,eAAKrB,OAAL,GAAe,KAAKA,OAAL,CAAaplB,gBAAb,EAAf;AACD;AACF;AACD/N,WACEhI,QADF,EACY,KAAKm7B,OADjB,EAEE,4BAFF,EAEgC,EAFhC;AAID;;AAED;;;;;;;;;;yCAOqBzJ,I,EAAM8G,K,EAAOiE,W,EAAa;AAC7C,UAAIC,SAAS,EAAb;AACA,UAAI18B,WAAW,KAAKm7B,OAApB;AACA,WAAKA,OAAL,GAAe,KAAKA,OAAL,CAAawB,sBAAb,CAAoCjL,IAApC,CAAf;AACA,WAAKyJ,OAAL,GAAe,KAAKA,OAAL,CAAawB,sBAAb,CAAoCF,WAApC,CAAf;AACA,aAAO,CAAC,KAAKtB,OAAL,CAAaQ,GAAb,EAAR,EAA4B;AAC1Be,eAAOz5B,IAAP,CAAY,KAAK25B,kCAAL,CAAwCH,WAAxC,CAAZ;AACA,aAAKtB,OAAL,GAAe,KAAKA,OAAL,CAAawB,sBAAb,CAAoCF,WAApC,CAAf;AACA,YAAI,KAAKtB,OAAL,CAAaY,UAAb,CAAwBvD,KAAxB,CAAJ,EAAoC;AAClC,eAAK2C,OAAL,GAAe,KAAKA,OAAL,CAAawB,sBAAb,CAAoCnE,KAApC,CAAf;AACA,iBAAOkE,MAAP;AACD;AACF;AACD,aAAO10B,KACLhI,QADK,EACK,KAAKm7B,OADV,EAEL,4BAFK,EAEyB,EAFzB,CAAP;AAID;;AAED;;;;uDACmC0B,S,EAAW;AAC5C,UAAI78B,WAAW,KAAKm7B,OAApB;AACA,UAAIp2B,SAAS,EAAb;AACA,aAAO,CAAC,KAAKo2B,OAAL,CAAaQ,GAAb,EAAR,EAA4B;AAC1B,YAAI,KAAKR,OAAL,CAAatlB,IAAb,OAAwBgnB,SAA5B,EAAuC;AACrC,iBAAO93B,OAAOxH,IAAP,CAAY,EAAZ,CAAP;AACD;AACDwH,eAAO9B,IAAP,CAAY,KAAKk4B,OAAL,CAAatlB,IAAb,EAAZ;AACA,aAAKslB,OAAL,GAAe,KAAKA,OAAL,CAAanlB,yBAAb,EAAf;AACD;AACD,aAAOhO,KACLhI,QADK,EACK,KAAKm7B,OADV,EAEL,4BAFK,EAEyB,EAFzB,CAAP;AAID;;;oCAEen7B,Q,EAAU08B,M,EAAQ;AAChC,UAAIA,OAAOp/B,MAAP,KAAkB,CAAtB,EAAyB;AACvB,aAAKw/B,YAAL,CAAkB98B,QAAlB,EAA4B,KAAKm7B,OAAjC,EAA0C,cAA1C,EAA0D,EAA1D;AACD,OAFD,MAEO,IAAIuB,OAAO,CAAP,MAAc,cAAlB,EAAkC;AACvC,YAAIxmB,SAASwmB,OAAO,CAAP,CAAb;AACA,aAAKvB,OAAL,GAAe,KAAKA,OAAL,CAAa4B,WAAb,CAAyB7mB,MAAzB,CAAf;AACD,OAHM,MAGA,IAAIwmB,OAAO,CAAP,MAAc,YAAlB,EAAgC;AACrC,aAAKvB,OAAL,GAAe,KAAKA,OAAL,CAAa6B,SAAb,EAAf;AACD,OAFM,MAEA;AACL,aAAKF,YAAL,CAAkB98B,QAAlB,EAA4B,KAAKm7B,OAAjC,EAA0C,gBAA1C,EAA4D,CAACuB,OAAO,CAAP,CAAD,CAA5D;AACD;AACF;;;iCAEY18B,Q,EAAUC,M,EAAQE,M,EAAQC,I,EAAM;AAC3C,WAAKi7B,SAAL,CAAep4B,IAAf,CAAoB,2BAAejD,QAAf,EAAyBC,MAAzB,EAAiCE,MAAjC,EAAyCC,IAAzC,CAApB;AACD;;;;;;;;;;;;;;;;;;;;ACtbH;;AAyCA;;AACA;;AACA;;;;AAEA,SAAS68B,iBAAT,CAA2BC,IAA3B,EAAiC;AAC/B,SAAOA,KAAK55B,GAAL,yBACA45B,KAAKr4B,UAAL,CAAgBvH,MAAhB,GAAyB,CADzB,IAEA4/B,KAAKr4B,UAAL,CAAgBsR,KAAhB,CAAsB,CAAC,CAAvB,EAA0B,CAA1B,EAA6B7S,GAA7B,sBAFP;AAGD;;AAED,SAAS0E,IAAT,CAAchI,QAAd,EAAwBC,MAAxB,EAAgCE,MAAhC,EAAwCC,IAAxC,EAA8C;AAC5C,QAAM,+BAAmBJ,QAAnB,EAA6BC,MAA7B,EAAqCE,MAArC,EAA6CC,IAA7C,CAAN;AACD;;AAED;;;;;;;;;;;;;;;;;;IAiBa+8B,M,WAAAA,M;AAEX,kBAAYzJ,QAAZ,EAAsB;AAAA;;AACpB,SAAKhB,SAAL,GAAiBgB,QAAjB;;AAEA;;;;;;AAMA,SAAK0J,oBAAL,GAA4B;AAC1B,iDAA2C,IADjB;AAE1B,0CAAoC,IAFV;AAG1B,qCAA+B,IAHL;AAI1B,2CAAqC,IAJX;AAK1B,yCAAmC,IALT;AAM1B,+CAAyC,IANf;AAO1B,+CAAyC,IAPf;AAQ1B,2CAAqC,IARX;AAS1B,qCAA+B,IATL;AAU1B,wDAAkD,IAVxB;AAW1B,+CAAyC,IAXf;AAY1B,+CAAyC,IAZf;AAa1B,uCAAiC,IAbP;AAc1B,6BAAuB,IAdG;AAe1B,kCAA4B,IAfF;AAgB1B,0CAAoC,IAhBV;AAiB1B,+CAAyC,IAjBf;AAkB1B,8CAAwC,IAlBd;AAmB1B,8CAAwC,IAnBd;AAoB1B,mDAA6C,IApBnB;AAqB1B,4BAAsB,IArBI;AAsB1B,iCAA2B,IAtBD;AAuB1B,kCAA4B,IAvBF;AAwB1B,uCAAiC,IAxBP;AAyB1B,gCAA0B;AAzBA,KAA5B;AA2BD;;;;yBAEIC,G,EAAK;AACR,WAAKC,SAAL,CAAeD,GAAf;AACA,aAAO,KAAK3K,SAAZ;AACD;;;gCAEWS,a,EAAeC,O,EAAS;AAClC,UAAI,EAAED,iBAAiB,KAAKiK,oBAAxB,CAAJ,EAAmD;AACjD,cAAMx9B,MAAM,mBAAmBuzB,aAAnB,GAAmC,mBAAzC,CAAN;AACD;AACD,WAAKiK,oBAAL,CAA0BjK,aAA1B,IAA2CC,OAA3C;AACD;;;+BAEUpzB,Q,EAAUC,M,EAAQE,M,EAAQC,I,EAAM;AACzC,UAAI,KAAKg9B,oBAAL,CAA0Bj9B,MAA1B,CAAJ,EAAuC;AACrC6H,aAAKhI,QAAL,EAAeC,MAAf,EAAuBE,MAAvB,EAA+BC,IAA/B;AACD;AACF;;;8BAESi9B,G,EAAK;AACb;;;;AADa;AAAA;AAAA;;AAAA;AAKb,6BAAuBA,IAAIp5B,WAA3B,8HAAwC;AAAA,cAA/B8X,UAA+B;;AACtC,eAAKwhB,2BAAL,CAAiCxhB,UAAjC;AACD;;AAED;AATa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUb,UAAIshB,IAAIp5B,WAAJ,CAAgB3G,MAAhB,GAAyB,CAAzB,IAA8B,KAAKo1B,SAAL,CAAezP,OAAf,KAA2B,IAA7D,EAAmE;AACjE,aAAKua,UAAL,CACEH,IAAIr9B,QADN,EACgBq9B,IAAIp9B,MADpB,EAEE,yCAFF,EAE6C,EAF7C;AAID;;AAED;AAjBa;AAAA;AAAA;;AAAA;AAkBb,8BAAuBo9B,IAAIp5B,WAA3B,mIAAwC;AAAA,cAA/B8X,WAA+B;;AACtC,eAAK0hB,eAAL,CAAqB1hB,WAArB;AACD;AApBY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBd;;;gDAE2BA,U,EAAY;AACtC,cAAQA,WAAWzY,GAAnB;AACE;AACE,iBAAO,KAAKovB,SAAL,CAAe1W,UAAf,CAA0BD,UAA1B,CAAP;AACF;AACE,iBAAO,KAAK2W,SAAL,CAAegL,qBAAf,CAAqC3hB,UAArC,CAAP;AACF;AACE,iBAAO,KAAK2W,SAAL,CAAeoB,YAAf,CAA4B/X,UAA5B,CAAP;AACF;AACE,iBAAO,KAAK2W,SAAL,CAAeuB,WAAf,CAA2BlY,UAA3B,CAAP;AACF;AACE,iBAAO,KAAK2W,SAAL,CAAeiB,OAAf,CAAuB5X,UAAvB,CAAP;AACF;AACE,gBAAMnc,MAAM,yBAAyBgB,OAAO2C,MAAP,CAAcwY,WAAWzY,GAAzB,CAA/B,CAAN;AAZJ;AAcD;;AAED;;;;oCAEgByY,U,EAAY;AAC1B,cAAQA,WAAWzY,GAAnB;AACE;AACE,iBAAO,KAAKq6B,eAAL,CAAqB5hB,UAArB,CAAP;AACF;AACE,iBAAO,KAAK6hB,0BAAL,CAAgC7hB,UAAhC,CAAP;AACF;AACE,iBAAO,KAAK8hB,iBAAL,CAAuB9hB,UAAvB,CAAP;AACF;AACE,iBAAO,KAAK+hB,gBAAL,CAAsB/hB,UAAtB,CAAP;AACF;AACE,iBAAO,KAAKgiB,YAAL,CAAkBhiB,UAAlB,CAAP;AACF;AACE,gBAAMnc,MACE,yCACAgB,OAAO2C,MAAP,CAAcwY,WAAWzY,GAAzB,CAFF,CAAN;AAZJ;AAiBD;;;oCAEeyY,U,EAAY;AAC1B;AACA,WAAKiiB,cAAL,CAAoBjiB,WAAW5X,IAA/B,EAAqC,IAArC,CAA0C,iBAA1C;;AAEA;AACA,WAAKuuB,SAAL,CAAeuL,SAAf;AACD;;;+CAE0BliB,U,EAAY;AACrC;AACA,WAAKmiB,mBAAL,CACEniB,WAAW1X,QADb,EACuB,IADvB,CAC4B;AAD5B;AAGD;;;sCAEiB0X,U,EAAY;AAC5B;AACA,UAAIkhB,kBAAkBlhB,WAAW5X,IAA7B,CAAJ,EAAwC;AACtC,aAAKq5B,UAAL,CACEzhB,WAAW/b,QADb,EACuB+b,WAAW9b,MADlC,EAEE,kCAFF,EAEsC,CAAC8b,WAAWtf,IAAX,CAAgBsJ,KAAjB,CAFtC;AAID;;AAED;AAT4B;AAAA;AAAA;;AAAA;AAU5B,8BAAsBgW,WAAWxX,UAAjC,mIAA6C;AAAA,cAApC0X,SAAoC;;AAC3C,eAAKyW,SAAL,CAAeyL,eAAf,CAA+BliB,SAA/B;AACD;;AAED;AAd4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAe5B,WAAK+hB,cAAL,CAAoBjiB,WAAW5X,IAA/B,EAAqC,KAArC,CAA2C,kBAA3C;;AAEA;AACA,WAAKuuB,SAAL,CAAeuL,SAAf;AACD;;;qCAEgBliB,U,EAAY;AAC3B;AACA,UAAI,CAACkhB,kBAAkBlhB,WAAW5X,IAA7B,CAAL,EAAyC;AACvC,aAAKq5B,UAAL,CACEzhB,WAAW/b,QADb,EACuB+b,WAAW9b,MADlC,EAEE,6BAFF,EAEiC,CAAC8b,WAAWtf,IAAX,CAAgBsJ,KAAjB,CAFjC;AAID;;AAED;AAT2B;AAAA;AAAA;;AAAA;AAU3B,8BAAsBgW,WAAWxX,UAAjC,mIAA6C;AAAA,cAApC0X,SAAoC;;AAC3C,eAAKyW,SAAL,CAAeyL,eAAf,CAA+BliB,SAA/B;AACD;;AAED;AAd2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAe3B,WAAK+hB,cAAL,CAAoBjiB,WAAW5X,IAA/B,EAAqC,IAArC,CAA0C,iBAA1C;;AAEA;AACA,WAAKuuB,SAAL,CAAeuL,SAAf;AACD;;;iCAEYliB,U,EAAY,CAExB;AADC;;;AAGF;;;;mCAEe0a,S,EAAW;AACxB,cAAQA,UAAUnzB,GAAlB;AACE;AACE;AACA,iBAAO,KAAK06B,cAAL,CAAoBvH,SAApB,EAA+B,KAA/B,CAAqC,kBAArC,CAAP;AACF;AACE,iBAAO,KAAK2H,eAAL,CAAqB3H,SAArB,CAAP;AACF;AACE,iBAAO,KAAK4H,WAAL,CAAiB5H,SAAjB,CAAP;AACF;AACE,iBAAO,KAAK6H,eAAL,CAAqB7H,SAArB,CAAP;AACF;AACE,iBAAO,KAAK8H,gBAAL,CAAsB9H,SAAtB,CAAP;AACF;AACE,iBAAO,KAAK+H,cAAL,CAAoB/H,SAApB,CAAP;AACF;AACE,iBAAO,KAAKgI,eAAL,CAAqBhI,SAArB,CAAP;AACF;AACE,iBAAO,KAAKiI,uBAAL,CAA6BjI,SAA7B,CAAP;AACF;AACE,iBAAO,KAAKkI,oBAAL,CAA0BlI,SAA1B,CAAP;AACF;AACE,iBAAO,KAAKmI,sBAAL,CAA4BnI,SAA5B,CAAP;AACF;AACE,gBAAM72B,MACE,wCACAgB,OAAO2C,MAAP,CAAckzB,UAAUnzB,GAAxB,CAFF,CAAN;AAvBJ;AA4BD;;;mCAEcwyB,K,EAAO+I,W,EAAa;AACjC,UAAIhtB,IAAI,CAAR;AADiC;AAAA;AAAA;;AAAA;AAEjC,8BAAsBikB,MAAMjxB,UAA5B,mIAAwC;AAAA,cAA/B4xB,SAA+B;;AACtC,cAAIqI,gBAAgBD,eAAehtB,MAAMikB,MAAMjxB,UAAN,CAAiBvH,MAAjB,GAA0B,CAAnE;AACA,cAAI,CAACwhC,aAAD,IAAkBrI,UAAUnzB,GAAV,sBAAtB,EAAsD;AACpD,iBAAKk6B,UAAL,CACE/G,UAAUz2B,QADZ,EACsBy2B,UAAUx2B,MADhC,EAEE,mCAFF,EAEuC,EAFvC;AAID;AACD,eAAK8+B,cAAL,CAAoBtI,SAApB;AACA5kB;AACD;AAZgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAalC;;;oCAEe4kB,S,EAAW;AACzB,WAAKuI,eAAL,CAAqBvI,UAAU1xB,MAA/B;AACD;;;gCAEW0xB,S,EAAW;AACrB,WAAKuI,eAAL,CAAqBvI,UAAUxxB,SAA/B;AACA,WAAK85B,cAAL,CAAoBtI,UAAUvxB,SAA9B;AACA,UAAIuxB,UAAUtxB,SAAV,KAAwB,IAA5B,EAAkC;AAChC,aAAK45B,cAAL,CAAoBtI,UAAUtxB,SAA9B;AACD;AACF;;;oCAEesxB,S,EAAW;AACzB,WAAKuI,eAAL,CAAqBvI,UAAUpxB,KAA/B;AACA,WAAK05B,cAAL,CAAoBtI,UAAUtyB,IAA9B;AACD;;;qCAEgBsyB,S,EAAW;AAC1B,WAAKuI,eAAL,CAAqBvI,UAAUlxB,KAA/B;AACA,WAAKmtB,SAAL,CAAeyL,eAAf,CAA+B1H,UAAUv4B,KAAzC;AACA,WAAK6gC,cAAL,CAAoBtI,UAAUtyB,IAA9B;AACA,WAAKuuB,SAAL,CAAeuM,eAAf,CAA+BxI,UAAUv4B,KAAzC;AACD;;;mCAEcu4B,S,EAAW;AACxB,WAAKuI,eAAL,CAAqBvI,UAAUxxB,SAA/B;AACA,WAAK85B,cAAL,CAAoBtI,UAAUtyB,IAA9B;AACD;;;oCAEesyB,S,EAAW;AACzB,WAAKuI,eAAL,CAAqBvI,UAAU/wB,OAA/B;AACA,WAAKw4B,mBAAL,CACEzH,UAAUpyB,QADZ,EACsB,KADtB,CAC4B;AAD5B;AAGD;;;wCAEmBA,Q,EAAUygB,oB,EAAsB;AAClD;AADkD;AAAA;AAAA;;AAAA;AAElD,8BAAmBzgB,QAAnB,mIAA6B;AAAA,cAApB6e,MAAoB;;AAC3B,eAAKgc,YAAL,CAAkBhc,OAAOtd,OAAzB;AACD;AAJiD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMlD,WAAKu5B,4BAAL,CAAkC96B,QAAlC;AACA,WAAK+6B,6BAAL,CAAmC/6B,QAAnC;AACA,WAAKg7B,8BAAL,CAAoCh7B,QAApC;AACA,UAAIygB,oBAAJ,EAA0B;AACxB,aAAKwa,6BAAL,CAAmCj7B,QAAnC;AACD,OAFD,MAEO;AACL,aAAKk7B,gCAAL,CAAsCl7B,QAAtC;AACD;;AAED;AAfkD;AAAA;AAAA;;AAAA;AAgBlD,8BAAmBA,QAAnB,mIAA6B;AAAA,cAApB6e,OAAoB;;AAC3B,eAAKsc,qBAAL,CAA2Btc,OAA3B;AACD;AAlBiD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBnD;;AAED;;;;iDAC6B7e,Q,EAAU;AACrC,UAAIwN,IAAI,CAAR;AACA,UAAMjW,IAAIyI,SAAS/G,MAAnB;AAFqC;AAAA;AAAA;;AAAA;AAGrC,8BAAmB+G,QAAnB,mIAA6B;AAAA,cAApB6e,MAAoB;;AAC3B,cAAIA,OAAOtd,OAAP,CAAetC,GAAf,+BAA4CuO,MAAMjW,IAAI,CAA1D,EAA6D;;AAE3D,iBAAK4hC,UAAL,CACEta,OAAOtd,OAAP,CAAe5F,QADjB,EAC2BkjB,OAAOtd,OAAP,CAAe3F,MAD1C,EAEE,iCAFF,EAEqC,EAFrC;AAID;AACD4R;AACD;AAZoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAatC;;AAED;;;;;kDAE8BxN,Q,EAAU;AACtC,UAAIo7B,sBAAsB,EAA1B;AACA,UAAIC,gBAAgB,EAApB;AACA,UAAIC,iBAAiB,KAArB;AAHsC;AAAA;AAAA;;AAAA;AAItC,8BAAmBt7B,QAAnB,mIAA6B;AAAA,cAApB6e,MAAoB;;AAC3B,kBAAQA,OAAOtd,OAAP,CAAetC,GAAvB;AACE;AACE,kBAAI5G,kBAAkBwmB,OAAOtd,OAAP,CAAelJ,eAAf,CAA+BqJ,KAArD;AACA,kBAAIrJ,mBAAmB+iC,mBAAvB,EAA4C;AAC1C,qBAAKjC,UAAL,CACEta,OAAOtd,OAAP,CAAe5F,QADjB,EAC2BkjB,OAAOtd,OAAP,CAAe3F,MAD1C,EAEE,uCAFF,EAE2C,CAACvD,eAAD,CAF3C;AAID;AACD+iC,kCAAoB/iC,eAApB,IAAuC,IAAvC;AACA;AACF;AACE,kBAAIc,QAAQ0lB,OAAOtd,OAAP,CAAerB,UAAf,CAA0BjH,MAAtC;AACA,kBAAIE,SAASkiC,aAAb,EAA4B;AAC1B,qBAAKlC,UAAL,CACEta,OAAOtd,OAAP,CAAe5F,QADjB,EAC2BkjB,OAAOtd,OAAP,CAAe3F,MAD1C,EAEE,uCAFF,EAE2C,CAACzC,KAAD,CAF3C;AAID;AACDkiC,4BAAcliC,KAAd,IAAuB,IAAvB;AACA;AACF;AACE,kBAAImiC,cAAJ,EAAoB;AAClB,qBAAKnC,UAAL,CACEta,OAAOtd,OAAP,CAAe5F,QADjB,EAC2BkjB,OAAOtd,OAAP,CAAe3F,MAD1C,EAEE,mCAFF,EAEuC,EAFvC;AAID;AACD0/B,+BAAiB,IAAjB;AACA;AA7BJ;AA+BD;AApCqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqCvC;;AAED;;;;;mDAE+Bt7B,Q,EAAU;AACvC,UAAI5G,eAAe,IAAnB;AADuC;AAAA;AAAA;;AAAA;AAEvC,+BAAmB4G,QAAnB,wIAA6B;AAAA,cAApB6e,MAAoB;;AAC3B,cAAIxlB,cAAc,KAAKkiC,YAAL,CAAkB1c,OAAOtd,OAAzB,CAAlB;AACA,cAAInI,iBAAiB,IAArB,EAA2B;AACzBA,2BAAeC,WAAf;AACD,WAFD,MAEO,IAAIA,gBAAgB,IAAhB,IAAwBD,iBAAiBC,WAA7C,EAA0D;AAC/D,iBAAK8/B,UAAL,CACEta,OAAOtd,OAAP,CAAe5F,QADjB,EAC2BkjB,OAAOtd,OAAP,CAAe3F,MAD1C,EAEE,6BAFF,EAEiC,CAC7B,gBAAK,gBAAL,EAAuBxC,YAAvB,CAD6B,EAE7B,gBAAK,gBAAL,EAAuBC,WAAvB,CAF6B,CAFjC;AAOD;AACF;AAfsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBxC;;AAED;;;;kDAC8B2G,Q,EAAU;AAAA;AAAA;AAAA;;AAAA;AACtC,+BAAmBA,QAAnB,wIAA6B;AAAA,cAApB6e,MAAoB;;AAC3B,cAAIxlB,cAAc,KAAKkiC,YAAL,CAAkB1c,OAAOtd,OAAzB,CAAlB;AACA,cAAIlI,gBAAgB,IAAhB,IAAwBA,gBAAgB,gBAAK,YAAL,CAA5C,EAAgE;AAC9D,iBAAK8/B,UAAL,CACEta,OAAOtd,OAAP,CAAe5F,QADjB,EAC2BkjB,OAAOtd,OAAP,CAAe3F,MAD1C,EAEE,gDAFF,EAEoD,EAFpD;AAID;AACF;AATqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUvC;;AAED;;;;qDACiCoE,Q,EAAU;AAAA;AAAA;AAAA;;AAAA;AACzC,+BAAmBA,QAAnB,wIAA6B;AAAA,cAApB6e,MAAoB;;AAC3B,cAAIxlB,cAAc,KAAKkiC,YAAL,CAAkB1c,OAAOtd,OAAzB,CAAlB;AACA,cAAIlI,gBAAgB,gBAAK,YAAL,CAApB,EAAwC;AACtC,iBAAK8/B,UAAL,CACEta,OAAOtd,OAAP,CAAe5F,QADjB,EAC2BkjB,OAAOtd,OAAP,CAAe3F,MAD1C,EAEE,uCAFF,EAE2C,EAF3C;AAID;AACF;AATwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAU1C;;AAED;;;;0CACsBijB,M,EAAQ;AAAA;AAAA;AAAA;;AAAA;AAC5B,+BAAsBA,OAAOtd,OAAP,CAAerB,UAArC,wIAAiD;AAAA,cAAxC0X,SAAwC;;AAC/C,eAAKyW,SAAL,CAAeyL,eAAf,CAA+BliB,SAA/B;AACD;AAH2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAI5B,WAAK8iB,cAAL,CAAoB7b,OAAO/e,IAA3B;AAJ4B;AAAA;AAAA;;AAAA;AAK5B,+BAAsB+e,OAAOtd,OAAP,CAAerB,UAArC,wIAAiD;AAAA,cAAxC0X,UAAwC;;AAC/C,eAAKyW,SAAL,CAAeuM,eAAf,CAA+BhjB,UAA/B;AACD;AAP2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQ7B;;AAED;;;;iCACarW,O,EAAS;AACpB,cAAQA,QAAQtC,GAAhB;AACE;AACE,iBAAO,IAAP;AACF;AACE,iBAAO,KAAKovB,SAAL,CAAemN,eAAf,CAA+Bj6B,QAAQlJ,eAAR,CAAwBqJ,KAAvD,CAAP;AACF;AACE,iBAAO,YAAYH,QAAQrB,UAAR,CAAmBjH,MAAnB,CAA0BvB,QAA1B,EAAnB;AACF;AACE,iBAAO,gBAAK,YAAL,CAAP;AACF;AACE,gBAAM6D,MACE,sBACAgB,OAAO2C,MAAP,CAAcqC,QAAQtC,GAAtB,CADA,GAEA,oBAHF,CAAN;AAVJ;AAgBD;;;4CAEuBmzB,S,EAAW;AACjC,WAAK/D,SAAL,CAAelW,YAAf,CAA4Bia,UAAU3wB,QAAtC;AACA,WAAKk5B,eAAL,CAAqBvI,UAAU1wB,KAA/B;AACD;;;yCAEoB0wB,S,EAAW;AAC9B,UAAIxwB,YAAY,EAAhB;AAD8B;AAAA;AAAA;;AAAA;AAE9B,+BAAqBwwB,UAAUxwB,SAA/B,wIAA0C;AAAA,cAAjCH,QAAiC;;AACxC,eAAK4sB,SAAL,CAAelW,YAAf,CAA4B1W,QAA5B;AACA,cAAIA,SAASC,KAAT,IAAkBE,SAAtB,EAAiC;AAC/B,iBAAKu3B,UAAL,CACE13B,SAAS9F,QADX,EACqB8F,SAAS7F,MAD9B,EAEE,uCAFF,EAE2C,CAAC6F,SAASC,KAAV,CAF3C;AAID;AACDE,oBAAUH,SAASC,KAAnB,IAA4B,IAA5B;AACD;AAX6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAY9B,WAAKi5B,eAAL,CAAqBvI,UAAU1wB,KAA/B;AACD;;;2CAEsB0wB,S,EAAW;AAChC,UAAIh6B,OAAOg6B,UAAUtwB,aAAV,CAAwBJ,KAAnC;;AAEA;AACA,UAAI,CAAC,KAAK2sB,SAAL,CAAehX,WAAf,CAA2Bjf,IAA3B,CAAL,EAAuC;AACrC,YAAI,KAAKi2B,SAAL,CAAe7W,aAAf,CAA6Bpf,IAA7B,CAAJ,EAAwC;AACtC,eAAK+gC,UAAL,CACE/G,UAAUz2B,QADZ,EACsBy2B,UAAUx2B,MADhC,EAEE,+BAFF,EAEmC,CAC/BxD,IAD+B,EAE/B,KAAKi2B,SAAL,CAAemN,eAAf,CAA+BpjC,IAA/B,CAF+B,CAFnC;AAOD,SARD,MAQO;AACL,eAAK+gC,UAAL,CACE/G,UAAUz2B,QADZ,EACsBy2B,UAAUx2B,MADhC,EAEE,qBAFF,EAEyB,CAACxD,IAAD,CAFzB;AAID;AACF;;AAED;AACA,UAAIN,WAAW,KAAKu2B,SAAL,CAAeoN,mBAAf,CAAmCrjC,IAAnC,EAAyCa,MAAxD;AACA,UAAIH,WAAWs5B,UAAUr2B,IAAV,CAAe9C,MAA9B;AACA,UAAInB,aAAagB,QAAjB,EAA2B;AACzB,aAAKqgC,UAAL,CACE/G,UAAUz2B,QADZ,EACsBy2B,UAAUx2B,MADhC,EAEE,0BAFF,EAE8B,CAC1BxD,IAD0B,EAE1BN,QAF0B,EAG1BgB,QAH0B,CAF9B;AAQD;;AAED;AAnCgC;AAAA;AAAA;;AAAA;AAoChC,+BAAqBs5B,UAAUr2B,IAA/B,wIAAqC;AAAA,cAA5B2/B,QAA4B;;AACnC,eAAKf,eAAL,CAAqBe,QAArB;AACD;AAtC+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuCjC;;AAED;;;;iCAEan6B,O,EAAS;AACpB,cAAQA,QAAQtC,GAAhB;AACE;AACE,iBAAO,KAAK08B,oBAAL,CAA0Bp6B,OAA1B,CAAP;AACF;AACE,iBAAO,KAAKq6B,qBAAL,CAA2Br6B,OAA3B,CAAP;AACF;AACE,iBAAO,KAAKs6B,iBAAL,CAAuBt6B,OAAvB,CAAP;AACF;AACE,iBAAO,KAAKu6B,mBAAL,CAAyBv6B,OAAzB,CAAP;AACF;AACE,gBAAMhG,MACE,sBACCgB,OAAO2C,MAAP,CAAcqC,QAAQtC,GAAtB,CADD,GAEC,oBAHH,CAAN;AAVJ;AAgBD;;;yCAEoBsC,O,EAAS;AAC5B;AACD;;;0CAEqBA,O,EAAS;AAC7B,UAAInJ,OAAOmJ,QAAQlJ,eAAR,CAAwBqJ,KAAnC;;AAEA;AACA,UAAI,CAAC,KAAK2sB,SAAL,CAAe7W,aAAf,CAA6Bpf,IAA7B,CAAL,EAAyC;AACvC,aAAK2jC,8BAAL,EAAwC;AACpCx6B,gBAAQ5F,QADZ,EACsB4F,QAAQ3F,MAD9B,EACsCxD,IADtC;AAGA;AACD;;AAED;;;AAGA,UAAIN,WAAW,KAAKu2B,SAAL,CAAerW,iBAAf,CAAiC5f,IAAjC,EAAuCa,MAAtD;AACA,UAAIH,WAAWyI,QAAQrB,UAAR,CAAmBjH,MAAlC;AACA,UAAIH,WAAW,CAAX,IAAgBhB,aAAagB,QAAjC,EAA2C;AACzC,aAAKqgC,UAAL,CACE53B,QAAQ5F,QADV,EACoB4F,QAAQ3F,MAD5B,EAEE,kCAFF,EAEsC,CAClCxD,IADkC,EAElCN,QAFkC,EAGlCgB,QAHkC,CAFtC;AAQD;AACF;;;sCAEiByI,O,EAAS;AACzB;AACD;;;wCAEmBA,O,EAAS,CAE5B;AADC;;;AAGF;;;;oCAEgBy6B,U,EAAY;AAC1B,cAAQA,WAAW/8B,GAAnB;AACE;AACE,iBAAO,KAAKg9B,iBAAL,CAAuBD,UAAvB,CAAP;AACF;AACE,iBAAO,KAAKE,uBAAL,CAA6BF,UAA7B,CAAP;AACF;AACE,iBAAO,KAAKG,uBAAL,CAA6BH,UAA7B,CAAP;AACF;AACE,iBAAO,KAAKI,aAAL,CAAmBJ,UAAnB,CAAP;AACF;AACE,iBAAO,KAAKK,cAAL,CAAoBL,UAApB,CAAP;AACF;AACE,iBAAO,KAAKM,cAAL,CAAoBN,UAApB,CAAP;AACF;AACE,iBAAO,KAAKO,kBAAL,CAAwBP,UAAxB,CAAP;AACF;AACE,iBAAO,KAAKQ,wBAAL,CAA8BR,UAA9B,CAAP;AACF;AACE,iBAAO,KAAKS,qBAAL,CAA2BT,UAA3B,CAAP;AACF;AACE,gBAAMzgC,MACE,yCACAgB,OAAO2C,MAAP,CAAc88B,WAAW/8B,GAAzB,CAFF,CAAN;AApBJ;AAyBD;;;sCAEiB+8B,U,EAAY;AAC5B;;;AAGD;;;4CAEuBA,U,EAAY;AAClC;AACD;;;4CAEuBA,U,EAAY;AAClC;AACD;;;kCAEaA,U,EAAY;AAAA;AAAA;AAAA;;AAAA;AACxB,+BAAoBA,WAAWt5B,QAA/B,wIAAyC;AAAA,cAAhC6N,OAAgC;;AACvC,eAAKoqB,eAAL,CAAqBpqB,OAArB;AACD;AAHuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIzB;;;mCAEcyrB,U,EAAY;AACzB,WAAKrB,eAAL,CAAqBqB,WAAWp5B,KAAhC;AACA,UAAIo5B,WAAWn5B,MAAX,KAAsB,IAA1B,EAAgC;AAC9B,aAAK83B,eAAL,CAAqBqB,WAAWn5B,MAAhC;AACD;AACD,WAAK83B,eAAL,CAAqBqB,WAAWl5B,IAAhC;AACD;;;mCAEck5B,U,EAAY;AAAA;AAAA;AAAA;;AAAA;AACzB,+BAAoBA,WAAWt5B,QAA/B,wIAAyC;AAAA,cAAhC6N,OAAgC;;AACvC,eAAKoqB,eAAL,CAAqBpqB,OAArB;AACD;AAHwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAI1B;;;uCAEkByrB,U,EAAY;AAC7B,WAAKU,0BAAL,CAAgCV,UAAhC,EAA4C,IAA5C;AACD;;;6CAEwBA,U,EAAY;AACnC,WAAKU,0BAAL,CAAgCV,UAAhC,EAA4CA,WAAW34B,QAAvD;AACD;;AAED;;;;;;;;;+CAM2B24B,U,EAAY34B,Q,EAAU;AAC/C;AACA,UAAIhL,kBAAkB2jC,WAAW3jC,eAAX,CAA2BqJ,KAAjD;AACA,UAAI,CAAC,KAAK2sB,SAAL,CAAe7W,aAAf,CAA6Bnf,eAA7B,CAAL,EAAoD;AAClD,aAAK0jC,8BAAL,EAAwC;AACtCC,mBAAWrgC,QADb,EACuBqgC,WAAWpgC,MADlC,EAC0CvD,eAD1C;AAGA;AACD;;AAED,WAAKskC,2BAAL,CAAiCtkC,eAAjC,EAAkD2jC,UAAlD;AACA,WAAKY,+BAAL,CAAqCvkC,eAArC,EAAsD2jC,UAAtD;AACA,WAAKa,8BAAL,CAAoCxkC,eAApC,EAAqD2jC,UAArD;;AAEA;AACA,UAAI34B,aAAa,IAAjB,EAAuB;AACrB,aAAKy5B,+BAAL,CAAqCzkC,eAArC,EAAsD2jC,UAAtD;AACD;;AAED;AACA,UAAI34B,aAAa,IAAjB,EAAuB;AACrB,aAAKs3B,eAAL,CAAqBt3B,QAArB;AACD;;AAED;AAxB+C;AAAA;AAAA;;AAAA;AAyB/C,+BAAyB24B,WAAW/4B,aAApC,wIAAmD;AAAA,cAA1CE,YAA0C;;AACjD,eAAKw3B,eAAL,CAAqBx3B,aAAazB,KAAlC;AACD;AA3B8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4BhD;;AAED;;;;;oDAEgCrJ,e,EAAiB2jC,U,EAAY;AAC3D,UAAIe,iBAAiBf,WAAWhiC,UAAX,EAArB;AACA,UAAIgjC,OAAO,EAAX;AAF2D;AAAA;AAAA;;AAAA;AAG3D,+BAAsBD,cAAtB,wIAAsC;AAAA,cAA7BzkC,SAA6B;;AACpC,cAAIA,aAAa0kC,IAAjB,EAAuB;AACrB,iBAAK7D,UAAL,CACE6C,WAAWrgC,QADb,EACuBqgC,WAAWpgC,MADlC,EAEE,uCAFF,EAE2C,CACxCvD,eADwC,EAExCC,SAFwC,CAF3C;AAOD;AACD0kC,eAAK1kC,SAAL,IAAkB,IAAlB;AACD;AAd0D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAe5D;;AAED;;;;;mDAE+BD,e,EAAiB2jC,U,EAAY;AAC1D,UAAIe,iBAAiBf,WAAWhiC,UAAX,EAArB;AACA,UAAIge,oBAAoB,KAAKqW,SAAL,CAAerW,iBAAf,CAAiC3f,eAAjC,CAAxB;AAF0D;AAAA;AAAA;;AAAA;AAG1D,+BAAsB0kC,cAAtB,wIAAsC;AAAA,cAA7BzkC,SAA6B;;AACpC,cAAI0f,kBAAkBnT,OAAlB,CAA0BvM,SAA1B,MAAyC,CAAC,CAA9C,EAAiD;AAC/C,iBAAK6gC,UAAL,CACE6C,WAAWrgC,QADb,EACuBqgC,WAAWpgC,MADlC,EAEE,sCAFF,EAE0C,CACvCvD,eADuC,EAEvCC,SAFuC,CAF1C;AAOD;AACF;AAbyD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAc3D;;AAED;;;;;oDAEgCD,e,EAAiB2jC,U,EAAY;AAC3D,UAAIe,iBAAiBf,WAAWhiC,UAAX,EAArB;AACA,UAAIge,oBAAoB,KAAKqW,SAAL,CAAerW,iBAAf,CAAiC3f,eAAjC,CAAxB;AAF2D;AAAA;AAAA;;AAAA;AAG3D,+BAAsB2f,iBAAtB,wIAAyC;AAAA,cAAhC1f,SAAgC;;AACvC,cAAIykC,eAAel4B,OAAf,CAAuBvM,SAAvB,MAAsC,CAAC,CAA3C,EAA8C;AAC5C,iBAAK6gC,UAAL,CACE6C,WAAWrgC,QADb,EACuBqgC,WAAWpgC,MADlC,EAEE,sCAFF,EAE0C,CACvCvD,eADuC,EAEvCC,SAFuC,CAF1C;AAOD;AACF;AAb0D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAc5D;;AAED;;;;;;gDAG4BD,e,EAAiB2jC,U,EAAY;AACvD,UAAIR,kBAAkB,KAAKnN,SAAL,CAAemN,eAAf,CAA+BnjC,eAA/B,CAAtB;AACA,UAAImjC,oBAAoB,gBAAK,YAAL,CAAxB,EAA4C;AAC1C,aAAKrC,UAAL,CACE6C,WAAWrgC,QADb,EACuBqgC,WAAWpgC,MADlC,EAEE,2CAFF,EAE+C,CAACvD,eAAD,CAF/C;AAID;AACF;;;0CAEqB2jC,U,EAAY;AAChC;AACA,UAAI5jC,OAAO4jC,WAAWz4B,YAAX,CAAwB7B,KAAnC;AACA,UAAI,CAAC,KAAK2sB,SAAL,CAAe/W,UAAf,CAA0Blf,IAA1B,CAAD,IAAoC,CAAC,KAAKi2B,SAAL,CAAe5W,OAAf,CAAuBrf,IAAvB,CAAzC,EAAuE;AACrE,aAAK+gC,UAAL,CACE6C,WAAWrgC,QADb,EACuBqgC,WAAWpgC,MADlC,EAEE,oBAFF,EAEwB,CAACxD,IAAD,CAFxB;AAID;;AAED;AACA,UAAIN,iBAAJ;AACA,UAAI,KAAKu2B,SAAL,CAAe/W,UAAf,CAA0Blf,IAA1B,CAAJ,EAAqC;AACnCN,mBAAW,KAAKu2B,SAAL,CAAe4O,kBAAf,CAAkC7kC,IAAlC,EAAwCa,MAAnD;AACD,OAFD,MAEO;AACL;AACAnB,mBAAW,CAAX;AACD;AACD,UAAIgB,WAAWkjC,WAAWjgC,IAAX,CAAgB9C,MAA/B;AACA,UAAInB,aAAagB,QAAjB,EAA2B;AACzB,aAAKqgC,UAAL,CACE6C,WAAWrgC,QADb,EACuBqgC,WAAWpgC,MADlC,EAEE,yBAFF,EAE6B,CACzBxD,IADyB,EAEzBN,QAFyB,EAGzBgB,QAHyB,CAF7B;AAQD;;AAED;AA9BgC;AAAA;AAAA;;AAAA;AA+BhC,+BAAqBkjC,WAAWjgC,IAAhC,wIAAsC;AAAA,cAA7B2/B,QAA6B;;AACpC,eAAKf,eAAL,CAAqBe,QAArB;AACD;AAjC+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkCjC;;AAED;;;;;;;;;mDAM+B//B,Q,EAAUC,M,EAAQxD,I,EAAM;AACrD,UAAI,KAAKi2B,SAAL,CAAe9W,MAAf,CAAsBnf,IAAtB,CAAJ,EAAiC;AAC/B,aAAK+gC,UAAL,CACEx9B,QADF,EACYC,MADZ,EAEE,0BAFF,EAE8B,CAC1BxD,IAD0B,EAE1B,KAAKi2B,SAAL,CAAeyB,gBAAf,CAAgC13B,IAAhC,CAF0B,CAF9B;AAOD,OARD,MAQO,IAAI,KAAKi2B,SAAL,CAAehX,WAAf,CAA2Bjf,IAA3B,CAAJ,EAAsC;AAC3C,aAAK+gC,UAAL,CACEx9B,QADF,EACYC,MADZ,EAEE,+BAFF,EAEmC,CAACxD,IAAD,CAFnC;AAID,OALM,MAKA;AACL,aAAK+gC,UAAL,CACEx9B,QADF,EACYC,MADZ,EAEE,wBAFF,EAE4B,CAACxD,IAAD,CAF5B;AAID;AACF;;;;;;;;;;;;;;;;;;;;ACr1BH;;AAyCA;;AA4BA;;AAOA;;AACA;;;;AAEA;;;;;;;;;;;;;;;;;;IAkBa8kC,Q,WAAAA,Q;AAEX,oBAAY7N,QAAZ,EAAsB;AAAA;;AACpB,SAAKhB,SAAL,GAAiBgB,QAAjB;AACA,SAAKb,KAAL,GAAa,sBAAS,EAAT,CAAb;AACA,SAAK2O,UAAL,GAAkB,CAAlB;AACA,SAAKC,aAAL,GAAqB,CAArB;AACA,SAAKhP,WAAL,GAAmB,gCAAnB;AACD;;;;4BAEO4K,G,EAAK;AACX,WAAKqE,YAAL,CAAkBrE,GAAlB;AACA,aAAO,KAAKxK,KAAZ;AACD;;;iCAEYwK,G,EAAK;AAChB;AACA,UAAIA,IAAIp5B,WAAJ,CAAgB3G,MAAhB,KAA2B,CAA/B,EAAkC;AAChC,aAAKqkC,QAAL,CAActE,IAAIr9B,QAAlB,EAA4Bq9B,IAAIp9B,MAAhC,EACE,0BADF;AAGA;AACD;;AAED;AATgB;AAAA;AAAA;;AAAA;AAUhB,6BAAuBo9B,IAAIp5B,WAA3B,8HAAwC;AAAA,cAA/B8X,UAA+B;;AACtC,cAAIA,WAAWzY,GAAX,sBAAJ,EAAqC;AACnC,iBAAKs+B,kBAAL,CAAwB7lB,UAAxB;AACD,WAFD,MAEO,IAAIA,WAAWzY,GAAX,iCAAJ,EAAgD;AACrD,iBAAKu+B,6BAAL,CAAmC9lB,UAAnC;AACD;AACF;;AAED;AAlBgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAmBhB,8BAAuBshB,IAAIp5B,WAA3B,mIAAwC;AAAA,cAA/B8X,WAA+B;;AACtC,cAAIA,YAAWzY,GAAX,wBAAJ,EAAuC;AACrC,iBAAKw+B,oBAAL,CAA0B/lB,WAA1B;AACD,WAFD,MAEO,IAAIA,YAAWzY,GAAX,uBAAJ,EAAsC;AAC3C,iBAAKy+B,mBAAL,CAAyBhmB,WAAzB;AACD;AACF;AAzBe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0BjB;;;uCAEkBA,U,EAAY;AAC7B,WAAKimB,iBAAL,CAAuBjmB,WAAW5X,IAAlC;AACA,WAAKw9B,QAAL,CAAc5lB,WAAW/b,QAAzB,EAAmC+b,WAAW9b,MAA9C,EACE,0BADF;AAGD;;AAED;;;;;kDAE8B8b,U,EAAY;AACxC,WAAKkmB,2BAAL,CAAiClmB,UAAjC;AACA,WAAK4lB,QAAL,CACE5lB,WAAW/b,QADb,EACuB+b,WAAW9b,MADlC,EAEE,0BAFF;AAID;;AAED;;;;;;;;;;;;;;;;;;yCAeqB8b,U,EAAY;AAC/B,WAAK4lB,QAAL,CACE5lB,WAAW/b,QADb,EACuB+b,WAAW9b,MADlC,EAEE,wBAAW8b,WAAWtf,IAAX,CAAgBsJ,KAA3B,CAFF;AAIA,WAAK,IAAI8L,IAAI,CAAb,EAAgBA,IAAIkK,WAAWxX,UAAX,CAAsBjH,MAA1C,EAAkDuU,GAAlD,EAAuD;AACrD,YAAIqwB,gBAAgBnmB,WAAWxX,UAAX,CAAsBsN,CAAtB,EAAyB9L,KAA7C;AACA,aAAK47B,QAAL,CACE5lB,WAAW/b,QADb,EACuB+b,WAAW9b,MADlC,EAEE,8BAAiBiiC,aAAjB,CAFF;AAID;AACD,WAAKF,iBAAL,CAAuBjmB,WAAW5X,IAAlC;AACA,WAAKw9B,QAAL,CACE5lB,WAAW/b,QADb,EACuB+b,WAAW9b,MADlC,EAEE,0BAFF;AAID;;AAED;;;;;;;;;;;;;;;;;;;;wCAiBoB8b,U,EAAY;AAC9B,WAAKomB,YAAL,CAAkBpmB,WAAW/b,QAA7B,EAAuC+b,WAAW9b,MAAlD,EAA0D,CACxD,wBAAW8b,WAAWtf,IAAX,CAAgBsJ,KAA3B,CADwD,EAExD,6BAFwD,CAA1D;AAIA,WAAK,IAAI8L,IAAI,CAAb,EAAgBA,IAAIkK,WAAWxX,UAAX,CAAsBjH,MAA1C,EAAkDuU,GAAlD,EAAuD;AACrD,YAAIqwB,gBAAgBnmB,WAAWxX,UAAX,CAAsBsN,CAAtB,EAAyB9L,KAA7C;AACA,aAAK47B,QAAL,CACE5lB,WAAW/b,QADb,EACuB+b,WAAW9b,MADlC,EAEE,8BAAiBiiC,aAAjB,CAFF;AAID;AACD,WAAKF,iBAAL,CAAuBjmB,WAAW5X,IAAlC;AACA,WAAKg+B,YAAL,CAAkBpmB,WAAW/b,QAA7B,EAAuC+b,WAAW9b,MAAlD,EAA0D,CACxD,gCADwD,EAExD,0BAFwD,CAA1D;AAID;;AAED;;;;;;;;;;sCAOkBw2B,S,EAAW;AAC3B,cAAQA,UAAUnzB,GAAlB;AACE;AACE,iBAAO,KAAK8+B,iBAAL,CAAuB3L,SAAvB,CAAP;AACF;AACE,iBAAO,KAAK4L,kBAAL,CAAwB5L,SAAxB,CAAP;AACF;AACE,iBAAO,KAAK6L,cAAL,CAAoB7L,SAApB,CAAP;AACF;AACE,iBAAO,KAAK8L,kBAAL,CAAwB9L,SAAxB,CAAP;AACF;AACE,iBAAO,KAAK+L,mBAAL,CAAyB/L,SAAzB,CAAP;AACF;AACE,iBAAO,KAAKgM,iBAAL,CAAuBhM,SAAvB,CAAP;AACF;AACE,iBAAO,KAAKiM,kBAAL,CAAwBjM,SAAxB,CAAP;AACF;AACE,iBAAO,KAAKkM,0BAAL,CAAgClM,SAAhC,CAAP;AACF;AACE,iBAAO,KAAKmM,uBAAL,CAA6BnM,SAA7B,CAAP;AACF;AACE,iBAAO,KAAKoM,yBAAL,CAA+BpM,SAA/B,CAAP;AACF;AACE,gBAAM72B,MACE,0CACAgB,OAAO2C,MAAP,CAAckzB,UAAUnzB,GAAxB,CAFF,CAAN;AAtBJ;AA2BD;;;sCAEiBwyB,K,EAAO;AAAA;AAAA;AAAA;;AAAA;AACvB,8BAAsBA,MAAMjxB,UAA5B,mIAAwC;AAAA,cAA/B4xB,SAA+B;;AACtC,eAAKuL,iBAAL,CAAuBvL,SAAvB;AACD;AAHsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIxB;;AAED;;;;;;;;;;;uCAQmBA,S,EAAW;AAC5B,aAAO,KAAKqM,kBAAL,CAAwBrM,UAAU1xB,MAAlC,CAAP;AACD;;AAED;;;;;;;;;;;;;;;;;;;;;;;mCAoBe0xB,S,EAAW;AACxB,WAAKqM,kBAAL,CAAwBrM,UAAUxxB,SAAlC;AACA,WAAK08B,QAAL,CAAclL,UAAUxxB,SAAV,CAAoBjF,QAAlC,EAA4Cy2B,UAAUxxB,SAAV,CAAoBhF,MAAhE,EACE,4BAAe,yBAAkB,gBAAK,WAAL,CAAlB,EAAqC,EAArC,CAAf,CADF;AAGA,UAAI8iC,YAAY,KAAKC,WAAL,EAAhB;AACA,WAAKrB,QAAL,CAAclL,UAAUz2B,QAAxB,EAAkCy2B,UAAUx2B,MAA5C,EACE,8BAAiB8iC,SAAjB,CADF;AAGA,WAAKf,iBAAL,CAAuBvL,UAAUvxB,SAAjC;AACA,UAAIuxB,UAAUtxB,SAAV,KAAwB,IAA5B,EAAkC;AAChC,aAAKw8B,QAAL,CAAclL,UAAUz2B,QAAxB,EAAkCy2B,UAAUx2B,MAA5C,EACE,wBAAW8iC,SAAX,CADF;AAGD,OAJD,MAIO;AACL,YAAIE,WAAW,KAAKD,WAAL,EAAf;AACA,aAAKb,YAAL,CAAkB1L,UAAUz2B,QAA5B,EAAsCy2B,UAAUx2B,MAAhD,EAAwD,CACtD,uBAAUgjC,QAAV,CADsD,EAEtD,wBAAWF,SAAX,CAFsD,CAAxD;AAIA,aAAKf,iBAAL,CAAuBvL,UAAUtxB,SAAjC;AACA,aAAKw8B,QAAL,CAAclL,UAAUz2B,QAAxB,EAAkCy2B,UAAUx2B,MAA5C,EACE,wBAAWgjC,QAAX,CADF;AAGD;AACF;;AAED;;;;;;;;;;;;;;;;;uCAcmBxM,S,EAAW;AAC5B,WAAKqM,kBAAL,CAAwBrM,UAAUpxB,KAAlC;AACA,WAAKs8B,QAAL,CAAclL,UAAUpxB,KAAV,CAAgBrF,QAA9B,EAAwCy2B,UAAUpxB,KAAV,CAAgBpF,MAAxD,EACE,4BAAe,wBAAf,CADF;AAGA,UAAIijC,aAAa,KAAKF,WAAL,EAAjB;AACA,UAAIC,WAAW,KAAKD,WAAL,EAAf;AACA,WAAKb,YAAL,CAAkB1L,UAAUz2B,QAA5B,EAAsCy2B,UAAUx2B,MAAhD,EAAwD,CACtD,wBAAWijC,UAAX,CADsD,EAEtD,uBAFsD,EAGtD,8BAAiB,CAAjB,CAHsD,EAItD,gCAAmB,GAAnB,EAAwB,CAAxB,CAJsD,EAKtD,8BAAiBD,QAAjB,CALsD,CAAxD;AAOA,WAAKjB,iBAAL,CAAuBvL,UAAUtyB,IAAjC;AACA,WAAKg+B,YAAL,CAAkB1L,UAAUz2B,QAA5B,EAAsCy2B,UAAUx2B,MAAhD,EAAwD,CACtD,8BAAiB,CAAjB,CADsD,EAEtD,gCAAmB,GAAnB,EAAwB,CAAxB,CAFsD,EAGtD,uBAAUijC,UAAV,CAHsD,EAItD,wBAAWD,QAAX,CAJsD,EAKtD,uBALsD,CAAxD;AAOD;;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wCAoCoBxM,S,EAAW;AAC7B,UAAIyM,aAAa,KAAKF,WAAL,EAAjB;AACA,UAAIC,WAAW,KAAKD,WAAL,EAAf;AACA,UAAIh0B,OAAO,KAAKm0B,cAAL,EAAX;AACA,UAAIC,MAAM,KAAKD,cAAL,EAAV;AACA,UAAIvnC,IAAI,KAAKunC,cAAL,EAAR;;AAEA,WAAKL,kBAAL,CAAwBrM,UAAUlxB,KAAlC;AACA,WAAK48B,YAAL,CAAkB1L,UAAUlxB,KAAV,CAAgBvF,QAAlC,EAA4Cy2B,UAAUlxB,KAAV,CAAgBtF,MAA5D,EAAoE,CAClE,4BAAe,oBAAa,oBAAb,CAAf,CADkE,EAElE,8BAAiB+O,IAAjB,CAFkE,EAIlE,+BAAkBA,IAAlB,CAJkE,EAKlE,gCAAmB,mBAAnB,EAAwC,CAAxC,CALkE,EAMlE,8BAAiBpT,CAAjB,CANkE,CAApE;AAQA,WAAKumC,YAAL,CAAkB1L,UAAUz2B,QAA5B,EAAsCy2B,UAAUx2B,MAAhD,EAAwD,CACtD,8BAAiB,CAAjB,CADsD,EAEtD,8BAAiBmjC,GAAjB,CAFsD,EAItD,wBAAWF,UAAX,CAJsD,EAKtD,+BAAkBE,GAAlB,CALsD,EAMtD,+BAAkBxnC,CAAlB,CANsD,EAOtD,gCAAmB,GAAnB,EAAwB,CAAxB,CAPsD,EAQtD,8BAAiBqnC,QAAjB,CARsD,EAUtD,+BAAkBj0B,IAAlB,CAVsD,EAWtD,+BAAkBo0B,GAAlB,CAXsD,EAYtD,gCAAmB,gBAAnB,EAAqC,CAArC,CAZsD,EAatD,8BAAiB3M,UAAUv4B,KAAV,CAAgB6H,KAAjC,CAbsD,CAAxD;AAeA,WAAKi8B,iBAAL,CAAuBvL,UAAUtyB,IAAjC;AACA,WAAKg+B,YAAL,CAAkB1L,UAAUz2B,QAA5B,EAAsCy2B,UAAUx2B,MAAhD,EAAwD,CACtD,+BAAkBmjC,GAAlB,CADsD,EAEtD,8BAAiB,CAAjB,CAFsD,EAGtD,gCAAmB,GAAnB,EAAwB,CAAxB,CAHsD,EAItD,8BAAiBA,GAAjB,CAJsD,EAMtD,uBAAUF,UAAV,CANsD,EAQtD,wBAAWD,QAAX,CARsD,EAStD,gCAAmBj0B,IAAnB,CATsD,EAUtD,gCAAmBpT,CAAnB,CAVsD,EAWtD,gCAAmBwnC,GAAnB,CAXsD,EAYtD,gCAAmB3M,UAAUv4B,KAAV,CAAgB6H,KAAnC,CAZsD,CAAxD;AAcD;;AAED;;;;;;;;;;;sCAQkB0wB,S,EAAW;AAC3B,UAAIyM,aAAa,KAAKF,WAAL,EAAjB;AACA,UAAIC,WAAW,KAAKD,WAAL,EAAf;AACA,WAAKrB,QAAL,CAAclL,UAAUz2B,QAAxB,EAAkCy2B,UAAUx2B,MAA5C,EACE,wBAAWijC,UAAX,CADF;AAGA,WAAKJ,kBAAL,CAAwBrM,UAAUxxB,SAAlC;AACA,WAAKk9B,YAAL,CAAkB1L,UAAUz2B,QAA5B,EAAsCy2B,UAAUx2B,MAAhD,EAAwD,CACtD,4BAAe,yBAAkB,gBAAK,WAAL,CAAlB,EAAqC,EAArC,CAAf,CADsD,EAEtD,8BAAiBgjC,QAAjB,CAFsD,CAAxD;AAIA,WAAKjB,iBAAL,CAAuBvL,UAAUtyB,IAAjC;AACA,WAAKg+B,YAAL,CAAkB1L,UAAUz2B,QAA5B,EAAsCy2B,UAAUx2B,MAAhD,EAAwD,CACtD,uBAAUijC,UAAV,CADsD,EAEtD,wBAAWD,QAAX,CAFsD,CAAxD;AAID;;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uCA2BmBxM,S,EAAW;AAC5B;AACA,WAAKqM,kBAAL,CAAwBrM,UAAU/wB,OAAlC;AACA,WAAKu8B,2BAAL,CAAiCxL,SAAjC;AACD;;;gDAE2BA,S,EAAW;AACrC,UAAI4M,eAAe,EAAnB;AACA;AAFqC;AAAA;AAAA;;AAAA;AAGrC,8BAAmB5M,UAAUpyB,QAA7B,mIAAuC;AAAA,cAA9B6e,OAA8B;;AACrC,cAAIxE,SAAQ,KAAKskB,WAAL,EAAZ;AACAK,uBAAapgC,IAAb,CAAkByb,MAAlB;AACA,eAAK4kB,oBAAL,CAA0BpgB,QAAOtd,OAAjC,EAA0C8Y,MAA1C;AACD;;AAED;AATqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUrC,WAAKyjB,YAAL,CAAkB1L,UAAUz2B,QAA5B,EAAsCy2B,UAAUx2B,MAAhD,EAAwD,CACtD,6BAAgB,uBAAhB,CADsD,EAEtD,gCAAmB,OAAnB,EAA4B,CAA5B,CAFsD,CAAxD;;AAKA;AACA,UAAIgjC,WAAW,KAAKD,WAAL,EAAf;AACA,WAAK,IAAInxB,IAAI,CAAb,EAAgBA,IAAIwxB,aAAa/lC,MAAjC,EAAyCuU,GAAzC,EAA8C;AAC5C,YAAIqR,SAASuT,UAAUpyB,QAAV,CAAmBwN,CAAnB,CAAb;AACA,YAAI6M,QAAQ2kB,aAAaxxB,CAAb,CAAZ;AACA,aAAK8vB,QAAL,CAAcze,OAAOljB,QAArB,EAA+BkjB,OAAOjjB,MAAtC,EAA8C,wBAAWye,KAAX,CAA9C;AACA,aAAK6kB,mBAAL,CAAyBrgB,OAAOtd,OAAhC;AACA,aAAK+7B,QAAL,CAAcze,OAAOljB,QAArB,EAA+BkjB,OAAOjjB,MAAtC,EAA8C,uBAA9C;AACA,aAAK+hC,iBAAL,CAAuB9e,OAAO/e,IAA9B;AACA,aAAKq/B,qBAAL,CAA2BtgB,OAAOtd,OAAlC;AACA,aAAK+7B,QAAL,CAAcze,OAAOljB,QAArB,EAA+BkjB,OAAOjjB,MAAtC,EAA8C,uBAAUgjC,QAAV,CAA9C;AACD;AACD,WAAKtB,QAAL,CACElL,UAAUz2B,QADZ,EACsBy2B,UAAUx2B,MADhC,EAEE,wBAAWgjC,QAAX,CAFF;AAID;;;+CAE0BxM,S,EAAW;AACpC,WAAKqM,kBAAL,CAAwBrM,UAAU1wB,KAAlC;AACA,WAAK47B,QAAL,CAAclL,UAAUz2B,QAAxB,EAAkCy2B,UAAUx2B,MAA5C,EACE,8BAAiBw2B,UAAU3wB,QAAV,CAAmBC,KAApC,CADF;AAGD;;;4CAEuB0wB,S,EAAW;AACjC,WAAKqM,kBAAL,CAAwBrM,UAAU1wB,KAAlC;;AAEA;AACA,UAAI09B,OAAO,EAAX;AACA,WAAK,IAAIvlC,QAAQ,CAAjB,EAAoBA,QAAQu4B,UAAUxwB,SAAV,CAAoB3I,MAAhD,EAAwDY,OAAxD,EAAiE;AAC/DulC,aAAKxgC,IAAL,CAAU,oBAAV;AACD;AACD,UAAIxF,eAAe,qBAAcgmC,IAAd,CAAnB;AACA,WAAK9B,QAAL,CACElL,UAAUz2B,QADZ,EACsBy2B,UAAUx2B,MADhC,EAEE,4BAAexC,YAAf,CAFF;;AAKA;AACA,WAAK,IAAIS,SAAQ,CAAjB,EAAoBA,SAAQu4B,UAAUxwB,SAAV,CAAoB3I,MAAhD,EAAwDY,QAAxD,EAAiE;AAC/D,aAAKikC,YAAL,CAAkB1L,UAAUz2B,QAA5B,EAAsCy2B,UAAUx2B,MAAhD,EAAwD,CACtD,qCAAwB/B,MAAxB,CADsD,EAEtD,8BAAiBu4B,UAAUxwB,SAAV,CAAoB/H,MAApB,EAA2B6H,KAA5C,CAFsD,CAAxD;AAID;;AAED;AACA,WAAK47B,QAAL,CACElL,UAAUz2B,QADZ,EACsBy2B,UAAUx2B,MADhC,EAEE,uBAFF;AAKD;;AAED;;;;;;;8CAI0Bw2B,S,EAAW;AACnC,UAAItwB,gBAAgBswB,UAAUtwB,aAAV,CAAwBJ,KAA5C;AADmC;AAAA;AAAA;;AAAA;AAEnC,8BAAqB0wB,UAAUr2B,IAA/B,mIAAqC;AAAA,cAA5B2/B,QAA4B;;AACnC,eAAK+C,kBAAL,CAAwB/C,QAAxB;AACD;AAJkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKnC,UAAI,KAAKtN,WAAL,CAAiB/W,WAAjB,CAA6BvV,aAA7B,CAAJ,EAAiD;AAC/C,aAAKu9B,kCAAL,CAAwCjN,SAAxC;AACD,OAFD,MAEO,IAAI,KAAK/D,SAAL,CAAehX,WAAf,CAA2BvV,aAA3B,CAAJ,EAA+C;AACpD,aAAKw9B,oCAAL,CAA0ClN,SAA1C;AACD,OAFM,MAEA;AACL,cAAM72B,MACJ,eAAeuG,aAAf,GAA+B,6BAD3B,CAAN;AAGD;AACF;;;uDAEkCswB,S,EAAW;AAC5C,WAAKkL,QAAL,CAAclL,UAAUz2B,QAAxB,EAAkCy2B,UAAUx2B,MAA5C,EACE,gCAAmBw2B,UAAUtwB,aAAV,CAAwBJ,KAA3C,EAAkD0wB,UAAUr2B,IAAV,CAAe9C,MAAjE,CADF;AAGD;;;yDAEoCm5B,S,EAAW;AAC9C,WAAKkL,QAAL,CAAclL,UAAUz2B,QAAxB,EAAkCy2B,UAAUx2B,MAA5C,EACE,uBAAUw2B,UAAUtwB,aAAV,CAAwBJ,KAAlC,EAAyC0wB,UAAUr2B,IAAV,CAAe9C,MAAxD,CADF;AAGD;;AAED;;;;;;;;;yCAMqBsI,O,EAAS4Z,W,EAAa;AACzC,cAAQ5Z,QAAQtC,GAAhB;AACE;AACE,iBAAO,KAAKsgC,4BAAL,CAAkCh+B,OAAlC,EAA2C4Z,WAA3C,CAAP;AACF;AACE,iBAAO,KAAKqkB,6BAAL,CAAmCj+B,OAAnC,EAA4C4Z,WAA5C,CAAP;AACF;AACE,iBAAO,KAAKskB,yBAAL,CAA+Bl+B,OAA/B,EAAwC4Z,WAAxC,CAAP;AACF;AACE,iBAAO,KAAKukB,2BAAL,CAAiCn+B,OAAjC,EAA0C4Z,WAA1C,CAAP;AACF;AACE,gBAAM5f,MACE,8CACAgB,OAAO2C,MAAP,CAAcqC,QAAQtC,GAAtB,CAFF,CAAN;AAVJ;AAeD;;;iDAE4BsC,O,EAAS4Z,W,EAAa;AACjD,WAAKmiB,QAAL,CACE/7B,QAAQ5F,QADV,EACoB4F,QAAQ3F,MAD5B,EAEE,uBAAUuf,WAAV,CAFF;AAID;;;kDAE6B5Z,O,EAAS4Z,W,EAAa;AAClD;;AAEA,UAAI9iB,kBAAkBkJ,QAAQlJ,eAAR,CAAwBqJ,KAA9C;AACA,UAAIrB,WAAW,KAAKguB,SAAL,CAAemN,eAAf,CAA+BnjC,eAA/B,CAAf;AACA,UAAIe,eAAe,yBAAkBiH,QAAlB,EAA4B,EAA5B,CAAnB;AACA,WAAKi9B,QAAL,CACE/7B,QAAQ5F,QADV,EACoB4F,QAAQ3F,MAD5B,EAEE,4BAAexC,YAAf,CAFF;;AAKA;AACA,WAAKkkC,QAAL,CACE/7B,QAAQ5F,QADV,EACoB4F,QAAQ3F,MAD5B,EAEE,kCAAqBvD,eAArB,EAAsC8iB,WAAtC,CAFF;AAID;;;8CAEyB5Z,O,EAAS4Z,W,EAAa;AAC9C;;AAEA,UAAIikB,OAAO,EAAX;AACA,WAAK,IAAI5xB,IAAI,CAAb,EAAgBA,IAAIjM,QAAQrB,UAAR,CAAmBjH,MAAvC,EAA+CuU,GAA/C,EAAoD;AAClD4xB,aAAKxgC,IAAL,CAAU,oBAAV;AACD;AACD,UAAIxF,eAAe,qBAAcgmC,IAAd,CAAnB;AACA,WAAK9B,QAAL,CACE/7B,QAAQ5F,QADV,EACoB4F,QAAQ3F,MAD5B,EAEE,4BAAexC,YAAf,CAFF;;AAKA;AACA,WAAKkkC,QAAL,CACE/7B,QAAQ5F,QADV,EACoB4F,QAAQ3F,MAD5B,EAEE,8BAAiB2F,QAAQrB,UAAR,CAAmBjH,MAApC,EAA4CkiB,WAA5C,CAFF;AAID;;;gDAE2B5Z,O,EAAS4Z,W,EAAa;AAChD,WAAKmiB,QAAL,CACE/7B,QAAQ5F,QADV,EACoB4F,QAAQ3F,MAD5B,EAEE,kCAAqB,gBAAK,cAAL,CAArB,EAA2Cuf,WAA3C,CAFF;AAID;;AAED;;;;;;;wCAIoB5Z,O,EAAS;AAC3B,cAAQA,QAAQtC,GAAhB;AACE;AACE,iBAFJ,CAEY;AACV;AACE,eAAK0gC,4BAAL,CAAkCp+B,OAAlC;AACA;AACF;AACE,eAAKq+B,wBAAL,CAA8Br+B,OAA9B;AACA;AACF;AACE,iBAVJ,CAUY;AACV;AACE,gBAAMhG,MACE,gDACAgB,OAAO2C,MAAP,CAAcqC,QAAQtC,GAAtB,CAFF,CAAN;AAZJ;AAiBD;;;iDAE4BsC,O,EAAS;AACpC;;AAEA,UAAIA,QAAQrB,UAAR,CAAmBjH,MAAnB,KAA8B,CAAlC,EAAqC;AACnC;AACD;;AAED,UAAIZ,kBAAkBkJ,QAAQlJ,eAAR,CAAwBqJ,KAA9C;AACA,UAAI1H,aAAa,KAAKq0B,SAAL,CAAerW,iBAAf,CAAiC3f,eAAjC,CAAjB;AACA,WAAK,IAAImV,IAAI,CAAb,EAAgBA,IAAIxT,WAAWf,MAA/B,EAAuCuU,GAAvC,EAA4C;AAC1C,YAAIoK,YAAYrW,QAAQrB,UAAR,CAAmBsN,CAAnB,CAAhB;AACA,YAAIlV,YAAY0B,WAAWwT,CAAX,CAAhB;AACA,aAAKswB,YAAL,CAAkBv8B,QAAQ5F,QAA1B,EAAoC4F,QAAQ3F,MAA5C,EAAoD,CAClD,qCAAwBtD,SAAxB,CADkD,EAElD,8BAAiBsf,UAAUlW,KAA3B,CAFkD,CAApD;AAID;AACF;;;6CAEwBH,O,EAAS;AAChC,WAAK,IAAI1H,QAAQ,CAAjB,EAAoBA,QAAQ0H,QAAQrB,UAAR,CAAmBjH,MAA/C,EAAuDY,OAAvD,EAAgE;AAC9D,YAAI+d,YAAYrW,QAAQrB,UAAR,CAAmBrG,KAAnB,CAAhB;AACA,aAAKikC,YAAL,CAAkBv8B,QAAQ5F,QAA1B,EAAoC4F,QAAQ3F,MAA5C,EAAoD,CAClD,qCAAwB/B,KAAxB,CADkD,EAElD,8BAAiB+d,UAAUlW,KAA3B,CAFkD,CAApD;AAID;AACF;;AAED;;;;;0CAEsBH,O,EAAS;AAC7B,cAAQA,QAAQtC,GAAhB;AACE;AACE,iBAFJ,CAEY;AACV;AACE,eAAK4gC,8BAAL,CAAoCt+B,OAApC;AACA;AACF;AACE,eAAKu+B,0BAAL,CAAgCv+B,OAAhC;AACA;AACF;AACE,iBAVJ,CAUY;AACV;AACE,gBAAMhG,MACE,kDACAgB,OAAO2C,MAAP,CAAcqC,QAAQtC,GAAtB,CAFF,CAAN;AAZJ;AAiBD;;;mDAE8BsC,O,EAAS;AAAA;AAAA;AAAA;;AAAA;AACtC,8BAAsBA,QAAQrB,UAA9B,mIAA0C;AAAA,cAAjC0X,SAAiC;;AACxC,eAAKkmB,YAAL,CAAkBv8B,QAAQ5F,QAA1B,EAAoC4F,QAAQ3F,MAA5C,EAAoD,CAClD,gCAAmBgc,UAAUlW,KAA7B,CADkD,CAApD;AAGD;AALqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMvC;;;+CAE0BH,O,EAAS;AAAA;AAAA;AAAA;;AAAA;AAClC,8BAAsBA,QAAQrB,UAA9B,mIAA0C;AAAA,cAAjC0X,SAAiC;;AACxC,eAAKkmB,YAAL,CAAkBv8B,QAAQ5F,QAA1B,EAAoC4F,QAAQ3F,MAA5C,EAAoD,CAClD,gCAAmBgc,UAAUlW,KAA7B,CADkD,CAApD;AAGD;AALiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMnC;;AAED;;;;;;;;;;;uCAQmBs6B,U,EAAY;AAC7B,cAAQA,WAAW/8B,GAAnB;AACE;AACE,iBAAO,KAAK8gC,oBAAL,CAA0B/D,UAA1B,CAAP;AACF;AACE,iBAAO,KAAKgE,0BAAL,CAAgChE,UAAhC,CAAP;AACF;AACE,iBAAO,KAAKiE,0BAAL,CAAgCjE,UAAhC,CAAP;AACF;AACE,iBAAO,KAAKkE,gBAAL,CAAsBlE,UAAtB,CAAP;AACF;AACE,iBAAO,KAAKmE,iBAAL,CAAuBnE,UAAvB,CAAP;AACF;AACE,iBAAO,KAAKoE,iBAAL,CAAuBpE,UAAvB,CAAP;AACF;AACE,iBAAO,KAAKqE,qBAAL,CAA2BrE,UAA3B,CAAP;AACF;AACE,iBAAO,KAAKsE,2BAAL,CAAiCtE,UAAjC,CAAP;AACF;AACE,iBAAO,KAAKuE,wBAAL,CAA8BvE,UAA9B,CAAP;AACF;AACE,gBAAMzgC,MACE,2CACAgB,OAAO2C,MAAP,CAAc88B,WAAW/8B,GAAzB,CAFF,CAAN;AApBJ;AAyBD;;;yCAEoB+8B,U,EAAY;AAC/B,WAAKsB,QAAL,CAActB,WAAWrgC,QAAzB,EAAmCqgC,WAAWpgC,MAA9C,EACE,+BAAkBogC,WAAW1iC,YAAX,CAAwBoI,KAA1C,CADF;AAGD;;;+CAE0Bs6B,U,EAAY;AACrC,WAAKsB,QAAL,CAActB,WAAWrgC,QAAzB,EAAmCqgC,WAAWpgC,MAA9C,EACE,8BAAiBogC,WAAWz5B,MAAX,CAAkBb,KAAnC,CADF;AAGD;;;+CAE0Bs6B,U,EAAY;AACrC,WAAKsB,QAAL,CAActB,WAAWrgC,QAAzB,EAAmCqgC,WAAWpgC,MAA9C,EACE,6BAAgBogC,WAAWv9B,MAAX,CAAkBiD,KAAlC,CADF;AAGD;;;qCAEgBs6B,U,EAAY;AAAA;AAAA;AAAA;;AAAA;AAC3B,8BAAoBA,WAAWt5B,QAA/B,mIAAyC;AAAA,cAAhC6N,OAAgC;;AACvC,eAAKkuB,kBAAL,CAAwBluB,OAAxB;AACD;AAH0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAI3B,WAAK+sB,QAAL,CAActB,WAAWrgC,QAAzB,EAAmCqgC,WAAWpgC,MAA9C,EACE,2BAAcogC,WAAWt5B,QAAX,CAAoBzJ,MAAlC,CADF;AAGD;;AAED;;;;;;;;;sCAMkB+iC,U,EAAY;AAC5B,WAAKyC,kBAAL,CAAwBzC,WAAWp5B,KAAnC;AACA,WAAK67B,kBAAL,CAAwBzC,WAAWl5B,IAAnC;AACA,UAAIk5B,WAAWn5B,MAAX,KAAsB,IAA1B,EAAgC;AAC9B,aAAKy6B,QAAL,CACEtB,WAAWrgC,QADb,EACuBqgC,WAAWpgC,MADlC,EAEE,gCAAmB,YAAnB,EAAiC,CAAjC,CAFF;AAID,OALD,MAKO;AACL,aAAK6iC,kBAAL,CAAwBzC,WAAWn5B,MAAnC;AACA,aAAKy6B,QAAL,CACEtB,WAAWrgC,QADb,EACuBqgC,WAAWpgC,MADlC,EAEE,gCAAmB,sBAAnB,EAA2C,CAA3C,CAFF;AAID;AACF;;;sCAEiBogC,U,EAAY;AAAA;AAAA;AAAA;;AAAA;AAC5B,8BAAoBA,WAAWt5B,QAA/B,mIAAyC;AAAA,cAAhC6N,OAAgC;;AACvC,eAAKkuB,kBAAL,CAAwBluB,OAAxB;AACD;AAH2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAI5B,WAAK+sB,QAAL,CAActB,WAAWrgC,QAAzB,EAAmCqgC,WAAWpgC,MAA9C,EACE,4BAAeogC,WAAWt5B,QAAX,CAAoBzJ,MAAnC,CADF;AAGD;;;0CAEqB+iC,U,EAAY;AAChC,UAAIhiC,aAAa,EAAjB;AADgC;AAAA;AAAA;;AAAA;AAEhC,+BAAyBgiC,WAAW/4B,aAApC,wIAAmD;AAAA,cAA1CE,YAA0C;;AACjD,eAAKs7B,kBAAL,CAAwBt7B,aAAazB,KAArC;AACA1H,qBAAW4E,IAAX,CAAgBuE,aAAa7K,SAAb,CAAuBoJ,KAAvC;AACD;AAL+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMhC,UAAIrJ,kBAAkB2jC,WAAW3jC,eAAX,CAA2BqJ,KAAjD;AACA,UAAIrB,WAAW,KAAKguB,SAAL,CAAemN,eAAf,CAA+BnjC,eAA/B,CAAf;AACA,WAAKilC,QAAL,CAActB,WAAWrgC,QAAzB,EAAmCqgC,WAAWpgC,MAA9C,EACE,gCAAmByE,QAAnB,EAA6BhI,eAA7B,EAA8C2B,UAA9C,CADF;AAGD;;;gDAE2BgiC,U,EAAY;AACtC,WAAKyC,kBAAL,CAAwBzC,WAAW34B,QAAnC;AACA,UAAIrJ,aAAa,EAAjB;AAFsC;AAAA;AAAA;;AAAA;AAGtC,+BAAyBgiC,WAAW/4B,aAApC,wIAAmD;AAAA,cAA1CE,YAA0C;;AACjD,eAAKs7B,kBAAL,CAAwBt7B,aAAazB,KAArC;AACA1H,qBAAW4E,IAAX,CAAgBuE,aAAa7K,SAAb,CAAuBoJ,KAAvC;AACD;AANqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOtC,UAAIrJ,kBAAkB2jC,WAAW3jC,eAAX,CAA2BqJ,KAAjD;AACA,UAAIrB,WAAW,KAAKguB,SAAL,CAAemN,eAAf,CAA+BnjC,eAA/B,CAAf;AACA,WAAKilC,QAAL,CAActB,WAAWrgC,QAAzB,EAAmCqgC,WAAWpgC,MAA9C,EACE,kCAAqByE,QAArB,EAA+BhI,eAA/B,EAAgD2B,UAAhD,CADF;AAGD;;AAED;;;;;;;;;;6CAOyBgiC,U,EAAY;AACnC,UAAIz4B,eAAey4B,WAAWz4B,YAAX,CAAwB7B,KAA3C;AACA,UAAI6B,iBAAiB,IAArB,EAA2B;AACzB,aAAKi9B,2BAAL,CAAiCxE,UAAjC;AACD,OAFD,MAEO,IAAIz4B,iBAAiB,IAArB,EAA2B;AAChC,aAAKk9B,0BAAL,CAAgCzE,UAAhC;AACD,OAFM,MAEA;AAAA;AAAA;AAAA;;AAAA;AACL,iCAAqBA,WAAWjgC,IAAhC,wIAAsC;AAAA,gBAA7B2/B,QAA6B;;AACpC,iBAAK+C,kBAAL,CAAwB/C,QAAxB;AACD;AAHI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIL,YAAI,KAAKtN,WAAL,CAAiB9W,UAAjB,CAA4B/T,YAA5B,CAAJ,EAA+C;AAC7C,eAAKm9B,iCAAL,CAAuC1E,UAAvC;AACD,SAFD,MAEO,IAAI,KAAK3N,SAAL,CAAe/W,UAAf,CAA0B/T,YAA1B,CAAJ,EAA6C;AAClD,eAAKo9B,mCAAL,CAAyC3E,UAAzC;AACD,SAFM,MAEA,IAAI,KAAK3N,SAAL,CAAe5W,OAAf,CAAuBlU,YAAvB,CAAJ,EAA0C;AAC/C,eAAKq9B,qCAAL,CAA2C5E,UAA3C;AACD,SAFM,MAEA;AACL,gBAAMzgC,MACJ,eAAegI,YAAf,GAA8B,4BAD1B,CAAN;AAGD;AACF;AACF;;AAED;;;;;;;;;;;gDAQ4By4B,U,EAAY;AACtC,UAAI6E,QAAQ7E,WAAWjgC,IAAX,CAAgB,CAAhB,CAAZ;AACA,UAAI+kC,QAAQ9E,WAAWjgC,IAAX,CAAgB,CAAhB,CAAZ;AACA,UAAI6iC,WAAW,KAAKD,WAAL,EAAf;AACA,WAAKF,kBAAL,CAAwBoC,KAAxB;AACA,WAAK/C,YAAL,CAAkB9B,WAAWrgC,QAA7B,EAAuCqgC,WAAWpgC,MAAlD,EAA0D,CACxD,4BAAe,yBAAkB,gBAAK,WAAL,CAAlB,EAAqC,EAArC,CAAf,CADwD,EAExD,kCAAqB,gBAAK,YAAL,CAArB,EAAyCgjC,QAAzC,CAFwD,EAGxD,uBAHwD,CAA1D;AAKA,WAAKH,kBAAL,CAAwBqC,KAAxB;AACA,WAAKhD,YAAL,CAAkB9B,WAAWrgC,QAA7B,EAAuCqgC,WAAWpgC,MAAlD,EAA0D,CACxD,4BAAe,yBAAkB,gBAAK,WAAL,CAAlB,EAAqC,EAArC,CAAf,CADwD,EAExD,wBAAWgjC,QAAX,CAFwD,CAA1D;AAID;;AAED;;;;;;;;;;;+CAQ2B5C,U,EAAY;AACrC,UAAI6E,QAAQ7E,WAAWjgC,IAAX,CAAgB,CAAhB,CAAZ;AACA,UAAI+kC,QAAQ9E,WAAWjgC,IAAX,CAAgB,CAAhB,CAAZ;AACA,UAAI6iC,WAAW,KAAKD,WAAL,EAAf;AACA,WAAKF,kBAAL,CAAwBoC,KAAxB;AACA,WAAK/C,YAAL,CAAkB9B,WAAWrgC,QAA7B,EAAuCqgC,WAAWpgC,MAAlD,EAA0D,CACxD,4BAAe,yBAAkB,gBAAK,WAAL,CAAlB,EAAqC,EAArC,CAAf,CADwD,EAExD,kCAAqB,gBAAK,WAAL,CAArB,EAAwCgjC,QAAxC,CAFwD,EAGxD,uBAHwD,CAA1D;AAKA,WAAKH,kBAAL,CAAwBqC,KAAxB;AACA,WAAKhD,YAAL,CAAkB9B,WAAWrgC,QAA7B,EAAuCqgC,WAAWpgC,MAAlD,EAA0D,CACxD,4BAAe,yBAAkB,gBAAK,WAAL,CAAlB,EAAqC,EAArC,CAAf,CADwD,EAExD,wBAAWgjC,QAAX,CAFwD,CAA1D;AAID;;;sDAEiC5C,U,EAAY;AAC5C,WAAKsB,QAAL,CAActB,WAAWrgC,QAAzB,EAAmCqgC,WAAWpgC,MAA9C,EACE,gCAAmBogC,WAAWz4B,YAAX,CAAwB7B,KAA3C,EAAkDs6B,WAAWjgC,IAAX,CAAgB9C,MAAlE,CADF;AAGD;;;wDAEmC+iC,U,EAAY;AAC9C,WAAKsB,QAAL,CAActB,WAAWrgC,QAAzB,EAAmCqgC,WAAWpgC,MAA9C,EACE,uBAAUogC,WAAWz4B,YAAX,CAAwB7B,KAAlC,EAAyCs6B,WAAWjgC,IAAX,CAAgB9C,MAAzD,CADF;AAGD;;;0DAEqC+iC,U,EAAY;AAChD,WAAK8B,YAAL,CAAkB9B,WAAWrgC,QAA7B,EAAuCqgC,WAAWpgC,MAAlD,EAA0D,CACxD,wCAA2BogC,WAAWz4B,YAAX,CAAwB7B,KAAnD,CADwD,CAA1D;AAGD;;AAED;;AAEA;;;;;6BAES/F,Q,EAAUC,M,EAAQqe,W,EAAa;AACtCA,kBAAYte,QAAZ,GAAuBA,QAAvB;AACAse,kBAAYre,MAAZ,GAAqBA,MAArB;AACA,WAAK4yB,KAAL,CAAWuS,OAAX,CAAmB9mB,WAAnB;AACD;;;iCAEYte,Q,EAAUC,M,EAAQme,Y,EAAc;AAAA;AAAA;AAAA;;AAAA;AAC3C,+BAAwBA,YAAxB,wIAAsC;AAAA,cAA7BE,WAA6B;;AACpC,eAAKqjB,QAAL,CAAc3hC,QAAd,EAAwBC,MAAxB,EAAgCqe,WAAhC;AACD;AAH0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAI5C;;AAED;;;;kCACc;AACZ,UAAII,QAAQ,OAAO,KAAK8iB,UAAL,CAAgBzlC,QAAhB,EAAnB;AACA,WAAKylC,UAAL;AACA,aAAO9iB,KAAP;AACD;;AAED;;;;qCACiB;AACf,UAAI2I,IAAI,OAAO,KAAKoa,aAAL,CAAmB1lC,QAAnB,EAAf;AACA,WAAK0lC,aAAL;AACA,aAAOpa,CAAP;AACD;;;;;;;;;;;;;;;;;;;;ACngCH;;AA4BA;;AAWA;;AACA;;AACA;;;;;;;;AAEA;AACA,IAAMge,iBAAiBzkC,OAAOC,GAAP,CAAW,gBAAX,CAAvB;;AAEA;;;IAEMykC,gB;;;AACJ,4BAAYhiC,GAAZ,EAAiB;AAAA;;AAAA,oIACT1C,OAAO2C,MAAP,CAAcD,GAAd,CADS;;AAEf,UAAKA,GAAL,GAAWA,GAAX;AAFe;AAGhB;;;EAJ4B1D,K;;AAO/B;;;IACM2lC,kB;;;AACJ,8BAAYnjB,WAAZ,EAAyB;AAAA;;AAAA,yIACjBijB,cADiB;;AAEvB,WAAKjjB,WAAL,GAAmBA,WAAnB;AAFuB;AAGxB;;;EAJ8BkjB,gB;;AAOjC,SAASt9B,IAAT,CAAchI,QAAd,EAAwBC,MAAxB,EAAgCE,MAAhC,EAAwCC,IAAxC,EAA8C;AAC5C,QAAM,gCAAoBJ,QAApB,EAA8BC,MAA9B,EAAsCE,MAAtC,EAA8CC,IAA9C,CAAN;AACD;;AAED;;;;;;;;;;;;IAWMolC,K;AACJ,iBAAY5nC,WAAZ,EAAyB6nC,kBAAzB,EAA6C;AAAA;;AAC3C,SAAKC,YAAL,GAAoB9nC,WAApB;AACA,SAAK+nC,mBAAL,GAA2BF,kBAA3B;AACA,SAAKG,UAAL,GAAkB,EAAlB;AACA,SAAKC,MAAL,GAAc,EAAd;AACD;;;;gCAcWppC,I,EAAMsJ,K,EAAO;AACvB,WAAK6/B,UAAL,CAAgBnpC,IAAhB,IAAwBsJ,KAAxB;AACD;;;kCAEatJ,I,EAAMsJ,K,EAAO;AACzB,aAAO,KAAK6/B,UAAL,CAAgBnpC,IAAhB,CAAP;AACD;;;gCAEWA,I,EAAM;AAChB,UAAIA,QAAQ,KAAKmpC,UAAjB,EAA6B;AAC3B,eAAO,KAAKA,UAAL,CAAgBnpC,IAAhB,CAAP;AACD,OAFD,MAEO;AACL,eAAO,IAAP;AACD;AACF;;;iCAEY;AACX,aAAO,KAAKopC,MAAL,CAAYvoC,MAAZ,KAAuB,CAA9B;AACD;;;8BAESyI,K,EAAO;AACf,WAAK8/B,MAAL,CAAY5iC,IAAZ,CAAiB8C,KAAjB;AACD;;;+BAEU;AACT,UAAI,KAAK8/B,MAAL,CAAYvoC,MAAZ,KAAuB,CAA3B,EAA8B;AAC5B,cAAMsC,MAAM,2DAAN,CAAN;AACD;AACD,aAAO,KAAKimC,MAAL,CAAY,KAAKA,MAAL,CAAYvoC,MAAZ,GAAqB,CAAjC,CAAP;AACD;;;+BAEU;AACT,UAAI,KAAKuoC,MAAL,CAAYvoC,MAAZ,KAAuB,CAA3B,EAA8B;AAC5B,cAAMsC,MAAM,0CAAN,CAAN;AACD;AACD,aAAO,KAAKimC,MAAL,CAAYnhB,GAAZ,EAAP;AACD;;;wBAhDiB;AAChB,aAAO,KAAKghB,YAAZ;AACD;;;wBAEwB;AACvB,aAAO,KAAKC,mBAAZ;AACD,K;sBAEsB5/B,K,EAAO;AAC5B,WAAK4/B,mBAAL,GAA2B5/B,KAA3B;AACD;;;;;;AAyCH;;;;;;;;;;;;IAUa+/B,c,WAAAA,c;AAEX,0BAAYpmC,IAAZ,EAAkBuzB,YAAlB,EAAgC;AAAA;;AAC9B,SAAKJ,KAAL,GAAanzB,IAAb;;AAEA;;;;;AAKA,SAAKqmC,aAAL,GAAqB,KAAKlT,KAAL,CAAWrU,YAAX,EAArB;;AAEA;;;;;;;;;;AAUA,SAAKwnB,UAAL,GAAkB,EAAlB;AACA,SAAKA,UAAL,CAAgB/iC,IAAhB,CAAqB,IAAIuiC,KAAJ,CAAU,SAAV,EAAqB,CAArB,CAAuB,wBAAvB,CAArB;;AAEA;;;;;;;;;;;;;;;;AAgBA,SAAKS,iBAAL,GAAyB,CAAChT,YAAD,CAAzB;;AAEA;;;;;;AAMA,SAAKR,WAAL,GAAmB,gCAAnB;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,SAAKyT,iBAAL,GAAyB,IAAzB;AAED;;;;0BAEK;AACJ,aAAO,KAAKC,cAAL,CAAoB,CAApB,CAAP;AACD;;AAED;;;;;mCAEevnC,S,EAAW;AACxB,aAAO,KAAK40B,6BAAL,CAAmC50B,SAAnC,EAA8C,IAA9C,CAAP;AACD;;AAED;;;;;;;;;wCAMoB8kB,U,EAAY9kB,S,EAAW;AACzC,WAAKonC,UAAL,GAAkB,CAAC,IAAIR,KAAJ,CAAU,SAAV,EAAqB,CAArB,CAAuB,wBAAvB,CAAD,CAAlB;AACA,WAAKY,aAAL,GAAqBC,SAArB,CAA+B3iB,UAA/B;AACA,aAAO,KAAKyiB,cAAL,CAAoBvnC,SAApB,CAAP;AACD;;AAED;;;;;;;;;;;;;;;;kDAa8BA,S,EAAW20B,gB,EAAkB;AACzD,UAAI+S,YAAY,IAAIC,IAAJ,GAAWC,OAAX,EAAhB;AACA,WAAKN,iBAAL,GAAyB3S,gBAAzB;AACA,WAAKkT,aAAL,CAAmB,SAAnB;AACA,UAAI;AACF,eAAO,IAAP,EAAa;AACX,eAAKC,KAAL;AACA,eAAKC,gBAAL,CAAsBL,SAAtB,EAAiC1nC,SAAjC;AACD;AACF,OALD,CAKE,OAAOqG,SAAP,EAAkB;AAClB,YAAIA,UAAU3B,GAAV,KAAkB+hC,cAAtB,EAAsC;AACpC,iBAAOpgC,UAAUmd,WAAjB;AACD,SAFD,MAEO;AACL,gBAAMnd,SAAN;AACD;AACF;AACF;;;qCAEgBqhC,S,EAAW1nC,S,EAAW;AACrC,UAAIA,YAAY,CAAZ,IAAkB,IAAI2nC,IAAJ,GAAWC,OAAX,KAAuBF,SAAxB,GAAqC1nC,SAA1D,EAAqE;AACnE,YAAI0f,cAAc,KAAKsoB,mBAAL,EAAlB;AACA5+B,aAAKsW,YAAYte,QAAjB,EAA2Bse,YAAYre,MAAvC,EAA+C,SAA/C,EAA0D,CAACrB,SAAD,CAA1D;AACD;AACF;;;kCAEahB,W,EAAa;AACzB,UAAI,KAAKsoC,iBAAL,KAA2B,IAA/B,EAAqC;AACnC,YAAI5nB,cAAc,KAAKsoB,mBAAL,EAAlB;AACA,aAAKV,iBAAL,CACEtoC,WADF,EACe0gB,YAAYte,QAD3B,EACqC,KAAKgmC,UAD1C,EACsD,KAAKz6B,WAAL,EADtD;AAGD;AACF;;;kCAEa;AACZ,aAAO,KAAK06B,iBAAL,CAAuB,KAAKA,iBAAL,CAAuB3oC,MAAvB,GAAgC,CAAvD,CAAP;AACD;;;mCAEciO,W,EAAa;AAC1B,WAAK06B,iBAAL,CAAuB,KAAKA,iBAAL,CAAuB3oC,MAAvB,GAAgC,CAAvD,IAA4DiO,WAA5D;AACD;;AAED;;;;oCACgB;AACd,aAAO,KAAKy6B,UAAL,CAAgB,KAAKA,UAAL,CAAgB1oC,MAAhB,GAAyB,CAAzC,CAAP;AACD;;AAED;;;;;0CAEsB;AACpB,aAAO,KAAKu1B,KAAL,CAAWgU,EAAX,CAAc,KAAKT,aAAL,GAAqBX,kBAAnC,CAAP;AACD;;AAED;;;;;;;;4BAKQ;AACN,cAAQ,KAAKmB,mBAAL,GAA2BnoB,MAAnC;AACE;AACE,iBAAO,KAAKqoB,gBAAL,EAAP;AACF;AACE,iBAAO,KAAKC,eAAL,EAAP;AACF;AACE,iBAAO,KAAKC,iBAAL,EAAP;AACF;AACE,iBAAO,KAAKC,gBAAL,EAAP;AACF;AACE,iBAAO,KAAKC,kBAAL,EAAP;AACF;AACE,iBAAO,KAAKC,UAAL,EAAP;AACF;AACE,iBAAO,KAAKC,SAAL,EAAP;AACF;AACE,iBAAO,KAAKC,gBAAL,EAAP;AACF;AACE,iBAAO,KAAKC,oBAAL,EAAP;AACF;AACE,iBAAO,KAAKC,gBAAL,EAAP;AACF;AACE,iBAAO,KAAKC,SAAL,EAAP;AACF;AACE,iBAAO,KAAKC,WAAL,EAAP;AACF;AACE,iBAAO,KAAKC,cAAL,EAAP;AACF;AACE,iBAAO,KAAKC,aAAL,EAAP;AACF;AACE,iBAAO,KAAKC,kBAAL,EAAP;AACF;AACE,iBAAO,KAAKC,oBAAL,EAAP;AACF;AACE,iBAAO,KAAKC,uBAAL,EAAP;AACF;AACE,iBAAO,KAAKC,uBAAL,EAAP;AACF;AACE,iBAAO,KAAKC,0BAAL,EAAP;AACF;AACE,iBAAO,KAAKC,QAAL,EAAP;AACF;AACE,iBAAO,KAAKC,QAAL,EAAP;AACF;AACE,iBAAO,KAAKC,QAAL,EAAP;AACF;AACE,iBAAO,KAAKC,kBAAL,EAAP;AACF;AACE,iBAAO,KAAKC,cAAL,EAAP;AACF;AACE,iBAAO,KAAKC,iBAAL,EAAP;AACF;AACE,iBAAO,KAAKC,cAAL,EAAP;AACF;AACE,gBAAM3oC,MACE,gBACAgB,OAAO2C,MAAP,CAAc,KAAKqjC,mBAAL,GAA2BnoB,MAAzC,CADA,GAEA,kBAHF,CAAN;AAtDJ;AA4DD;;;uCAEkB;AACjB,UAAI+pB,QAAQ,KAAKpC,aAAL,EAAZ;AACA,UAAI9nB,cAAc,KAAKsoB,mBAAL,EAAlB;AACA4B,YAAMnC,SAAN,CAAgB,wBAAiB/nB,YAAY1X,MAA7B,CAAhB;AACA4hC,YAAM/C,kBAAN;AACD;;;sCAEiB;AAChB,UAAI+C,QAAQ,KAAKpC,aAAL,EAAZ;AACA,UAAI9nB,cAAc,KAAKsoB,mBAAL,EAAlB;AACA4B,YAAMnC,SAAN,CAAgB,uBAAgB/nB,YAAYxb,MAA5B,CAAhB;AACA0lC,YAAM/C,kBAAN;AACD;;;wCAEmB;AAClB,UAAI+C,QAAQ,KAAKpC,aAAL,EAAZ;AACA,UAAI9nB,cAAc,KAAKsoB,mBAAL,EAAlB;AACA,UAAI7gC,QAAQyiC,MAAMC,WAAN,CAAkBnqB,YAAY3gB,YAA9B,CAAZ;AACA,UAAIoI,UAAU,IAAd,EAAoB;AAClBiC,aACEsW,YAAYte,QADd,EACwBse,YAAYre,MADpC,EAEE,oBAFF,EAEwB,CAACqe,YAAY3gB,YAAb,CAFxB;AAID;AACD6qC,YAAMnC,SAAN,CAAgBtgC,KAAhB;AACAyiC,YAAM/C,kBAAN;AACD;;;uCAEkB;AACjB,UAAI+C,QAAQ,KAAKpC,aAAL,EAAZ;AACA,UAAI9nB,cAAc,KAAKsoB,mBAAL,EAAlB;AACA,UAAI8B,WAAWF,MAAMG,QAAN,EAAf;;AAEA;AACA,UAAIC,WAAWJ,MAAMC,WAAN,CAAkBnqB,YAAY3gB,YAA9B,CAAf;AACA,UAAIirC,aAAa,IAAjB,EAAuB;AACrB,YAAI5qC,UAAU4qC,SAAS1rC,IAAT,EAAd;AACA,YAAIe,UAAUyqC,SAASxrC,IAAT,EAAd;AACA,YAAI,sBAAUc,OAAV,EAAmBC,OAAnB,MAAgC,IAApC,EAA0C;AACxC+J,eACEsW,YAAYte,QADd,EACwBse,YAAYre,MADpC,EAEE,kCAFF,EAEsC,CAClCqe,YAAY3gB,YADsB,EAElCK,QAAQjC,QAAR,EAFkC,EAGlCkC,QAAQlC,QAAR,EAHkC,CAFtC;AAQD;AACF;;AAED;AACAysC,YAAMK,WAAN,CAAkBvqB,YAAY3gB,YAA9B,EAA4C+qC,QAA5C;AACAF,YAAM/C,kBAAN;AACD;;;yCAEoB;AACnB,UAAI+C,QAAQ,KAAKpC,aAAL,EAAZ;AACA,UAAI9nB,cAAc,KAAKsoB,mBAAL,EAAlB;AACA4B,YAAMM,aAAN,CAAoBxqB,YAAY3gB,YAAhC;AACA6qC,YAAM/C,kBAAN;AACD;;;iCAEY;AACX;AACA,UAAI+C,QAAQ,KAAKpC,aAAL,EAAZ;AACAoC,YAAM/C,kBAAN;AACD;;;gCAEW;AACV,UAAI+C,QAAQ,KAAKpC,aAAL,EAAZ;AACA,UAAI9nB,cAAc,KAAKsoB,mBAAL,EAAlB;AACA4B,YAAM/C,kBAAN,GAA2B,KAAKM,aAAL,CAAmBznB,YAAYkB,WAA/B,CAA3B;AACD;;;uCAEkB;AACjB,UAAIgpB,QAAQ,KAAKpC,aAAL,EAAZ;AACA,UAAI9nB,cAAc,KAAKsoB,mBAAL,EAAlB;AACA,UAAI7gC,QAAQyiC,MAAMG,QAAN,EAAZ,CAHiB,CAGa;AAC9B,UAAI5iC,MAAMzC,GAAN,2BAA6ByC,MAAMrJ,eAAN,KAA0B,OAA3D,EAAoE;AAClE8rC,cAAM/C,kBAAN,GAA2B,KAAKM,aAAL,CAAmBznB,YAAYkB,WAA/B,CAA3B;AACD,OAFD,MAEO;AACLgpB,cAAM/C,kBAAN;AACD;AACF;;;2CAEsB;AACrB,UAAI+C,QAAQ,KAAKpC,aAAL,EAAZ;AACA,UAAI9nB,cAAc,KAAKsoB,mBAAL,EAAlB;AACA,UAAI7gC,QAAQyiC,MAAMO,QAAN,EAAZ,CAHqB,CAGS;AAC9B,UAAIhjC,MAAMzC,GAAN,2BACGyC,MAAMrJ,eAAN,KAA0B4hB,YAAY5hB,eAD7C,EAC8D;AAC5D8rC,cAAM/C,kBAAN,GAA2B,KAAKM,aAAL,CAAmBznB,YAAYkB,WAA/B,CAA3B;AACD,OAHD,MAGO;AACLgpB,cAAM/C,kBAAN;AACD;AACF;;;uCAEkB;AACjB,UAAI+C,QAAQ,KAAKpC,aAAL,EAAZ;AACA,UAAI9nB,cAAc,KAAKsoB,mBAAL,EAAlB;AACA,UAAI7gC,QAAQyiC,MAAMO,QAAN,EAAZ,CAHiB,CAGa;AAC9B,UAAIhjC,MAAMzC,GAAN,uBAAyByC,MAAM3H,IAAN,OAAiBkgB,YAAYlgB,IAA1D,EAAgE;AAC9DoqC,cAAM/C,kBAAN,GAA2B,KAAKM,aAAL,CAAmBznB,YAAYkB,WAA/B,CAA3B;AACD,OAFD,MAEO;AACLgpB,cAAM/C,kBAAN;AACD;AACF;;;gCAEW;AACV,UAAIuD,cAAc,KAAK5C,aAAL,EAAlB;AACA,UAAI9nB,cAAc,KAAKsoB,mBAAL,EAAlB;;AAEA;AACA,UAAIqC,WAAW,IAAIzD,KAAJ,CACElnB,YAAYkB,WADd,EAEE,KAAKumB,aAAL,CAAmBznB,YAAYkB,WAA/B,CAFF,CAAf;AAIA,WAAKwmB,UAAL,CAAgB/iC,IAAhB,CAAqBgmC,QAArB;;AAEA;AACA,WAAK,IAAIp3B,IAAI,CAAb,EAAgBA,IAAIyM,YAAYuB,KAAhC,EAAuChO,GAAvC,EAA4C;AAC1C,YAAIm3B,YAAYE,UAAZ,EAAJ,EAA8B;AAC5BlhC,eACEsW,YAAYte,QADd,EACwBse,YAAYre,MADpC,EAEE,mBAFF,EAEuB,CAACqe,YAAYkB,WAAb,CAFvB;AAID;AACDypB,iBAAS5C,SAAT,CAAmB2C,YAAYL,QAAZ,EAAnB;AACD;AACF;;;kCAEa;AACZ,UAAIQ,aAAa,KAAK/C,aAAL,EAAjB;;AAEA;AACA,WAAKK,aAAL,CAAmB0C,WAAWvrC,WAA9B;;AAEA,UAAIwkB,oBAAJ;AACA,UAAI+mB,WAAWD,UAAX,EAAJ,EAA6B;AAC3B9mB,sBAAc,IAAd;AACD,OAFD,MAEO;AACLA,sBAAc+mB,WAAWR,QAAX,EAAd;AACA,YAAI,CAACQ,WAAWD,UAAX,EAAL,EAA8B;AAC5B,gBAAMtpC,MAAM,2BAAN,CAAN;AACD;AACF;;AAED,WAAKomC,UAAL,CAAgBthB,GAAhB;AACA,UAAI,KAAKshB,UAAL,CAAgB1oC,MAAhB,KAA2B,CAA/B,EAAkC;AAChC;;AAEA,cAAM,IAAIioC,kBAAJ,CAAuBnjB,WAAvB,CAAN;AACD,OAJD,MAIO;AACL;;AAEA,YAAIgnB,aAAa,KAAKhD,aAAL,EAAjB;AACA,YAAIhkB,gBAAgB,IAApB,EAA0B;AACxBgnB,qBAAW/C,SAAX,CAAqBjkB,WAArB;AACD;AACDgnB,mBAAW3D,kBAAX;AACD;AACF;;;qCAEgB;AACf,UAAI+C,QAAQ,KAAKpC,aAAL,EAAZ;AACA,UAAI9nB,cAAc,KAAKsoB,mBAAL,EAAlB;;AAEA,UAAI7/B,WAAW,EAAf;AACA,WAAK,IAAI8K,IAAI,CAAb,EAAgBA,IAAIyM,YAAYlgB,IAAhC,EAAsCyT,GAAtC,EAA2C;AACzC9K,iBAAS6kB,OAAT,CAAiB4c,MAAMG,QAAN,EAAjB;AACD;AACDH,YAAMnC,SAAN,CAAgB,sBAAet/B,QAAf,CAAhB;AACAyhC,YAAM/C,kBAAN;AACD;;;oCAEe;AACd,UAAI+C,QAAQ,KAAKpC,aAAL,EAAZ;AACA,UAAI9nB,cAAc,KAAKsoB,mBAAL,EAAlB;;AAEA,UAAI7/B,WAAW,EAAf;AACA,WAAK,IAAI8K,IAAI,CAAb,EAAgBA,IAAIyM,YAAYlgB,IAAhC,EAAsCyT,GAAtC,EAA2C;AACzC9K,iBAAS6kB,OAAT,CAAiB4c,MAAMG,QAAN,EAAjB;AACD;;AAED;AACA,UAAI93B,cAAc,oBAAlB;AACA,UAAI3S,QAAQ,CAAZ;AAXc;AAAA;AAAA;;AAAA;AAYd,6BAAoB6I,QAApB,gIAA8B;AAAA,cAArB6N,OAAqB;;AAC5B,cAAI5W,UAAU6S,WAAd;AACA,cAAI5S,UAAU2W,QAAQ1X,IAAR,EAAd;AACA2T,wBAAc,sBAAU7S,OAAV,EAAmBC,OAAnB,CAAd;AACA,cAAI4S,gBAAgB,IAApB,EAA0B;AACxB7I,iBACEsW,YAAYte,QADd,EACwBse,YAAYre,MADpC,EAEE,qCAFF,EAEyC,CACrC/B,KADqC,EAErCF,QAAQjC,QAAR,EAFqC,EAGrCkC,QAAQlC,QAAR,EAHqC,CAFzC;AAQD;AACDmC;AACD;AA3Ba;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA4BdsqC,YAAMnC,SAAN,CAAgB,qBAAct/B,QAAd,CAAhB;AACAyhC,YAAM/C,kBAAN;AACD;;;yCAEoB;AACnB,UAAI+C,QAAQ,KAAKpC,aAAL,EAAZ;AACA,UAAI9nB,cAAc,KAAKsoB,mBAAL,EAAlB;;AAEA,UAAI5xB,SAAS,EAAb;AACA,UAAIpZ,IAAI0iB,YAAYjgB,UAAZ,CAAuBf,MAA/B;AACA,WAAK,IAAIuU,IAAI,CAAb,EAAgBA,IAAIjW,CAApB,EAAuBiW,GAAvB,EAA4B;AAC1B,YAAIlV,YAAY2hB,YAAYjgB,UAAZ,CAAuBzC,IAAIiW,CAAJ,GAAQ,CAA/B,CAAhB;AACAmD,eAAOrY,SAAP,IAAoB6rC,MAAMG,QAAN,EAApB;AACD;AACDH,YAAMnC,SAAN,CACE,0BACE/nB,YAAY5Z,QADd,EACwB4Z,YAAY5hB,eADpC,EACqDsY,MADrD,CADF;AAKAwzB,YAAM/C,kBAAN;AACD;;;2CAEsB;AACrB,UAAI+C,QAAQ,KAAKpC,aAAL,EAAZ;AACA,UAAI9nB,cAAc,KAAKsoB,mBAAL,EAAlB;;AAEA,UAAIzxB,YAAY,EAAhB;AACA,UAAIk0B,gBAAgB,EAApB;AACA,UAAIztC,IAAI0iB,YAAYjgB,UAAZ,CAAuBf,MAA/B;AACA,WAAK,IAAIuU,IAAI,CAAb,EAAgBA,IAAIjW,CAApB,EAAuBiW,GAAvB,EAA4B;AAC1B,YAAIlV,YAAY2hB,YAAYjgB,UAAZ,CAAuBzC,IAAIiW,CAAJ,GAAQ,CAA/B,CAAhB;AACAsD,kBAAUxY,SAAV,IAAuB6rC,MAAMG,QAAN,EAAvB;AACAU,sBAAczd,OAAd,CAAsBjvB,SAAtB;AACD;;AAED;AACA,UAAI2sC,YAAYd,MAAMG,QAAN,EAAhB;AACA,UAAIW,UAAUhmC,GAAV,uBAAJ,EAAmC;AACjC0E,aACEsW,YAAYte,QADd,EACwBse,YAAYre,MADpC,EAEE,4BAFF,EAEgC,CAC5Bqe,YAAY5hB,eADgB,EAE5B,gBAAKkE,OAAO2C,MAAP,CAAc+lC,UAAUhmC,GAAxB,CAAL,CAF4B,CAFhC;AAOD;AACD,UAAIgmC,UAAU5sC,eAAV,KAA8B4hB,YAAY5hB,eAA9C,EAA+D;AAC7DsL,aACEsW,YAAYte,QADd,EACwBse,YAAYre,MADpC,EAEE,8BAFF,EAEkC,CAC9Bqe,YAAY5hB,eADkB,EAE9B4sC,UAAU5sC,eAFoB,CAFlC;AAOD;AACD,UAAI4sC,UAAU5kC,QAAV,KAAuB4Z,YAAY5Z,QAAvC,EAAiD;AAC/C,cAAM9E,MAAM,sDAAN,CAAN;AACD;;AAED;AArCqB;AAAA;AAAA;;AAAA;AAsCrB,8BAAsBypC,aAAtB,mIAAqC;AAAA,cAA5B1sC,UAA4B;;AACnC,cAAIqB,UAAUsrC,UAAUt0B,MAAV,CAAiBrY,UAAjB,EAA4BO,IAA5B,EAAd;AACA,cAAIe,UAAUkX,UAAUxY,UAAV,EAAqBO,IAArB,EAAd;AACA,cAAI,sBAAUc,OAAV,EAAmBC,OAAnB,MAAgC,IAApC,EAA0C;AACxC+J,iBACEsW,YAAYte,QADd,EACwBse,YAAYre,MADpC,EAEE,wCAFF,EAE4C,CACxCtD,UADwC,EAExCqB,QAAQjC,QAAR,EAFwC,EAGxCkC,QAAQlC,QAAR,EAHwC,CAF5C;AAQD;AACF;;AAED;AArDqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAsDrBysC,YAAMnC,SAAN,CAAgBiD,UAAUC,YAAV,CAAuBp0B,SAAvB,CAAhB;AACAqzB,YAAM/C,kBAAN;AACD;;;8CAEyB;AACxB,UAAI+C,QAAQ,KAAKpC,aAAL,EAAZ;AACA,UAAI9nB,cAAc,KAAKsoB,mBAAL,EAAlB;AACA,UAAIvP,QAAQmR,MAAMO,QAAN,EAAZ;AACA,UAAI1R,MAAM/zB,GAAN,mBAAJ,EAA2B;AACzB0E,aACEsW,YAAYte,QADd,EACwBse,YAAYre,MADpC,EAEE,8BAFF,EAEkC,CAACo3B,MAAMn6B,IAAN,GAAanB,QAAb,EAAD,CAFlC;AAID;AACD,UAAIuiB,YAAYpgB,KAAZ,IAAqBm5B,MAAMj5B,IAAN,EAAzB,EAAuC;AACrC4J,aACEsW,YAAYte,QADd,EACwBse,YAAYre,MADpC,EAEE,+BAFF,EAEmC,CAC/Bo3B,MAAMj5B,IAAN,EAD+B,EACjBkgB,YAAYpgB,KADK,CAFnC;AAMD;AACDsqC,YAAMnC,SAAN,CAAgBhP,MAAMhjB,UAAN,CAAiBiK,YAAYpgB,KAA7B,CAAhB;AACAsqC,YAAM/C,kBAAN;AACD;;;mDAE8B+D,kB,EAAoB;AACjD,UAAIhB,QAAQ,KAAKpC,aAAL,EAAZ;AACA,UAAI9nB,cAAc,KAAKsoB,mBAAL,EAAlB;AACA,UAAI0C,kBAAJ;AACA,UAAIE,kBAAJ,EAAwB;AACtBF,oBAAYd,MAAMG,QAAN,EAAZ;AACD,OAFD,MAEO;AACLW,oBAAYd,MAAMO,QAAN,EAAZ;AACD;AACD,UAAIO,UAAUhmC,GAAV,uBAAJ,EAAmC;AACjC0E,aACEsW,YAAYte,QADd,EACwBse,YAAYre,MADpC,EAEE,kCAFF,EAEsC,CAACqpC,UAAUpsC,IAAV,GAAiBnB,QAAjB,EAAD,CAFtC;AAID;AACD,UAAI,EAAEuiB,YAAY3hB,SAAZ,IAAyB2sC,UAAUt0B,MAArC,CAAJ,EAAkD;AAChDhN,aACEsW,YAAYte,QADd,EACwBse,YAAYre,MADpC,EAEE,6BAFF,EAEiC,CAC7BqpC,UAAUjrC,UAAV,EAD6B,EAE7BigB,YAAY3hB,SAFiB,CAFjC;AAOD;AACD6rC,YAAMnC,SAAN,CAAgBiD,UAAUt0B,MAAV,CAAiBsJ,YAAY3hB,SAA7B,CAAhB;AACA6rC,YAAM/C,kBAAN;AACD;;;8CAEyB;AACxB,WAAKgE,8BAAL,CAAoC,KAApC,EADwB,CACoB;AAC7C;;;iDAE4B;AAC3B,WAAKA,8BAAL,CAAoC,IAApC,EAD2B,CACiB;AAC7C;;AAED;;;;+BACW;AACT,UAAIjB,QAAQ,KAAKpC,aAAL,EAAZ;AACA,UAAIsD,KAAKlB,MAAMG,QAAN,EAAT;AACA,UAAIgB,KAAKnB,MAAMG,QAAN,EAAT;AACAH,YAAMnC,SAAN,CAAgBqD,GAAGh/B,GAAH,CAAOi/B,EAAP,CAAhB;AACAnB,YAAM/C,kBAAN;AACD;;;+BAEU;AACT,UAAI+C,QAAQ,KAAKpC,aAAL,EAAZ;AACA,UAAIrgC,QAAQyiC,MAAMG,QAAN,EAAZ;AACAH,YAAMnC,SAAN,CAAgBtgC,KAAhB;AACAyiC,YAAMnC,SAAN,CAAgBtgC,KAAhB;AACAyiC,YAAM/C,kBAAN;AACD;;;+BAEU;AACT,UAAI+C,QAAQ,KAAKpC,aAAL,EAAZ;AACAoC,YAAMG,QAAN;AACAH,YAAM/C,kBAAN;AACD;;;yCAEoB;AACnB,UAAI+C,QAAQ,KAAKpC,aAAL,EAAZ;AACA,UAAI9nB,cAAc,KAAKsoB,mBAAL,EAAlB;;AAEA;AACA,UAAIxmC,OAAO,EAAX;AACA,WAAK,IAAIyR,IAAI,CAAb,EAAgBA,IAAIyM,YAAYuB,KAAhC,EAAuChO,GAAvC,EAA4C;AAC1CzR,aAAKwrB,OAAL,CAAa4c,MAAMG,QAAN,EAAb;AACD;;AAED;AACA,UAAI,CAAC,KAAKlW,WAAL,CAAiBmX,WAAjB,CAA6BtrB,YAAY/f,aAAzC,CAAL,EAA8D;AAC5DyJ,aACEsW,YAAYte,QADd,EACwBse,YAAYre,MADpC,EAEE,0BAFF,EAE8B,CAACqe,YAAY/f,aAAb,CAF9B;AAID;;AAED,UAAIsrC,YAAY,KAAKpX,WAAL,CAAiB6B,YAAjB,CAA8BhW,YAAY/f,aAA1C,CAAhB;;AAEA;;AAEA,UAAIsrC,UAAU5+B,aAAV,CAAwB3N,MAAxB,KAAmCghB,YAAYuB,KAAnD,EAA0D;AACxD7X,aAAKsW,YAAYte,QAAjB,EAA2Bse,YAAYre,MAAvC,EACE,0BADF,EAC8B,CAC1Bqe,YAAY/f,aADc,EAE1BsrC,UAAU5+B,aAAV,CAAwB3N,MAFE,EAG1BghB,YAAYuB,KAHc,CAD9B;AAOD;;AAED;;AAEA,WAAK,IAAIhO,KAAI,CAAb,EAAgBA,KAAIyM,YAAYuB,KAAhC,EAAuChO,IAAvC,EAA4C;AAC1C,YAAIpU,eAAeosC,UAAU5+B,aAAV,CAAwB4G,EAAxB,CAAnB;AACA,YAAI1T,eAAeiC,KAAKyR,EAAL,EAAQ3U,IAAR,EAAnB;AACA,YAAI,sBAAUO,YAAV,EAAwBU,YAAxB,MAA0C,IAA9C,EAAoD;AAClD6J,eACEsW,YAAYte,QADd,EACwBse,YAAYre,MADpC,EAEE,kCAFF,EAEsC,CAClCqe,YAAY/f,aADsB,EAElCsT,KAAI,CAF8B,EAGlCpU,aAAa1B,QAAb,EAHkC,EAIlCoC,aAAapC,QAAb,EAJkC,CAFtC;AASD;AACF;;AAED;AACA8tC,gBAAUC,iBAAV,CACExrB,YAAYte,QADd,EACwBse,YAAYre,MADpC,EAC4C,KAAKsL,WAAL,EAD5C,EACgEnL,IADhE;;AAIA;AACA,UAAI2E,SAAS8kC,UAAUE,IAAV,CAAe,KAAKx+B,WAAL,EAAf,EAAmCnL,IAAnC,CAAb,CAxDmB,CAwDoC;AACvD,UAAI2E,WAAW,IAAf,EAAqB;AACnByjC,cAAMnC,SAAN,CAAgBthC,MAAhB;AACD;;AAED;AACA,WAAK0hC,aAAL,CAAmBnoB,YAAY/f,aAA/B;;AAEAiqC,YAAM/C,kBAAN;AACD;;;qCAEgB;AACf,UAAI+C,QAAQ,KAAKpC,aAAL,EAAZ;AACA,WAAKH,iBAAL,CAAuBhjC,IAAvB,CAA4B,KAAKsI,WAAL,GAAmBy+B,KAAnB,EAA5B;AACAxB,YAAM/C,kBAAN;AACD;;;wCAEmB;AAClB,UAAI+C,QAAQ,KAAKpC,aAAL,EAAZ;AACA,WAAKH,iBAAL,CAAuBvhB,GAAvB;AACA,UAAI,KAAKuhB,iBAAL,CAAuB3oC,MAAvB,KAAkC,CAAtC,EAAyC;AACvC,cAAMsC,MAAM,oDAAN,CAAN;AACD;AACD4oC,YAAM/C,kBAAN;AACD;;;qCAEgB;AACf,UAAI+C,QAAQ,KAAKpC,aAAL,EAAZ;AACA,UAAI9nB,cAAc,KAAKsoB,mBAAL,EAAlB;AACA,UAAInpC,eAAe6gB,YAAYphB,IAA/B;AACA,UAAIiB,eAAeqqC,MAAMO,QAAN,GAAiB7rC,IAAjB,EAAnB;AACA,UAAI,sBAAUO,YAAV,EAAwBU,YAAxB,MAA0C,IAA9C,EAAoD;AAClD6J,aACEsW,YAAYte,QADd,EACwBse,YAAYre,MADpC,EAEE,gCAFF,EAEoC,CAChCxC,aAAa1B,QAAb,EADgC,EAEhCoC,aAAapC,QAAb,EAFgC,CAFpC;AAOD;AACDysC,YAAM/C,kBAAN;AACD;;;;;;;;;;;;;;;;;;;QCpxBawE,kB,GAAAA,kB;QA8BAC,gB,GAAAA,gB;QAwEAC,a,GAAAA,a;QAsCAC,W,GAAAA,W;QAqLAC,kB,GAAAA,kB;QAMAC,iB,GAAAA,iB;;;;AA9XhB;;;;;;;;;;;;;;;;;;;;;;;;;IAyBMC,W;AACJ,uBAAYC,UAAZ,EAAwBC,WAAxB,EAAqCC,SAArC,EAAgDC,UAAhD,EAA4DC,QAA5D,EAAsE;AAAA;;AACpE,SAAKC,WAAL,GAAmBL,UAAnB;AACA,SAAKM,YAAL,GAAoBL,WAApB;AACA,SAAKM,UAAL,GAAkBL,SAAlB;AACA,SAAKM,WAAL,GAAmBL,UAAnB;AACA,SAAKM,SAAL,GAAiBL,QAAjB;AACD;;;;wBAEgB;AACf,aAAO,KAAKC,WAAZ;AACD;;;wBAEiB;AAChB,aAAO,KAAKC,YAAZ;AACD;;;wBAEe;AACd,aAAO,KAAKC,UAAZ;AACD;;;wBAEgB;AACf,aAAO,KAAKC,WAAZ;AACD;;;wBAEc;AACb,aAAO,KAAKC,SAAZ;AACD;;;;;;AAGI,SAAShB,kBAAT,CAA4B7/B,MAA5B,EAAoC;AACzC,MAAI4W,WAAW,EAAf;AACAA,WAASzW,IAAT,GAAgB,EAACT,GAAGM,OAAOG,IAAP,CAAY,CAAZ,CAAJ,EAAoBR,GAAGK,OAAOG,IAAP,CAAY,CAAZ,CAAvB,EAAhB;AACAyW,WAAS3W,KAAT,GAAiBD,OAAOC,KAAxB;AACA2W,WAAS1W,MAAT,GAAkBF,OAAOE,MAAzB;AACA0W,WAASkqB,KAAT,GAAiB,EAAjB;AACA,OAAK,IAAInhC,IAAI,CAAb,EAAgBA,IAAIK,OAAOE,MAA3B,EAAmCP,GAAnC,EAAwC;AACtC,QAAI1J,MAAM,EAAV;AACA,SAAK,IAAIyJ,IAAI,CAAb,EAAgBA,IAAIM,OAAOC,KAA3B,EAAkCP,GAAlC,EAAuC;AACrC,UAAIqhC,QAAQ/gC,OAAOI,KAAP,CAAaV,CAAb,EAAgBC,CAAhB,CAAZ;AACA,UAAII,OAAO,EAAX;AACA,UAAIghC,MAAMr+B,CAAN,GAAU,CAAd,EAAiB;AACf3C,aAAKihC,IAAL,GAAYD,MAAMr+B,CAAlB;AACD;AACD,UAAIq+B,MAAMvvC,CAAN,GAAU,CAAd,EAAiB;AACfuO,aAAKkhC,KAAL,GAAaF,MAAMvvC,CAAnB;AACD;AACD,UAAIuvC,MAAMv1B,CAAN,GAAU,CAAd,EAAiB;AACfzL,aAAKmhC,GAAL,GAAWH,MAAMv1B,CAAjB;AACD;AACD,UAAIu1B,MAAM9jB,CAAN,GAAU,CAAd,EAAiB;AACfld,aAAKohC,KAAL,GAAaJ,MAAM9jB,CAAnB;AACD;AACDhnB,UAAI4C,IAAJ,CAASkH,IAAT;AACD;AACD6W,aAASkqB,KAAT,CAAetf,OAAf,CAAuBvrB,GAAvB;AACD;AACD,SAAO2gB,QAAP;AACD;;AAEM,SAASkpB,gBAAT,CAA0BlpB,QAA1B,EAAoC;AACzC,MAAI5W,SAAS,EAAb;AACAA,SAAOG,IAAP,GAAc,CAACyW,SAASzW,IAAT,CAAcT,CAAf,EAAkBkX,SAASzW,IAAT,CAAcR,CAAhC,CAAd;AACAK,SAAOC,KAAP,GAAe2W,SAAS3W,KAAxB;AACAD,SAAOE,MAAP,GAAgB0W,SAAS1W,MAAzB;AACAF,SAAOI,KAAP,GAAe,EAAf;AACA,OAAK,IAAIV,IAAI,CAAb,EAAgBA,IAAIM,OAAOC,KAA3B,EAAkCP,GAAlC,EAAuC;AACrC,QAAI3K,SAAS,EAAb;AACA,SAAK,IAAI4K,IAAI,CAAb,EAAgBA,IAAIK,OAAOE,MAA3B,EAAmCP,GAAnC,EAAwC;AACtC,UAAII,OAAO6W,SAASkqB,KAAT,CAAe9gC,OAAOE,MAAP,GAAgBP,CAAhB,GAAoB,CAAnC,EAAsCD,CAAtC,CAAX;AACA,UAAI0hC,KAAM,UAAUrhC,IAAX,GAAmBA,KAAKihC,IAAxB,GAA+B,CAAxC;AACA,UAAIK,KAAM,WAAWthC,IAAZ,GAAoBA,KAAKkhC,KAAzB,GAAiC,CAA1C;AACA,UAAIK,KAAM,SAASvhC,IAAV,GAAkBA,KAAKmhC,GAAvB,GAA6B,CAAtC;AACA,UAAIK,KAAM,WAAWxhC,IAAZ,GAAoBA,KAAKohC,KAAzB,GAAiC,CAA1C;AACApsC,aAAO8D,IAAP,CAAY;AACV,aAAKuoC,EADK;AAEV,aAAKC,EAFK;AAGV,aAAKC,EAHK;AAIV,aAAKC;AAJK,OAAZ;AAMD;AACDvhC,WAAOI,KAAP,CAAavH,IAAb,CAAkB9D,MAAlB;AACD;AACD,SAAOiL,MAAP;AACD;;AAED,SAASwhC,iBAAT,CAA2BxhC,MAA3B,EAAmC;AACjC,MAAIyhC,UAAU,EAAd;AACAA,UAAQ/hC,CAAR,GAAYM,OAAOG,IAAP,CAAY,CAAZ,CAAZ;AACAshC,UAAQ9hC,CAAR,GAAYK,OAAOG,IAAP,CAAY,CAAZ,CAAZ;AACAshC,UAAQC,KAAR,GAAgB1hC,OAAOC,KAAvB;AACAwhC,UAAQE,KAAR,GAAgB3hC,OAAOE,MAAvB;AACAuhC,UAAQX,KAAR,GAAgB,EAAhB;AACA,OAAK,IAAInhC,IAAI,CAAb,EAAgBA,IAAIK,OAAOE,MAA3B,EAAmCP,GAAnC,EAAwC;AACtC,QAAI1J,MAAM,EAAV;AACA,SAAK,IAAIyJ,IAAI,CAAb,EAAgBA,IAAIM,OAAOC,KAA3B,EAAkCP,GAAlC,EAAuC;AACrC,UAAIK,OAAOC,OAAOI,KAAP,CAAaV,CAAb,EAAgBC,CAAhB,CAAX;AACA1J,UAAI4C,IAAJ,CAAS;AACP,gBAAQkH,KAAK2C,CADN;AAEP,iBAAS3C,KAAKvO,CAFP;AAGP,eAAOuO,KAAKyL,CAHL;AAIP,iBAASzL,KAAKkd;AAJP,OAAT;AAMD;AACDwkB,YAAQX,KAAR,CAActf,OAAd,CAAsBvrB,GAAtB;AACD;AACD,SAAO2rC,KAAK3a,SAAL,CAAewa,OAAf,CAAP;AACD;;AAED,SAASI,eAAT,CAAyBC,aAAzB,EAAwC;AACtC,MAAIL,UAAUG,KAAKzlB,KAAL,CAAW2lB,aAAX,CAAd;AACA,MAAI9hC,SAAS,EAAb;AACAA,SAAOG,IAAP,GAAc,CAACshC,QAAQ/hC,CAAT,EAAY+hC,QAAQ9hC,CAApB,CAAd;AACAK,SAAOC,KAAP,GAAewhC,QAAQC,KAAvB;AACA1hC,SAAOE,MAAP,GAAgBuhC,QAAQE,KAAxB;AACA3hC,SAAOI,KAAP,GAAe,EAAf;AACA,OAAK,IAAIV,IAAI,CAAb,EAAgBA,IAAIM,OAAOC,KAA3B,EAAkCP,GAAlC,EAAuC;AACrC,QAAI3K,SAAS,EAAb;AACA,SAAK,IAAI4K,IAAI,CAAb,EAAgBA,IAAIK,OAAOE,MAA3B,EAAmCP,GAAnC,EAAwC;AACtC,UAAII,OAAO0hC,QAAQX,KAAR,CAAc9gC,OAAOE,MAAP,GAAgBP,CAAhB,GAAoB,CAAlC,EAAqCD,CAArC,CAAX;AACA3K,aAAO8D,IAAP,CAAY;AACV,aAAKkH,KAAKihC,IADA;AAEV,aAAKjhC,KAAKkhC,KAFA;AAGV,aAAKlhC,KAAKmhC,GAHA;AAIV,aAAKnhC,KAAKohC;AAJA,OAAZ;AAMD;AACDnhC,WAAOI,KAAP,CAAavH,IAAb,CAAkB9D,MAAlB;AACD;AACD,SAAOiL,MAAP;AACD;;AAEM,SAAS+/B,aAAT,CAAuB//B,MAAvB,EAA+B;AACpC,MAAIgc,MAAM,EAAV;AACAA,MAAInjB,IAAJ,CAAS,SAAT;AACAmjB,MAAInjB,IAAJ,CACE,SACE,GADF,GACQmH,OAAOC,KAAP,CAAatO,QAAb,EADR,GAEE,GAFF,GAEQqO,OAAOE,MAAP,CAAcvO,QAAd,EAHV;AAKA,OAAK,IAAIgO,IAAI,CAAb,EAAgBA,IAAIK,OAAOE,MAA3B,EAAmCP,GAAnC,EAAwC;AACtC,SAAK,IAAID,IAAI,CAAb,EAAgBA,IAAIM,OAAOC,KAA3B,EAAkCP,GAAlC,EAAuC;AACrC,UAAIK,OAAOC,OAAOI,KAAP,CAAaV,CAAb,EAAgBC,CAAhB,CAAX;AACA,UAAII,KAAK2C,CAAL,GAAS3C,KAAKvO,CAAd,GAAkBuO,KAAKyL,CAAvB,GAA2BzL,KAAKkd,CAAhC,KAAsC,CAA1C,EAA6C;AAC3C;AACD;AACD,UAAI6C,IAAI,UAAUpgB,EAAE/N,QAAF,EAAV,GAAyB,GAAzB,GAA+BgO,EAAEhO,QAAF,EAAvC;AACA,UAAIoO,KAAK2C,CAAL,GAAS,CAAb,EAAgB;AACdod,aAAK,WAAW/f,KAAK2C,CAAL,CAAO/Q,QAAP,EAAhB;AACD;AACD,UAAIoO,KAAKvO,CAAL,GAAS,CAAb,EAAgB;AACdsuB,aAAK,YAAY/f,KAAKvO,CAAL,CAAOG,QAAP,EAAjB;AACD;AACD,UAAIoO,KAAKyL,CAAL,GAAS,CAAb,EAAgB;AACdsU,aAAK,WAAW/f,KAAKyL,CAAL,CAAO7Z,QAAP,EAAhB;AACD;AACD,UAAIoO,KAAKkd,CAAL,GAAS,CAAb,EAAgB;AACd6C,aAAK,YAAY/f,KAAKkd,CAAL,CAAOtrB,QAAP,EAAjB;AACD;AACDqqB,UAAInjB,IAAJ,CAASinB,CAAT;AACD;AACF;AACD9D,MAAInjB,IAAJ,CACE,SACE,GADF,GACQmH,OAAOG,IAAP,CAAY,CAAZ,EAAexO,QAAf,EADR,GAEE,GAFF,GAEQqO,OAAOG,IAAP,CAAY,CAAZ,EAAexO,QAAf,EAHV;AAKA,SAAOqqB,IAAI7oB,IAAJ,CAAS,IAAT,IAAiB,IAAxB;AACD;;AAEM,SAAS6sC,WAAT,CAAqBhkB,GAArB,EAA0B;AAC/B,MAAIvU,IAAI,CAAR;AACA,MAAIzH,SAAS,EAAb;;AAEA,WAASmwB,YAAT,CAAsBzwB,CAAtB,EAAyB;AACvB,WAAOA,MAAM,GAAN,IAAaA,MAAM,IAAnB,IAA2BA,MAAM,IAAjC,IAAyCA,MAAM,IAAtD;AACD;;AAED,WAASqiC,SAAT,CAAmBxa,GAAnB,EAAwB;AACtB,SAAK,IAAI9f,KAAI,CAAb,EAAgBA,KAAI8f,IAAIr0B,MAAxB,EAAgCuU,IAAhC,EAAqC;AACnC,UAAI,aAAa3I,OAAb,CAAqByoB,IAAI9f,EAAJ,CAArB,MAAiC,CAAC,CAAtC,EAAyC;AACvC,eAAO,KAAP;AACD;AACF;AACD,WAAO8f,IAAIr0B,MAAJ,GAAa,CAApB;AACD;;AAED,WAAS8uC,cAAT,GAA0B;AACxB;AACA,QAAIv6B,IAAIuU,IAAI9oB,MAAR,IAAkBi9B,aAAanU,IAAIvU,CAAJ,CAAb,CAAtB,EAA4C;AAC1CA;AACD;AACF;;AAED,WAASw6B,SAAT,GAAqB;AACnB,QAAI17B,IAAI,EAAR;AACAy7B;AACA,WAAOv6B,IAAIuU,IAAI9oB,MAAR,IAAkB,CAACi9B,aAAanU,IAAIvU,CAAJ,CAAb,CAA1B,EAAgD;AAC9ClB,QAAE1N,IAAF,CAAOmjB,IAAIvU,CAAJ,CAAP;AACAA;AACD;AACD,WAAOlB,EAAEpT,IAAF,CAAO,EAAP,CAAP;AACD;;AAED,WAAS+uC,KAAT,CAAeC,MAAf,EAAuB;AACrB,QAAI57B,IAAI07B,WAAR;AACA,QAAI,CAACF,UAAUx7B,CAAV,CAAL,EAAmB;AACjB,YAAM/Q,MAAM2sC,MAAN,CAAN;AACD;AACD57B,QAAIlK,SAASkK,CAAT,EAAY,EAAZ,CAAJ;AACA,QAAIA,IAAI,CAAR,EAAW;AACT,YAAM/Q,MAAM2sC,MAAN,CAAN;AACD;AACD,WAAO57B,CAAP;AACD;;AAED,WAAS67B,SAAT,CAAmB1/B,CAAnB,EAAsBC,CAAtB,EAAyBw/B,MAAzB,EAAiC;AAC/B,QAAI57B,IAAI27B,MAAMC,MAAN,CAAR;AACA,QAAI57B,IAAI7D,CAAJ,IAAS6D,KAAK5D,CAAlB,EAAqB;AACnB,YAAMnN,MAAM2sC,MAAN,CAAN;AACD;AACD,WAAO57B,CAAP;AACD;;AAED,MAAI07B,gBAAgB,SAApB,EAA+B;AAC7B,UAAMzsC,MAAM,uCAAN,CAAN;AACD;AACD,MAAIysC,gBAAgB,MAApB,EAA4B;AAC1B,UAAMzsC,MAAM,0CAAN,CAAN;AACD;AACDwK,SAAOC,KAAP,GAAeiiC,MAAM,uCAAN,CAAf;AACAliC,SAAOE,MAAP,GAAgBgiC,MAAM,wCAAN,CAAhB;AACA,MAAIliC,OAAOC,KAAP,IAAgB,CAAhB,IAAqBD,OAAOE,MAAP,IAAiB,CAA1C,EAA6C;AAC3C,UAAM1K,MAAM,yCAAN,CAAN;AACD;AACDwK,SAAOG,IAAP,GAAc,CAAC,CAAD,EAAI,CAAJ,CAAd;AACAH,SAAOI,KAAP,GAAe,EAAf;AACA,OAAK,IAAIqH,MAAI,CAAb,EAAgBA,MAAIzH,OAAOC,KAA3B,EAAkCwH,KAAlC,EAAuC;AACrC,QAAIxR,MAAM,EAAV;AACA,SAAK,IAAI4V,IAAI,CAAb,EAAgBA,IAAI7L,OAAOE,MAA3B,EAAmC2L,GAAnC,EAAwC;AACtC5V,UAAI4C,IAAJ,CAAS,EAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,KAAK,CAA9B,EAAT;AACD;AACDmH,WAAOI,KAAP,CAAavH,IAAb,CAAkB5C,GAAlB;AACD;;AAED,MAAIosC,eAAe,KAAnB;AACA,MAAIC,eAAe,EAAnB;AACA,MAAIC,UAAU;AACZ,YAAQ,GADI;AAEZ,SAAK,GAFO;AAGZ,aAAS,GAHG;AAIZ,SAAK,GAJO;AAKZ,YAAQ,GALI;AAMZ,SAAK,GANO;AAOZ,aAAS,GAPG;AAQZ,SAAK;AARO,GAAd;;AAWA,SAAO96B,IAAIuU,IAAI9oB,MAAf,EAAuB;AACrB,QAAIi7B,KAAK8T,WAAT;AACA,QAAI9T,OAAO,EAAX,EAAe;AACb;AACD,KAFD,MAEO,IAAIA,OAAO,MAAX,EAAmB;AACxB,UAAIkU,YAAJ,EAAkB;AAChB,cAAM7sC,MAAM,kDAAN,CAAN;AACD;AACD6sC,qBAAe,IAAf;AACA,UAAIG,KAAKJ,UAAU,CAAV,EAAapiC,OAAOC,KAApB,EAA2B,iCAA3B,CAAT;AACA,UAAIwiC,KAAKL,UAAU,CAAV,EAAapiC,OAAOE,MAApB,EAA4B,iCAA5B,CAAT;AACAF,aAAOG,IAAP,GAAc,CAACqiC,EAAD,EAAKC,EAAL,CAAd;AACD,KARM,MAQA,IAAItU,OAAO,MAAX,EAAmB;AACxB,UAAIuU,KAAKN,UAAU,CAAV,EAAapiC,OAAOC,KAApB,EAA2B,iCAA3B,CAAT;AACA,UAAI0iC,KAAKP,UAAU,CAAV,EAAapiC,OAAOE,MAApB,EAA4B,iCAA5B,CAAT;AACA,UAAI,CAACwiC,EAAD,EAAKC,EAAL,KAAYL,YAAhB,EAA8B;AAC5B,cAAM9sC,MAAM,yCAAN,CAAN;AACD;AACD8sC,mBAAa,CAACI,EAAD,EAAKC,EAAL,CAAb,IAAyB,IAAzB;;AAEA,UAAIC,gBAAgB,EAApB;AACA,aAAOn7B,IAAIuU,IAAI9oB,MAAf,EAAuB;AACrB,YAAIgR,QAAQ+9B,WAAZ;AACA,YAAI,EAAE/9B,SAASq+B,OAAX,CAAJ,EAAyB;AACvB96B,eAAKvD,MAAMhR,MAAX;AACA;AACD;AACD,YAAI2vC,UAAUN,QAAQr+B,KAAR,CAAd;AACA,YAAI2+B,WAAWD,aAAf,EAA8B;AAC5B,gBAAMptC,MAAM,0CAAN,CAAN;AACD;AACD,YAAIhE,IAAI0wC,MAAM,oCAAN,CAAR;AACAliC,eAAOI,KAAP,CAAasiC,EAAb,EAAiBC,EAAjB,EAAqBE,OAArB,IAAgCrxC,CAAhC;AACD;AACF,KAtBM,MAsBA;AACL,YAAMgE,MAAM,gDAAgD24B,EAAhD,GAAqD,IAA3D,CAAN;AACD;AACF;AACD,SAAOnuB,MAAP;AACD;;AAED,IAAI8iC,oBAAoB,CAEtB,IAAI3C,WAAJ,CACE,QADF,EAEE,sEAFF,EAGE,QAHF,EAIEyB,KAAK3a,SAJP,EAKE2a,KAAKzlB,KALP,CAFsB,EAUtB,IAAIgkB,WAAJ,CACE,2BADF,EAEE,qDACA,mCAHF,EAIE,MAJF,EAKEqB,iBALF,EAMEK,eANF,CAVsB,EAmBtB,IAAI1B,WAAJ,CACE,KADF,EAEE,SAFF,EAGE,KAHF,EAIEJ,aAJF,EAKEC,WALF,CAnBsB,CAAxB;;AA6BO,IAAI+C,0CAAiB,2BAArB;AACA,IAAIC,wCAAgB,EAApB;;;;;;AACP,uBAAwBF,iBAAxB,8HAA2C;AAAA,QAAlCG,WAAkC;;AACzCD,kBAAcC,YAAY7C,UAA1B,IAAwC6C,WAAxC;AACD;;;;;;;;;;;;;;;;AAED,SAASC,aAAT,CAAuBruC,QAAvB,EAAiC;AAC/B,MAAIsuC,QAAQtuC,SAAS+D,KAAT,CAAe,GAAf,CAAZ;AACA,SAAOuqC,MAAMA,MAAMjwC,MAAN,GAAe,CAArB,CAAP;AACD;;AAED,SAASkwC,eAAT,CAAyBvuC,QAAzB,EAAmC;AACjC,MAAIyrC,YAAY4C,cAAcruC,QAAd,CAAhB;AADiC;AAAA;AAAA;;AAAA;AAEjC,0BAAgBiuC,iBAAhB,mIAAmC;AAAA,UAA1BO,GAA0B;;AACjC,UAAI/C,cAAc+C,IAAI/C,SAAtB,EAAiC;AAC/B,eAAO+C,GAAP;AACD;AACF;AANgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOjC,SAAOL,cAAcD,cAAd,CAAP;AACD;;AAED,IAAMO,KAAK,mBAAAC,CAAQ,EAAR,CAAX;;AAEO,SAAStD,kBAAT,CAA4BprC,QAA5B,EAAsC;AAC3C,MAAI2uC,SAASJ,gBAAgBvuC,QAAhB,CAAb;AACA,MAAI4uC,WAAWH,GAAGI,YAAH,CAAgB7uC,QAAhB,EAA0B,MAA1B,CAAf;AACA,SAAO2uC,OAAOhD,QAAP,CAAgBiD,QAAhB,CAAP;AACD;;AAEM,SAASvD,iBAAT,CAA2BrrC,QAA3B,EAAqCmL,MAArC,EAA6C;AAClD,MAAIwjC,SAASJ,gBAAgBvuC,QAAhB,CAAb;AACA,MAAI4uC,WAAWD,OAAOjD,UAAP,CAAkBvgC,MAAlB,CAAf;AACAsjC,KAAGK,aAAH,CAAiB9uC,QAAjB,EAA2B4uC,QAA3B,EAAqC,MAArC;AACD,C;;;;;;ACnYD,+B","file":"gobstones-interpreter.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"fs\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"gobstones-interpreter\", [\"fs\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"gobstones-interpreter\"] = factory(require(\"fs\"));\n\telse\n\t\troot[\"gobstones-interpreter\"] = factory(root[\"fs\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_18__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0d29a457d14ae87582ff","\nfunction laPalabraClave(palabra) {\n  return 'la palabra clave \"' + palabra + '\"';\n}\n\nfunction masculino(n, singular, plural) {\n  if (n === 0) {\n    return 'ningún ' + singular;\n  } else if (n === 1) {\n    return 'un ' + singular;\n  } else {\n    return n.toString() + ' ' + plural;\n  }\n}\n\nconst LOCALE_ES = {\n\n  /* Descriptions of syntactic constructions and tokens */\n  'definition':\n    'una definición (de programa, función, procedimiento, o tipo)',\n  'pattern':\n    'un patrón (comodín \"_\", constructor aplicado a variables, o tupla)',\n  'statement': 'un comando',\n  'expression': 'una expresión',\n  'procedure call': 'una invocación a un procedimiento',\n  'field name': 'el nombre de un campo',\n  'T_EOF': 'el final del archivo',\n  'T_NUM': 'un número',\n  'T_STRING': 'una cadena (string)',\n  'T_UPPERID': 'un identificador con mayúsculas',\n  'T_LOWERID': 'un identificador con minúsculas',\n  'T_PROGRAM': laPalabraClave('program'),\n  'T_INTERACTIVE': laPalabraClave('interactive'),\n  'T_PROCEDURE': laPalabraClave('procedure'),\n  'T_FUNCTION': laPalabraClave('function'),\n  'T_RETURN': laPalabraClave('return'),\n  'T_IF': laPalabraClave('if'),\n  'T_THEN': laPalabraClave('then'),\n  'T_ELSE': laPalabraClave('else'),\n  'T_REPEAT': laPalabraClave('repeat'),\n  'T_FOREACH': laPalabraClave('foreach'),\n  'T_IN': laPalabraClave('in'),\n  'T_WHILE': laPalabraClave('while'),\n  'T_SWITCH': laPalabraClave('switch'),\n  'T_TO': laPalabraClave('to'),\n  'T_LET': laPalabraClave('let'),\n  'T_NOT': laPalabraClave('not'),\n  'T_DIV': laPalabraClave('div'),\n  'T_MOD': laPalabraClave('mod'),\n  'T_TYPE': laPalabraClave('type'),\n  'T_IS': laPalabraClave('is'),\n  'T_RECORD': laPalabraClave('record'),\n  'T_VARIANT': laPalabraClave('variant'),\n  'T_CASE': laPalabraClave('case'),\n  'T_FIELD': laPalabraClave('field'),\n  'T_UNDERSCORE': 'un guión bajo (\"_\")',\n  'T_LPAREN': 'un paréntesis izquierdo (\"(\")',\n  'T_RPAREN': 'un paréntesis derecho (\")\")',\n  'T_LBRACE': 'una llave izquierda (\"{\")',\n  'T_RBRACE': 'una llave derecha (\"}\")',\n  'T_LBRACK': 'un corchete izquierdo (\"[\")',\n  'T_RBRACK': 'un corchete derecho (\"]\")',\n  'T_COMMA': 'una coma (\",\")',\n  'T_SEMICOLON': 'un punto y coma (\";\")',\n  'T_RANGE': 'un separador de rango (\"..\")',\n  'T_GETS': 'una flecha hacia la izquierda (\"<-\")',\n  'T_PIPE': 'una barra vertical (\"|\")',\n  'T_ARROW': 'una flecha (\"->\")',\n  'T_ASSIGN': 'un operador de asignación (\":=\")',\n  'T_EQ': 'una comparación por igualdad (\"==\")',\n  'T_NE': 'una comparación por desigualdad (\"/=\")',\n  'T_LE': 'un menor o igual (\"<=\")',\n  'T_GE': 'un mayor o igual (\">=\")',\n  'T_LT': 'un menor estricto (\"<\")',\n  'T_GT': 'un mayor estricto (\">\")',\n  'T_AND': 'el \"y\" lógico (\"&&\")',\n  'T_OR': 'el \"o\" lógico (\"||\")',\n  'T_CONCAT': 'el operador de concatenación de listas (\"++\")',\n  'T_PLUS': 'el operador de suma (\"+\")',\n  'T_MINUS': 'el operador de resta (\"-\")',\n  'T_TIMES': 'el operador de producto (\"*\")',\n  'T_POW': 'el operador de potencia (\"^\")',\n\n  /* Local name categories */\n  'LocalVariable': 'variable',\n  'LocalIndex': 'índice',\n  'LocalParameter': 'parámetro',\n\n  /* Descriptions of value types */\n  'V_Integer': 'un número',\n  'V_String': 'una cadena',\n  'V_Tuple': 'una tupla',\n  'V_List': 'una lista',\n  'V_Structure': 'una estructura',\n\n  /* Lexer */\n  'errmsg:unclosed-multiline-comment':\n    'El comentario se abre pero nunca se cierra.',\n\n  'errmsg:unclosed-string-constant':\n    'La comilla que abre no tiene una comilla que cierra correspondiente.',\n\n  'errmsg:numeric-constant-should-not-have-leading-zeroes':\n    'Las constantes numéricas no se pueden escribir con ceros a la '\n   + 'izquierda.',\n\n  'errmsg:identifier-must-start-with-alphabetic-character':\n    'Los identificadores deben empezar con un caracter alfabético '\n   + '(a...z,A...Z).',\n\n  'errmsg:unknown-token':\n    function (symbol) {\n      return 'Símbolo desconocido en la entrada: \"' + symbol + '\".';\n    },\n\n  'warning:empty-pragma':\n    'Directiva pragma vacía.',\n\n  'warning:unknown-pragma':\n    function (pragmaName) {\n      return 'Directiva pragma desconocida: \"' + pragmaName + '\".';\n    },\n\n  /* Parser */\n  'errmsg:empty-source':\n    'El programa está vacío.',\n\n  'errmsg:expected-but-found':\n    function (expected, found) {\n      return 'Se esperaba ' + expected + '.\\n'\n           + 'Se encontró: ' + found + '.';\n    },\n\n  'errmsg:pattern-tuple-cannot-be-singleton':\n    'El patrón para una tupla no puede tener una sola componente. '\n  + 'Las tuplas tienen 0, 2, 3, o más componentes, pero no 1.',\n\n  'errmsg:assignment-tuple-cannot-be-singleton':\n    'La asignación a una tupla no puede constar de una sola componente. '\n  + 'Las tuplas tienen 0, 2, 3, o más componentes, pero no 1.',\n\n  'errmsg:operators-are-not-associative':\n    function (op1, op2) {\n      return 'La expresión usa '\n           + op1 + ' y ' + op2\n           + ', pero estos operadores no se pueden asociar. '\n           + 'Quizás faltan paréntesis.';\n    },\n\n  'errmsg:obsolete-tuple-assignment':\n    'Se esperaba un comando pero se encontró un paréntesis izquierdo. '\n  + 'Nota: la sintaxis de asignación de tuplas \"(x1, ..., xN) := y\" '\n  + 'está obsoleta. Usar \"let (x1, ..., xN) := y\".',\n\n  /* Linter */\n  'errmsg:program-already-defined':\n    function (pos1, pos2) {\n      return 'Ya había un programa definido en ' + pos1 + '.\\n'\n           + 'No se puede definir un programa en ' + pos2 + '.';\n    },\n\n  'errmsg:procedure-already-defined':\n    function (name, pos1, pos2) {\n      return 'El procedimiento \"' + name + '\" está definido dos veces: '\n           + 'en ' + pos1 + ' y en ' + pos2 + '.';\n    },\n\n  'errmsg:function-already-defined':\n    function (name, pos1, pos2) {\n      return 'La función \"' + name + '\" está definida dos veces: '\n           + 'en ' + pos1 + ' y en ' + pos2 + '.';\n    },\n\n  'errmsg:type-already-defined':\n    function (name, pos1, pos2) {\n      return 'El tipo \"' + name + '\" está definido dos veces: '\n           + 'en ' + pos1 + ' y en ' + pos2 + '.';\n    },\n\n  'errmsg:constructor-already-defined':\n    function (name, pos1, pos2) {\n      return 'El constructor \"' + name + '\" está definido dos veces: '\n           + 'en ' + pos1 + ' y en ' + pos2 + '.';\n    },\n\n  'errmsg:repeated-field-name':\n    function (constructorName, fieldName) {\n      return 'El campo \"' + fieldName + '\" no puede estar repetido '\n           + 'para el constructor \"' + constructorName + '\".';\n    },\n\n  'errmsg:function-and-field-cannot-have-the-same-name':\n    function (name, posFunction, posField) {\n      return 'El nombre \"' + name + '\" se usa '\n           + 'para una función en ' + posFunction + ' y '\n           + 'para un campo en ' + posField + '.';\n    },\n\n  'errmsg:source-should-have-a-program-definition':\n    /* Note: the code may actually be completely empty, but\n     * we avoid this technicality since the message could be\n     * confusing. */\n    'El código debe tener una definición de \"program { ... }\".',\n\n  'errmsg:procedure-should-not-have-return':\n    function (name) {\n      return 'El procedimiento \"' + name + '\" '\n           + 'no debería tener un comando \"return\".';\n    },\n\n  'errmsg:function-should-have-return':\n    function (name) {\n      return 'La función \"' + name + '\" debería tener un comando \"return\".';\n    },\n\n  'errmsg:return-statement-not-allowed-here':\n    'El comando \"return\" solo puede aparecer como el último comando '\n  + 'de una función o como el último comando del programa.',\n\n  'errmsg:local-name-conflict':\n    function (name, oldCat, oldPos, newCat, newPos) {\n      return 'Conflicto de nombres: \"' + name + '\" se usa dos veces: '\n           + 'como ' + oldCat + ' en ' + oldPos + ', y '\n           + 'como ' + newCat + ' en ' + newPos + '.';\n    },\n\n  'errmsg:repeated-variable-in-tuple-assignment':\n    function (name) {\n      return 'La variable \"' + name + '\" está repetida en la asignación '\n           + 'de tuplas.';\n    },\n\n  'errmsg:constructor-used-as-procedure':\n    function (name, type) {\n      return 'El procedimiento \"' + name + '\" no está definido. '\n           + 'El nombre \"' + name + '\" es el nombre de un constructor '\n           + 'del tipo \"' + type + '\".';\n    },\n\n  'errmsg:undefined-procedure':\n    function (name) {\n      return 'El procedimiento \"' + name + '\" no está definido.';\n    },\n\n  'errmsg:undefined-function':\n    function (name) {\n      return 'La función \"' + name + '\" no está definida.';\n    },\n\n  'errmsg:procedure-arity-mismatch':\n    function (name, expected, received) {\n      return 'El procedimiento \"' + name + '\" espera recibir '\n           + LOCALE_ES['<n>-parameters'](expected)\n           + ' pero se lo invoca con '\n           + LOCALE_ES['<n>-arguments'](received) + '.';\n    },\n\n  'errmsg:function-arity-mismatch':\n    function (name, expected, received) {\n      return 'La función \"' + name + '\" espera recibir '\n           + LOCALE_ES['<n>-parameters'](expected)\n           + ' pero se la invoca con '\n           + LOCALE_ES['<n>-arguments'](received) + '.';\n    },\n\n  'errmsg:structure-pattern-arity-mismatch':\n    function (name, expected, received) {\n      return 'El constructor \"' + name + '\" tiene '\n           + LOCALE_ES['<n>-fields'](expected)\n           + ' pero el patrón tiene '\n           + LOCALE_ES['<n>-parameters'](received) + '.';\n    },\n\n  'errmsg:type-used-as-constructor':\n    function (name, constructorNames) {\n      let msg;\n      if (constructorNames.length === 0) {\n        msg = '(no tiene constructores).';\n      } else if (constructorNames.length === 1) {\n        msg = '(tiene un constructor: ' + constructorNames[0] + ').';\n      } else {\n        msg = '(sus constructores son: '\n            + constructorNames.join(', ') + ').';\n      }\n      return 'El constructor \"' + name + '\" no está definido. '\n           + 'El nombre \"' + name + '\" es el nombre de un tipo '\n           + msg;\n    },\n\n  'errmsg:procedure-used-as-constructor':\n    function (name) {\n      return 'El constructor \"' + name + '\" no está definido. '\n           + 'El nombre \"' + name + '\" es el nombre de un procedimiento.';\n    },\n\n  'errmsg:undeclared-constructor':\n    function (name) {\n      return 'El constructor \"' + name + '\" no está definido.';\n    },\n\n  'errmsg:wildcard-pattern-should-be-last':\n    'El comodín \"_\" tiene que ser la última rama del switch.',\n\n  'errmsg:structure-pattern-repeats-constructor':\n    function (name) {\n      return 'Hay dos ramas distintas para el constructor \"' + name + '\".';\n    },\n\n  'errmsg:structure-pattern-repeats-tuple-arity':\n    function (arity) {\n      return 'Hay dos ramas distintas para las tuplas de ' + arity.toString()\n           + ' componentes.';\n    },\n\n  'errmsg:structure-pattern-repeats-timeout':\n    'Hay dos ramas distintas para el TIMEOUT.',\n\n  'errmsg:pattern-does-not-match-type':\n    function (expectedType, patternType) {\n      return 'Los patrones tienen que ser todos del mismo tipo. '\n           + 'El patrón debería ser de tipo \"' + expectedType + '\" '\n           + 'pero es de tipo \"' + patternType + '\".';\n    },\n\n  'errmsg:patterns-in-interactive-program-must-be-events':\n    'Los patrones de un \"interactive program\" deben ser eventos.',\n\n  'errmsg:patterns-in-switch-must-not-be-events':\n    'Los patrones de un \"switch\" no pueden ser eventos.',\n\n  'errmsg:structure-construction-repeated-field':\n    function (constructorName, fieldName) {\n      return 'El campo \"' + fieldName + '\" está repetido en '\n           + 'la instanciación del constructor \"' + constructorName + '\".';\n    },\n\n  'errmsg:structure-construction-invalid-field':\n    function (constructorName, fieldName) {\n      return 'El campo \"' + fieldName + '\" no es un campo válido '\n           + 'para el constructor \"' + constructorName + '\".';\n    },\n\n  'errmsg:structure-construction-missing-field':\n    function (constructorName, fieldName) {\n      return 'Falta darle valor al campo \"' + fieldName + '\" '\n           + 'del constructor \"' + constructorName + '\".';\n    },\n\n  'errmsg:structure-construction-cannot-be-an-event':\n    function (constructorName) {\n      return 'El constructor \"' + constructorName + '\" corresponde a un '\n           + 'evento, y solamente se puede manejar implícitamente '\n           + 'en un programa interactivo (el usuario no puede construir '\n           + 'instancias).';\n    },\n\n  /* Runtime errors (virtual machine) */\n  'errmsg:undefined-variable':\n    function (variableName) {\n      return 'La variable \"' + variableName + '\" no está definida.';\n    },\n\n  'errmsg:too-few-arguments':\n    function (routineName) {\n      return 'Faltan argumentos para \"' + routineName + '\".';\n    },\n\n  'errmsg:expected-structure-but-got':\n    function (constructorName, valueTag) {\n      return 'Se esperaba una estructura construida '\n           + 'con el constructor \"' + constructorName + '\", '\n           + 'pero se recibió ' + valueTag + '.';\n    },\n\n  'errmsg:expected-constructor-but-got':\n    function (constructorNameExpected, constructorNameReceived) {\n      return 'Se esperaba una estructura construida '\n           + 'con el constructor \"'\n           + constructorNameExpected + '\", '\n           + 'pero el constructor recibido es '\n           + constructorNameReceived + '\".';\n    },\n\n  'errmsg:incompatible-types-on-assignment':\n    function (variableName, oldType, newType) {\n      return 'La variable \"' + variableName + '\" '\n           + 'contenía un valor de tipo ' + oldType + ', '\n           + 'no se le puede asignar un valor de tipo ' + newType + '\".';\n    },\n\n  'errmsg:incompatible-types-on-list-creation':\n    function (index, oldType, newType) {\n      return 'Todos los elementos de una lista deben ser del mismo tipo. '\n           + 'Los elementos son de tipo ' + oldType + ', '\n           + 'pero el elemento en la posición ' + index.toString() + ' '\n           + 'es de tipo ' + newType + '.';\n    },\n\n  'errmsg:incompatible-types-on-structure-update':\n    function (fieldName, oldType, newType) {\n      return 'El campo \"' + fieldName + '\" es de tipo ' + oldType + '. '\n           + 'No se lo puede actualizar con un valor de tipo ' + newType + '.';\n    },\n\n  'errmsg:expected-tuple-value-but-got':\n    function (receivedType) {\n      return 'Se esperaba una tupla pero se recibió un valor '\n           + 'de tipo ' + receivedType + '.';\n    },\n\n  'errmsg:tuple-component-out-of-bounds':\n    function (size, index) {\n      return 'Índice fuera de rango. '\n           + 'La tupla es de tamaño ' + size.toString() + ' y '\n           + 'el índice es ' + index.toString() + '.';\n    },\n\n  'errmsg:expected-structure-value-but-got':\n    function (receivedType) {\n      return 'Se esperaba una estructura pero se recibió un valor '\n           + 'de tipo ' + receivedType + '.';\n    },\n\n  'errmsg:structure-field-not-present':\n    function (fieldNames, missingFieldName) {\n      return 'La estructura no tiene un campo \"' + missingFieldName + '\". '\n           + 'Los campos son: [' + fieldNames.join(', ') + '].';\n    },\n\n  'errmsg:primitive-does-not-exist':\n    function (primitiveName) {\n      return 'La operación primitiva \"' + primitiveName + '\" '\n           + 'no existe o no está disponible.';\n    },\n\n  'errmsg:primitive-arity-mismatch':\n    function (name, expected, received) {\n      return 'La operación \"' + name + '\" espera recibir '\n           + LOCALE_ES['<n>-parameters'](expected)\n           + ' pero se la invoca con '\n           + LOCALE_ES['<n>-arguments'](received) + '.';\n    },\n\n  'errmsg:primitive-argument-type-mismatch':\n    function (name, parameterIndex, expectedType, receivedType) {\n      return 'El parámetro #' + parameterIndex.toString() + ' '\n           + 'de la operación \"' + name + '\" '\n           + 'debería ser de tipo ' + expectedType + ' '\n           + 'pero el argumento es de tipo ' + receivedType + '.';\n    },\n\n  'errmsg:expected-value-of-type-but-got':\n    function (expectedType, receivedType) {\n      return 'Se esperaba un valor de tipo ' + expectedType + ' '\n           + 'pero se recibió un valor de tipo ' + receivedType + '.';\n    },\n\n  'errmsg:expected-value-of-some-type-but-got':\n    function (expectedTypes, receivedType) {\n      return 'Se esperaba un valor de alguno de los siguientes tipos: '\n           + expectedTypes.join(', ')\n           + '; pero se recibió un valor de tipo ' + receivedType + '.';\n    },\n\n  'errmsg:expected-values-to-have-compatible-types':\n    function (type1, type2) {\n      return 'Los tipos de los valores deben ser compatibles, '\n           + 'pero uno es de tipo ' + type1 + ' '\n           + 'y el otro es de tipo ' + type2 + '.';\n    },\n\n  'errmsg:switch-does-not-match':\n    'El valor analizado no coincide con ninguna de las ramas del switch.',\n\n  'errmsg:cannot-divide-by-zero':\n    'No se puede dividir por cero.',\n\n  'errmsg:list-cannot-be-empty':\n    'La lista no puede ser vacía.',\n\n  'errmsg:timeout':\n    function (millisecs) {\n      return 'La ejecución del programa demoró más de '\n           + millisecs.toString() + 'ms.';\n    },\n\n  /* Board operations */\n  'errmsg:cannot-move-to':\n    function (dirName) {\n      return 'No se puede mover hacia la dirección ' + dirName +\n             ': cae afuera del tablero.';\n    },\n\n  'errmsg:cannot-remove-stone':\n    function (dirName) {\n      return 'No se puede sacar una bolita de color ' + dirName +\n             ': no hay bolitas de ese color.';\n    },\n\n  /* Runtime */\n\n  'TYPE:Integer': 'Number',\n  'TYPE:String': 'String',\n  'TYPE:Tuple': 'Tuple',\n  'TYPE:List': 'List',\n\n  'TYPE:Event': 'Event',\n  'CONS:INIT': 'INIT',\n  'CONS:TIMEOUT': 'TIMEOUT',\n\n  'TYPE:Bool': 'Bool',\n  'CONS:False': 'False',\n  'CONS:True': 'True',\n\n  'TYPE:Color': 'Color',\n  'CONS:Color0': 'Azul',\n  'CONS:Color1': 'Negro',\n  'CONS:Color2': 'Rojo',\n  'CONS:Color3': 'Verde',\n\n  'TYPE:Dir': 'Dir',\n  'CONS:Dir0': 'Norte',\n  'CONS:Dir1': 'Este',\n  'CONS:Dir2': 'Sur',\n  'CONS:Dir3': 'Oeste',\n\n  'PRIM:PutStone': 'Poner',\n  'PRIM:RemoveStone': 'Sacar',\n  'PRIM:Move': 'Mover',\n  'PRIM:GoToEdge': 'IrAlBorde',\n  'PRIM:EmptyBoardContents': 'VaciarTablero',\n  'PRIM:numStones': 'nroBolitas',\n  'PRIM:anyStones': 'hayBolitas',\n  'PRIM:canMove': 'puedeMover',\n  'PRIM:next': 'siguiente',\n  'PRIM:prev': 'previo',\n  'PRIM:opposite': 'opuesto',\n  'PRIM:minBool': 'minBool',\n  'PRIM:maxBool': 'maxBool',\n  'PRIM:minColor': 'minColor',\n  'PRIM:maxColor': 'maxColor',\n  'PRIM:minDir': 'minDir',\n  'PRIM:maxDir': 'maxDir',\n\n  'PRIM:head': 'primero',\n  'PRIM:tail': 'resto',\n  'PRIM:init': 'ultimo',\n  'PRIM:last': 'comienzo',\n\n  /* Helpers */\n  '<alternative>':\n    function (strings) {\n      return 'alguna de las siguientes alternativas:\\n'\n           + strings.map(s => '  ' + s).join('\\n');\n    },\n  '<position>':\n    function (filename, line, column) {\n      return filename + ':' + line.toString() + ':' + column.toString();\n    },\n  '<n>-parameters':\n    function (n) {\n      return masculino(n, 'parámetro', 'parámetros');\n    },\n  '<n>-arguments':\n    function (n) {\n      return masculino(n, 'argumento', 'argumentos');\n    },\n  '<n>-fields':\n    function (n) {\n      return masculino(n, 'campo', 'campos');\n    },\n  '<pattern-type>':\n    function (patternType) {\n      if (patternType === 'Event') {\n        return 'evento del programa interactivo';\n      } else if (patternType.substring(0, 7) === '_TUPLE_') {\n        return 'tupla de ' + patternType.substring(7) + ' componentes';\n      } else {\n        return patternType;\n      }\n    },\n};\n\n/* TODO: Translate LOCALE_EN */\n\n/* BEGIN: temporary declaration of LOCALE_EN */\nconst LOCALE_EN = {};\nfor (let key in LOCALE_ES) {\n  LOCALE_EN[key] = LOCALE_ES[key];\n}\nLOCALE_EN['CONS:Dir0'] = 'North';\nLOCALE_EN['CONS:Dir1'] = 'East';\nLOCALE_EN['CONS:Dir2'] = 'South';\nLOCALE_EN['CONS:Dir3'] = 'West';\n/* END: temporary declaration of LOCALE_EN */\n\nlet CURRENT_LANGUAGE = 'es';\n\nlet dictionaries = {\n  'es': LOCALE_ES,\n  'en': LOCALE_EN,\n};\n\nexport function i18n(message) {\n  return dictionaries[CURRENT_LANGUAGE][message];\n}\n\nexport function i18nWithLanguage(code, thunk) {\n  if (!(code in dictionaries)) {\n    throw Error('Invlid language code: ' + code);\n  }\n  let oldLanguage = CURRENT_LANGUAGE;\n  CURRENT_LANGUAGE = code;\n  try {\n    return thunk();\n  } finally {\n    CURRENT_LANGUAGE = oldLanguage;\n  }\n}\n\nexport function i18nPosition(position) {\n  return i18n('<position>')(\n           position.filename,\n           position.line,\n           position.column,\n         );\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/i18n.js","import { i18n } from './i18n';\n\n/* Base class for signalling conditions */\nexport class GbsInterpreterException extends Error {\n  /* Note: position should typically be an instance of SourceReader */\n  constructor(startPos, endPos, errorType, reason, args) {\n    super(reason, startPos.filename, startPos.row);\n    this.isGobstonesException = true;\n    this.startPos = startPos;\n    this.endPos = endPos;\n    this.reason = reason;\n    this.args = args;\n\n    this.message = i18n(errorType + ':' + reason);\n    if (args.length > 0 && typeof this.message === 'function') {\n      this.message = this.message.apply(null, args);\n    }\n  }\n}\n\nexport class GbsWarning extends GbsInterpreterException {\n  constructor(startPos, endPos, reason, args) {\n    super(startPos, endPos, 'warning', reason, args);\n  }\n}\n\nexport class GbsSyntaxError extends GbsInterpreterException {\n  constructor(startPos, endPos, reason, args) {\n    super(startPos, endPos, 'errmsg', reason, args);\n  }\n}\n\nexport class GbsRuntimeError extends GbsInterpreterException {\n  constructor(startPos, endPos, reason, args) {\n    super(startPos, endPos, 'errmsg', reason, args);\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/exceptions.js","import { UnknownPosition } from './reader';\nimport { Token } from './token';\n\nexport const N_Main = Symbol.for('N_Main');\n/* Definitions */\nexport const N_DefProgram = Symbol.for('N_DefProgram');\nexport const N_DefInteractiveProgram = Symbol.for('N_DefInteractiveProgram');\nexport const N_DefProcedure = Symbol.for('N_DefProcedure');\nexport const N_DefFunction = Symbol.for('N_DefFunction');\nexport const N_DefType = Symbol.for('N_DefType');\n/* Statements */\nexport const N_StmtBlock = Symbol.for('N_StmtBlock');\nexport const N_StmtReturn = Symbol.for('N_StmtReturn');\nexport const N_StmtIf = Symbol.for('N_StmtIf');\nexport const N_StmtRepeat = Symbol.for('N_StmtRepeat');\nexport const N_StmtForeach = Symbol.for('N_StmtForeach');\nexport const N_StmtWhile = Symbol.for('N_StmtWhile');\nexport const N_StmtSwitch = Symbol.for('N_StmtSwitch');\nexport const N_StmtAssignVariable = Symbol.for('N_StmtAssignVariable');\nexport const N_StmtAssignTuple = Symbol.for('N_StmtAssignTuple');\nexport const N_StmtProcedureCall = Symbol.for('N_StmtProcedureCall');\n/* Patterns */\nexport const N_PatternWildcard = Symbol.for('N_PatternWildcard');\nexport const N_PatternStructure = Symbol.for('N_PatternStructure');\nexport const N_PatternTuple = Symbol.for('N_PatternTuple');\nexport const N_PatternTimeout = Symbol.for('N_PatternTimeout');\n/* Expressions */\nexport const N_ExprVariable = Symbol.for('N_ExprVariable');\nexport const N_ExprConstantNumber = Symbol.for('N_ExprConstantNumber');\nexport const N_ExprConstantString = Symbol.for('N_ExprConstantString');\nexport const N_ExprList = Symbol.for('N_ExprList');\nexport const N_ExprRange = Symbol.for('N_ExprRange');\nexport const N_ExprTuple = Symbol.for('N_ExprTuple');\nexport const N_ExprStructure = Symbol.for('N_ExprStructure');\nexport const N_ExprStructureUpdate = Symbol.for('N_ExprStructureUpdate');\nexport const N_ExprFunctionCall = Symbol.for('N_ExprFunctionCall');\n/* SwitchBranch: pattern -> body */\nexport const N_SwitchBranch = Symbol.for('N_SwitchBranch');\n/* FieldBinding: fieldName <- value */\nexport const N_FieldBinding = Symbol.for('N_FieldBinding');\n/* ConstructorDeclaration */\nexport const N_ConstructorDeclaration = Symbol.for('N_ConstructorDeclaration');\n\n/* Helper functions for the ASTNode toString method */\n\nfunction indent(string) {\n  let lines = [];\n  for (let line of string.split('\\n')) {\n    lines.push('  ' + line);\n  }\n  return lines.join('\\n');\n}\n\nlet showASTs; /* Forward declaration (for ESLint) */\n\nfunction showAST(node) {\n  if (node === null) {\n    return 'null';\n  } else if (node instanceof Array) {\n    return '[\\n' + showASTs(node).join(',\\n') + '\\n]';\n  } else if (node instanceof Token) {\n    return node.toString();\n  } else {\n    let tag = Symbol.keyFor(node.tag).substring(2);\n    return tag + '(\\n' + showASTs(node.children).join(',\\n') + '\\n)';\n  }\n}\n\nshowASTs = function (nodes) {\n  let res = [];\n  for (let node of nodes) {\n    res.push(indent(showAST(node)));\n  }\n  return res;\n};\n\n/* An instance of ASTNode represents a node of the abstract syntax tree.\n * - tag should be a node tag symbol.\n * - children should be (recursively) a possibly empty array of ASTNode's.\n * - startPos and endPos represent the starting and ending\n *   position of the code fragment in the source code, to aid error\n *   reporting.\n */\nexport class ASTNode {\n  constructor(tag, children) {\n    this._tag = tag;\n    this._children = children;\n    this._startPos = UnknownPosition;\n    this._endPos = UnknownPosition;\n\n    /* Assert this invariant to protect against common mistakes. */\n    if (!(children instanceof Array)) {\n      throw Error('The children of an ASTNode should be an array.');\n    }\n  }\n\n  toString() {\n    return showAST(this);\n  }\n\n  get tag() {\n    return this._tag;\n  }\n\n  get children() {\n    return this._children;\n  }\n\n  set startPos(position) {\n    this._startPos = position;\n  }\n\n  get startPos() {\n    return this._startPos;\n  }\n\n  set endPos(position) {\n    this._endPos = position;\n  }\n\n  get endPos() {\n    return this._endPos;\n  }\n\n}\n\n/* Main */\n\nexport class ASTMain extends ASTNode {\n  constructor(definitions) {\n    super(N_Main, definitions);\n  }\n\n  get definitions() {\n    return this._children;\n  }\n}\n\n/* Definitions */\n\nexport class ASTDefProgram extends ASTNode {\n  constructor(body) {\n    super(N_DefProgram, [body]);\n  }\n\n  get body() {\n    return this.children[0];\n  }\n}\n\nexport class ASTDefInteractiveProgram extends ASTNode {\n  constructor(branches) {\n    super(N_DefInteractiveProgram, branches);\n  }\n\n  get branches() {\n    return this.children;\n  }\n}\n\nexport class ASTDefProcedure extends ASTNode {\n  constructor(name, parameters, body) {\n    super(N_DefProcedure, [name, parameters, body]);\n  }\n\n  get name() {\n    return this.children[0];\n  }\n\n  get parameters() {\n    return this.children[1];\n  }\n\n  get body() {\n    return this.children[2];\n  }\n}\n\nexport class ASTDefFunction extends ASTNode {\n  constructor(name, parameters, body) {\n    super(N_DefFunction, [name, parameters, body]);\n  }\n\n  get name() {\n    return this.children[0];\n  }\n\n  get parameters() {\n    return this.children[1];\n  }\n\n  get body() {\n    return this.children[2];\n  }\n}\n\nexport class ASTDefType extends ASTNode {\n  constructor(typeName, constructorDeclarations) {\n    super(N_DefType, [typeName, constructorDeclarations]);\n  }\n\n  get typeName() {\n    return this._children[0];\n  }\n\n  get constructorDeclarations() {\n    return this._children[1];\n  }\n}\n\n/* Statements */\n\nexport class ASTStmtBlock extends ASTNode {\n  constructor(statements) {\n    super(N_StmtBlock, statements);\n  }\n\n  get statements() {\n    return this.children;\n  }\n}\n\nexport class ASTStmtReturn extends ASTNode {\n  constructor(result) {\n    super(N_StmtReturn, [result]);\n  }\n\n  get result() {\n    return this.children[0];\n  }\n}\n\nexport class ASTStmtIf extends ASTNode {\n  // Note: elseBlock may be null\n  constructor(condition, thenBlock, elseBlock) {\n    super(N_StmtIf, [condition, thenBlock, elseBlock]);\n  }\n\n  get condition() {\n    return this._children[0];\n  }\n\n  get thenBlock() {\n    return this._children[1];\n  }\n\n  get elseBlock() {\n    return this._children[2];\n  }\n}\n\nexport class ASTStmtRepeat extends ASTNode {\n  constructor(times, body) {\n    super(N_StmtRepeat, [times, body]);\n  }\n\n  get times() {\n    return this._children[0];\n  }\n\n  get body() {\n    return this._children[1];\n  }\n}\n\nexport class ASTStmtForeach extends ASTNode {\n  constructor(index, range, body) {\n    super(N_StmtForeach, [index, range, body]);\n  }\n\n  get index() {\n    return this._children[0];\n  }\n\n  get range() {\n    return this._children[1];\n  }\n\n  get body() {\n    return this._children[2];\n  }\n}\n\nexport class ASTStmtWhile extends ASTNode {\n  constructor(condition, body) {\n    super(N_StmtWhile, [condition, body]);\n  }\n\n  get condition() {\n    return this._children[0];\n  }\n\n  get body() {\n    return this._children[1];\n  }\n}\n\nexport class ASTStmtSwitch extends ASTNode {\n  constructor(subject, branches) {\n    super(N_StmtSwitch, [subject, branches]);\n  }\n\n  get subject() {\n    return this._children[0];\n  }\n\n  get branches() {\n    return this._children[1];\n  }\n}\n\nexport class ASTSwitchBranch extends ASTNode {\n  constructor(pattern, body) {\n    super(N_SwitchBranch, [pattern, body]);\n  }\n\n  get pattern() {\n    return this._children[0];\n  }\n\n  get body() {\n    return this._children[1];\n  }\n}\n\nexport class ASTStmtAssignVariable extends ASTNode {\n  constructor(variable, value) {\n    super(N_StmtAssignVariable, [variable, value]);\n  }\n\n  get variable() {\n    return this._children[0];\n  }\n\n  get value() {\n    return this._children[1];\n  }\n}\n\nexport class ASTStmtAssignTuple extends ASTNode {\n  constructor(variables, value) {\n    super(N_StmtAssignTuple, [variables, value]);\n  }\n\n  get variables() {\n    return this._children[0];\n  }\n\n  get value() {\n    return this._children[1];\n  }\n}\n\nexport class ASTStmtProcedureCall extends ASTNode {\n  constructor(procedureName, args) {\n    super(N_StmtProcedureCall, [procedureName, args]);\n  }\n\n  get procedureName() {\n    return this._children[0];\n  }\n\n  get args() {\n    return this._children[1];\n  }\n}\n\n/* Patterns */\n\nexport class ASTPatternWildcard extends ASTNode {\n  constructor() {\n    super(N_PatternWildcard, []);\n  }\n\n  get parameters() {\n    return [];\n  }\n}\n\nexport class ASTPatternStructure extends ASTNode {\n  constructor(constructorName, parameters) {\n    super(N_PatternStructure, [constructorName, parameters]);\n  }\n\n  get constructorName() {\n    return this._children[0];\n  }\n\n  get parameters() {\n    return this._children[1];\n  }\n}\n\nexport class ASTPatternTuple extends ASTNode {\n  constructor(parameters) {\n    super(N_PatternTuple, parameters);\n  }\n\n  get parameters() {\n    return this._children;\n  }\n}\n\nexport class ASTPatternTimeout extends ASTNode {\n  constructor(timeout) {\n    super(N_PatternTimeout, [timeout]);\n  }\n\n  get parameters() {\n    return [];\n  }\n\n  get timeout() {\n    return parseInt(this._children[0].value, 10);\n  }\n}\n\n/* Expressions */\n\nexport class ASTExprVariable extends ASTNode {\n  constructor(variableName) {\n    super(N_ExprVariable, [variableName]);\n  }\n\n  get variableName() {\n    return this._children[0];\n  }\n}\n\nexport class ASTExprConstantNumber extends ASTNode {\n  constructor(number) {\n    super(N_ExprConstantNumber, [number]);\n  }\n\n  get number() {\n    return this._children[0];\n  }\n}\n\nexport class ASTExprConstantString extends ASTNode {\n  constructor(string) {\n    super(N_ExprConstantString, [string]);\n  }\n\n  get string() {\n    return this._children[0];\n  }\n}\n\nexport class ASTExprList extends ASTNode {\n  constructor(elements) {\n    super(N_ExprList, elements);\n  }\n\n  get elements() {\n    return this._children;\n  }\n}\n\nexport class ASTExprRange extends ASTNode {\n  // Note: second may be null\n  constructor(first, second, last) {\n    super(N_ExprRange, [first, second, last]);\n  }\n\n  get first() {\n    return this._children[0];\n  }\n\n  get second() {\n    return this._children[1];\n  }\n\n  get last() {\n    return this._children[2];\n  }\n}\n\nexport class ASTExprTuple extends ASTNode {\n  constructor(elements) {\n    super(N_ExprTuple, elements);\n  }\n\n  get elements() {\n    return this.children;\n  }\n}\n\nexport class ASTExprStructure extends ASTNode {\n  constructor(constructorName, fieldBindings) {\n    super(N_ExprStructure, [constructorName, fieldBindings]);\n  }\n\n  get constructorName() {\n    return this._children[0];\n  }\n\n  get fieldBindings() {\n    return this._children[1];\n  }\n\n  fieldNames() {\n    let names = [];\n    for (let fieldBinding of this.fieldBindings) {\n      names.push(fieldBinding.fieldName.value);\n    }\n    return names;\n  }\n}\n\nexport class ASTExprStructureUpdate extends ASTNode {\n  constructor(constructorName, original, fieldBindings) {\n    super(N_ExprStructureUpdate, [constructorName, original, fieldBindings]);\n  }\n\n  get constructorName() {\n    return this._children[0];\n  }\n\n  get original() {\n    return this._children[1];\n  }\n\n  get fieldBindings() {\n    return this._children[2];\n  }\n\n  fieldNames() {\n    let names = [];\n    for (let fieldBinding of this.fieldBindings) {\n      names.push(fieldBinding.fieldName.value);\n    }\n    return names;\n  }\n}\n\nexport class ASTExprFunctionCall extends ASTNode {\n  constructor(functionName, args) {\n    super(N_ExprFunctionCall, [functionName, args]);\n  }\n\n  get functionName() {\n    return this._children[0];\n  }\n\n  get args() {\n    return this._children[1];\n  }\n}\n\nexport class ASTFieldBinding extends ASTNode {\n  constructor(fieldName, value) {\n    super(N_FieldBinding, [fieldName, value]);\n  }\n\n  get fieldName() {\n    return this._children[0];\n  }\n\n  get value() {\n    return this._children[1];\n  }\n}\n\nexport class ASTConstructorDeclaration extends ASTNode {\n  constructor(constructorName, fieldNames) {\n    super(N_ConstructorDeclaration, [constructorName, fieldNames]);\n  }\n\n  get constructorName() {\n    return this._children[0];\n  }\n\n  get fieldNames() {\n    return this._children[1];\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/ast.js","import { i18n } from './i18n';\nimport {\n  ValueInteger,\n  ValueList,\n  ValueStructure,\n  TypeAny,\n  TypeInteger,\n  TypeString,\n  TypeStructure,\n  TypeList,\n  joinTypes,\n} from './value';\nimport {\n  GbsRuntimeError,\n} from './exceptions';\n\n/*\n * This module provides the runtime support for the execution of a program.\n *\n * The runtime support includes:\n *\n * - A definition of a class RuntimeState, representing the global state\n *   of a program.\n *\n * - A definition of a class RuntimePrimitives, representing the available\n *   primitive functions.\n *\n * This file is a particular implementation, in which RuntimeState\n * represents a Gobstones board, and RuntimePrimitives are the primitives\n * functions and procedures available in Gobstones.\n *\n * Potential variants of the language might have a different notion of\n * global state, and different available primitives.\n */\n\nfunction fail(startPos, endPos, reason, args) {\n  throw new GbsRuntimeError(startPos, endPos, reason, args);\n}\n\nfunction boolEnum() {\n  return [\n    i18n('CONS:False'),\n    i18n('CONS:True'),\n  ];\n}\n\nfunction colorEnum() {\n  return [\n    i18n('CONS:Color0'),\n    i18n('CONS:Color1'),\n    i18n('CONS:Color2'),\n    i18n('CONS:Color3'),\n  ];\n}\n\nfunction dirEnum() {\n  return [\n    i18n('CONS:Dir0'),\n    i18n('CONS:Dir1'),\n    i18n('CONS:Dir2'),\n    i18n('CONS:Dir3'),\n  ];\n}\n\n/* Enumeration of all the constructors of the Event type, including\n * INIT and TIMEOUT. */\nfunction keyEventEnum() {\n  let modifiers = [\n    '', 'CTRL_', 'ALT_', 'SHIFT_', 'CTRL_ALT_', 'CTRL_SHIFT_', 'ALT_SHIFT_',\n    'CTRL_ALT_SHIFT_',\n  ];\n  let charKeys = [\n    'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O',\n    'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n  ];\n  let specialKeys = [\n    'SPACE', 'ENTER', 'TAB', 'BACKSPACE', 'DELETE', 'ESCAPE',\n  ];\n  let symbolKeys = [\n    'PLUS', 'MINUS', 'ASTERISK', 'SLASH', 'EQUALS', 'L_PARENT', 'R_PARENT',\n    'L_BRACKET', 'R_BRACKET', 'L_ANGLEBR', 'R_ANGLEBR',\n  ];\n  let arrowKeys = [\n    'ARROW_LEFT', 'ARROW_RIGHT', 'ARROW_UP', 'ARROW_DOWN',\n  ];\n  let keys = charKeys.concat(specialKeys).concat(symbolKeys).concat(arrowKeys);\n\n  let eventNames = [];\n  for (let modifier of modifiers) {\n    for (let key of keys) {\n      eventNames.push('K_' + modifier + key);\n    }\n  }\n  return eventNames;\n}\n\nlet KEY_EVENT_ENUM = keyEventEnum();\n\nfunction eventEnum() {\n  return [i18n('CONS:INIT'), i18n('CONS:TIMEOUT')].concat(KEY_EVENT_ENUM);\n}\n\nfunction toEnum(enumeration, name) {\n  return enumeration.indexOf(name);\n}\n\nfunction fromEnum(enumeration, index) {\n  return enumeration[index];\n}\n\nfunction dirOpposite(dirName) {\n  return fromEnum(dirEnum(), (toEnum(dirEnum(), dirName) + 2) % 4);\n}\n\nfunction dirNext(dirName) {\n  return fromEnum(dirEnum(), (toEnum(dirEnum(), dirName) + 1) % 4);\n}\n\nfunction dirPrev(dirName) {\n  return fromEnum(dirEnum(), (toEnum(dirEnum(), dirName) + 3) % 4);\n}\n\nfunction colorNext(colorName) {\n  return fromEnum(colorEnum(), (toEnum(colorEnum(), colorName) + 1) % 4);\n}\n\nfunction colorPrev(colorName) {\n  return fromEnum(colorEnum(), (toEnum(colorEnum(), colorName) + 3) % 4);\n}\n\n/*\n * An instance of RuntimeState represents the current global state of\n * a program. In the case of Gobstones, it is a Gobstones board.\n *\n * It MUST implement the following methods:\n *\n *   this.clone() ~~> returns a copy of the state\n *\n */\nexport class RuntimeState {\n  constructor() {\n    /*\n     * The board is represented as a list of columns, so that board[x] is the\n     * x-th column and board[x][y] is the cell at (x, y).\n     *\n     * By default, create an empty 9x9 board.\n     */\n    this._width = 11;\n    this._height = 7;\n    this._board = [];\n    for (let x = 0; x < this._width; x++) {\n      let column = [];\n      for (let y = 0; y < this._height; y++) {\n        column.push(this._emptyCell());\n      }\n      this._board.push(column);\n    }\n    this._head = {'x': 0, 'y': 0};\n  }\n\n  clone() {\n    let newState = new RuntimeState();\n    newState._width = this._width;\n    newState._height = this._height;\n    newState._board = [];\n    for (let x = 0; x < this._width; x++) {\n      let column = [];\n      for (let y = 0; y < this._height; y++) {\n        let cell = {};\n        for (let colorName of colorEnum()) {\n          cell[colorName] = this._board[x][y][colorName];\n        }\n        column.push(cell);\n      }\n      newState._board.push(column);\n    }\n    newState._head = {'x': this._head.x, 'y': this._head.y};\n    return newState;\n  }\n\n  /* Dump the state to a Jboard data structure */\n  dump() {\n    let jboard = {};\n    jboard.width = this._width;\n    jboard.height = this._height;\n    jboard.head = [this._head.x, this._head.y];\n    jboard.board = [];\n    for (let x = 0; x < this._width; x++) {\n      let column = [];\n      for (let y = 0; y < this._height; y++) {\n        let cell = {};\n        cell['a'] = this._board[x][y][i18n('CONS:Color0')].asNumber();\n        cell['n'] = this._board[x][y][i18n('CONS:Color1')].asNumber();\n        cell['r'] = this._board[x][y][i18n('CONS:Color2')].asNumber();\n        cell['v'] = this._board[x][y][i18n('CONS:Color3')].asNumber();\n        column.push(cell);\n      }\n      jboard.board.push(column);\n    }\n    return jboard;\n  }\n\n  /* Load the state from a Jboard data structure */\n  load(jboard) {\n    this._width = jboard.width;\n    this._height = jboard.height;\n    this._head.x = jboard.head[0];\n    this._head.y = jboard.head[1];\n    for (let x = 0; x < this._width; x++) {\n      for (let y = 0; y < this._height; y++) {\n        let cell = jboard.board[x][y];\n        this._board[x][y][i18n('CONS:Color0')] = new ValueInteger(cell['a']);\n        this._board[x][y][i18n('CONS:Color1')] = new ValueInteger(cell['n']);\n        this._board[x][y][i18n('CONS:Color2')] = new ValueInteger(cell['r']);\n        this._board[x][y][i18n('CONS:Color3')] = new ValueInteger(cell['v']);\n      }\n    }\n  }\n\n  /* Gobstones specific methods */\n\n  putStone(colorName) {\n    let n = this._board[this._head.x][this._head.y][colorName];\n    n = n.add(new ValueInteger(1));\n    this._board[this._head.x][this._head.y][colorName] = n;\n  }\n\n  removeStone(colorName) {\n    let n = this._board[this._head.x][this._head.y][colorName];\n    if (n.le(new ValueInteger(0))) {\n      throw Error('Cannot remove stone.');\n    }\n    n = n.sub(new ValueInteger(1));\n    this._board[this._head.x][this._head.y][colorName] = n;\n  }\n\n  numStones(colorName) {\n    return this._board[this._head.x][this._head.y][colorName];\n  }\n\n  move(dirName) {\n    if (!this.canMove(dirName)) {\n      throw Error('Cannot move.');\n    }\n    let delta = this._deltaForDirection(dirName);\n    this._head.x += delta[0];\n    this._head.y += delta[1];\n  }\n\n  goToEdge(dirName) {\n    if (dirName === i18n('CONS:Dir0')) {\n      this._head.y = this._height - 1;\n    } else if (dirName === i18n('CONS:Dir1')) {\n      this._head.x = this._width - 1;\n    } else if (dirName === i18n('CONS:Dir2')) {\n      this._head.y = 0;\n    } else if (dirName === i18n('CONS:Dir3')) {\n      this._head.x = 0;\n    } else {\n      throw Error('Invalid direction: ' + dirName);\n    }\n  }\n\n  emptyBoardContents() {\n    for (let x = 0; x < this._width; x++) {\n      for (let y = 0; y < this._height; y++) {\n        this._board[x][y] = this._emptyCell();\n      }\n    }\n  }\n\n  canMove(dirName) {\n    let delta = this._deltaForDirection(dirName);\n    let x = this._head.x + delta[0];\n    let y = this._head.y + delta[1];\n    return 0 <= x && x < this._width && 0 <= y && y < this._height;\n  }\n\n  _deltaForDirection(dirName) {\n    let delta;\n    if (dirName === i18n('CONS:Dir0')) {\n      delta = [0, 1];\n    } else if (dirName === i18n('CONS:Dir1')) {\n      delta = [1, 0];\n    } else if (dirName === i18n('CONS:Dir2')) {\n      delta = [0, -1];\n    } else if (dirName === i18n('CONS:Dir3')) {\n      delta = [-1, 0];\n    } else {\n      throw Error('Invalid direction: ' + dirName);\n    }\n    return delta;\n  }\n\n  _emptyCell() {\n    let cell = {};\n    for (let colorName of colorEnum()) {\n      cell[colorName] = new ValueInteger(0);\n    }\n    return cell;\n  }\n}\n\nclass PrimitiveOperation {\n\n  constructor(argumentTypes, argumentValidator, implementation) {\n    this._argumentTypes = argumentTypes;\n    this._argumentValidator = argumentValidator;\n    this._implementation = implementation;\n  }\n\n  get argumentTypes() {\n    return this._argumentTypes;\n  }\n\n  nargs() {\n    return this._argumentTypes.length;\n  }\n\n  call(globalState, args) {\n    return this._implementation.apply(null, [globalState].concat(args));\n  }\n\n  /* Check that the arguments are valid according to the validator.\n   * The validator should be a function receiving a start and end\n   * positions, and a list of arguments.\n   * It should throw a GbsRuntimeError if the arguments are invalid.\n   */\n  validateArguments(startPos, endPos, globalState, args) {\n    this._argumentValidator(startPos, endPos, globalState, args);\n  }\n\n}\n\n/* Casting Gobstones values to JavaScript values and vice-versa */\n\nlet typeAny = new TypeAny();\n\nlet typeInteger = new TypeInteger();\n\nlet typeString = new TypeString();\n\nlet typeBool = new TypeStructure(i18n('TYPE:Bool'), {});\n\nlet typeListAny = new TypeList(new TypeAny());\n\nfunction valueFromBool(bool) {\n  if (bool) {\n    return new ValueStructure(i18n('TYPE:Bool'), i18n('CONS:True'), {});\n  } else {\n    return new ValueStructure(i18n('TYPE:Bool'), i18n('CONS:False'), {});\n  }\n}\n\nexport function boolFromValue(value) {\n  return value.constructorName === i18n('CONS:True');\n}\n\nlet typeColor = new TypeStructure(i18n('TYPE:Color'), {});\n\nfunction valueFromColor(colorName) {\n  return new ValueStructure(i18n('TYPE:Color'), colorName, {});\n}\n\nfunction colorFromValue(value) {\n  return value.constructorName;\n}\n\nlet typeDir = new TypeStructure(i18n('TYPE:Dir'), {});\n\nfunction valueFromDir(dirName) {\n  return new ValueStructure(i18n('TYPE:Dir'), dirName, {});\n}\n\nfunction dirFromValue(value) {\n  return value.constructorName;\n}\n\n/* Argument validators */\n\nfunction noValidation(startPos, endPos, globalState, args) {\n  /* No validation */\n}\n\nfunction isInteger(x) {\n  return joinTypes(x.type(), typeInteger) !== null;\n}\n\nfunction isBool(x) {\n  return joinTypes(x.type(), typeBool) !== null;\n}\n\nfunction isColor(x) {\n  return joinTypes(x.type(), typeColor) !== null;\n}\n\nfunction isDir(x) {\n  return joinTypes(x.type(), typeDir) !== null;\n}\n\nexport const TYPES_WITH_OPPOSITE = [typeInteger, typeBool, typeDir];\nexport const TYPES_WITH_ORDER = [typeInteger, typeBool, typeColor, typeDir];\n\n/* Generic operations */\n\nfunction enumIndex(value) {\n  if (isBool(value)) {\n    if (boolFromValue(value)) {\n      return 1;\n    } else {\n      return 0;\n    }\n  } else if (isColor(value)) {\n    return toEnum(colorEnum(), colorFromValue(value));\n  } else if (isDir(value)) {\n    return toEnum(dirEnum(), dirFromValue(value));\n  } else {\n    throw Error('Value should be Bool, Color or Dir.');\n  }\n}\n\nfunction genericLE(a, b) {\n  if (isInteger(a)) {\n    return valueFromBool(a.le(b));\n  } else {\n    let indexA = enumIndex(a);\n    let indexB = enumIndex(b);\n    return valueFromBool(indexA <= indexB);\n  }\n}\n\nfunction genericGE(a, b) {\n  if (isInteger(a)) {\n    return valueFromBool(a.ge(b));\n  } else {\n    let indexA = enumIndex(a);\n    let indexB = enumIndex(b);\n    return valueFromBool(indexA >= indexB);\n  }\n}\n\nfunction genericLT(a, b) {\n  if (isInteger(a)) {\n    return valueFromBool(a.lt(b));\n  } else {\n    let indexA = enumIndex(a);\n    let indexB = enumIndex(b);\n    return valueFromBool(indexA < indexB);\n  }\n}\n\nfunction genericGT(a, b) {\n  if (isInteger(a)) {\n    return valueFromBool(a.gt(b));\n  } else {\n    let indexA = enumIndex(a);\n    let indexB = enumIndex(b);\n    return valueFromBool(indexA > indexB);\n  }\n}\n\nfunction genericNext(a) {\n  if (isInteger(a)) {\n    return a.add(new ValueInteger(1));\n  } else if (isBool(a)) {\n    if (boolFromValue(a)) {\n      return valueFromBool(false);\n    } else {\n      return valueFromBool(true);\n    }\n  } else if (isColor(a)) {\n    return valueFromColor(colorNext(colorFromValue(a)));\n  } else if (isDir(a)) {\n    return valueFromDir(dirNext(dirFromValue(a)));\n  } else {\n    throw Error('genericNext: value has no next.');\n  }\n}\n\nfunction genericPrev(a) {\n  if (isInteger(a)) {\n    return a.sub(new ValueInteger(1));\n  } else if (isBool(a)) {\n    if (boolFromValue(a)) {\n      return valueFromBool(false);\n    } else {\n      return valueFromBool(true);\n    }\n  } else if (isColor(a)) {\n    return valueFromColor(colorPrev(colorFromValue(a)));\n  } else if (isDir(a)) {\n    return valueFromDir(dirPrev(dirFromValue(a)));\n  } else {\n    throw Error('genericPrev: value has no prev.');\n  }\n}\n\nfunction genericOpposite(a) {\n  if (isInteger(a)) {\n    return a.negate();\n  } else if (isBool(a)) {\n    return valueFromBool(!boolFromValue(a));\n  } else if (isDir(a)) {\n    return valueFromDir(dirOpposite(dirFromValue(a)));\n  } else {\n    throw Error('genericOpposite: value has no opposite.');\n  }\n}\n/* Validate that the type of 'x' is among the given list of types */\nfunction validateTypeAmong(startPos, endPos, x, types) {\n  /* Succeed if the type of x is in the list 'types' */\n  for (let type of types) {\n    if (joinTypes(x.type(), type) !== null) {\n      return;\n    }\n  }\n  /* Build a list of type names for error reporting */\n  let typeStrings = [];\n  for (let type of types) {\n    typeStrings.push(type.toString());\n  }\n  /* Report error */\n  fail(startPos, endPos,\n    'expected-value-of-some-type-but-got', [\n      typeStrings,\n      x.type().toString()\n    ]\n  );\n}\n\n/* Validate that the types of 'x' and 'y' are compatible */\nfunction validateCompatibleTypes(startPos, endPos, x, y) {\n  if (joinTypes(x.type(), y.type()) === null) {\n    fail(startPos, endPos,\n      'expected-values-to-have-compatible-types', [\n        x.type().toString(),\n        y.type().toString(),\n      ]\n    );\n  }\n}\n\n/* Runtime primitives */\n\nexport class RuntimePrimitives {\n\n  constructor() {\n    /* this._primitiveTypes is a dictionary indexed by type names.\n     *\n     * this._primitiveTypes[typeName] is a dictionary indexed by\n     * the constructor names of the given type.\n     *\n     * this._primitiveTypes[typeName][constructorName]\n     * is a list of field names.\n     */\n    this._primitiveTypes = {};\n\n    /* this._primitiveProcedures and this._primitiveFunctions\n     * are dictionaries indexed by the name of the primitive operation\n     * (procedure or function). Their value is an instance of\n     * PrimitiveOperation.\n     */\n    this._primitiveProcedures = {};\n    this._primitiveFunctions = {};\n\n    /* --Primitive types-- */\n\n    /* Booleans */\n    this._primitiveTypes[i18n('TYPE:Bool')] = {};\n    for (let boolName of boolEnum()) {\n      this._primitiveTypes[i18n('TYPE:Bool')][boolName] = [];\n    }\n\n    /* Colors */\n    this._primitiveTypes[i18n('TYPE:Color')] = {};\n    for (let colorName of colorEnum()) {\n      this._primitiveTypes[i18n('TYPE:Color')][colorName] = [];\n    }\n\n    /* Directions */\n    this._primitiveTypes[i18n('TYPE:Dir')] = {};\n    for (let dirName of dirEnum()) {\n      this._primitiveTypes[i18n('TYPE:Dir')][dirName] = [];\n    }\n\n    /* Events */\n    this._primitiveTypes[i18n('TYPE:Event')] = {};\n    for (let eventName of eventEnum()) {\n      this._primitiveTypes[i18n('TYPE:Event')][eventName] = [];\n    }\n\n    /* --Primitive procedures-- */\n\n    this._primitiveProcedures[i18n('PRIM:PutStone')] =\n      new PrimitiveOperation(\n        [typeColor], noValidation,\n        function (globalState, color) {\n          globalState.putStone(colorFromValue(color));\n          return null;\n        }\n      );\n\n    this._primitiveProcedures[i18n('PRIM:RemoveStone')] =\n      new PrimitiveOperation(\n        [typeColor],\n        function (startPos, endPos, globalState, args) {\n          let colorName = colorFromValue(args[0]);\n          if (globalState.numStones(colorName).le(new ValueInteger(0))) {\n            fail(startPos, endPos, 'cannot-remove-stone', [colorName]);\n          }\n        },\n        function (globalState, color) {\n          globalState.removeStone(colorFromValue(color));\n          return null;\n        }\n      );\n\n    this._primitiveProcedures[i18n('PRIM:Move')] =\n      new PrimitiveOperation(\n        [typeDir],\n        function (startPos, endPos, globalState, args) {\n          let dirName = dirFromValue(args[0]);\n          if (!globalState.canMove(dirName)) {\n            fail(startPos, endPos, 'cannot-move-to', [dirName]);\n          }\n        },\n        function (globalState, dir) {\n          globalState.move(dirFromValue(dir));\n          return null;\n        }\n      );\n\n    this._primitiveProcedures[i18n('PRIM:GoToEdge')] =\n      new PrimitiveOperation(\n        [typeDir], noValidation,\n        function (globalState, dir) {\n          globalState.goToEdge(dirFromValue(dir));\n          return null;\n        }\n      );\n\n    this._primitiveProcedures[i18n('PRIM:EmptyBoardContents')] =\n      new PrimitiveOperation(\n        [], noValidation,\n        function (globalState, dir) {\n          globalState.emptyBoardContents();\n          return null;\n        }\n      );\n\n    this._primitiveProcedures['_FAIL'] =\n      /* Procedure that always fails */\n      new PrimitiveOperation(\n        [typeString],\n        function (startPos, endPos, globalState, args) {\n          fail(startPos, endPos, args[0].string, []);\n        },\n        function (globalState, errMsg) {\n          /* Unreachable */\n          return null;\n        }\n      );\n\n    /* --Primitive functions-- */\n\n    this._primitiveFunctions['_makeRange'] =\n      new PrimitiveOperation(\n        [typeAny, typeAny],\n        function (startPos, endPos, globalState, args) {\n          let first = args[0];\n          let last = args[1];\n          validateCompatibleTypes(startPos, endPos, first, last);\n          validateTypeAmong(startPos, endPos, first, TYPES_WITH_ORDER);\n          validateTypeAmong(startPos, endPos, last, TYPES_WITH_ORDER);\n        },\n        function (globalState, first, last) {\n          let current = first;\n          if (boolFromValue(genericGT(current, last))) {\n            return new ValueList([]);\n          }\n          let result = [];\n          while (boolFromValue(genericLT(current, last))) {\n            result.push(current);\n            current = genericNext(current);\n          }\n          result.push(current);\n          return new ValueList(result);\n        }\n      );\n\n    this._primitiveFunctions['&&'] =\n      new PrimitiveOperation(\n        [typeAny, typeAny], noValidation,\n        /*\n         * This function is a stub so the linter recognizes '&&'\n         * as a defined primitive function of arity 2.\n         *\n         * The implementation of '&&' is treated specially by the\n         * compiler to account for short-circuiting.\n         */\n        function (globalState, x, y) {\n          throw Error('The function \"&&\" should never be called');\n        }\n      );\n\n    this._primitiveFunctions['||'] =\n      new PrimitiveOperation(\n        [typeAny, typeAny], noValidation,\n        /*\n         * This function is a stub so the linter recognizes '||'\n         * as a defined primitive function of arity 2.\n         *\n         * The implementation of '||' is treated specially by the\n         * compiler to account for short-circuiting.\n         */\n        function (globalState, x, y) {\n          throw Error('The function \"||\" should never be called');\n        }\n      );\n\n    this._primitiveFunctions['_makeRangeWithSecond'] =\n      new PrimitiveOperation(\n        [typeAny, typeAny, typeAny],\n        function (startPos, endPos, globalState, args) {\n          let first = args[0];\n          let last = args[1];\n          let second = args[2];\n          validateTypeAmong(startPos, endPos, first, [typeInteger]);\n          validateTypeAmong(startPos, endPos, last, [typeInteger]);\n          validateTypeAmong(startPos, endPos, second, [typeInteger]);\n        },\n        function (globalState, first, last, second) {\n          let delta = second.sub(first);\n          if (delta.lt(new ValueInteger(1))) {\n            return new ValueList([]);\n          }\n          let current = first;\n          let result = [];\n          while (current.le(last)) {\n            result.push(current);\n            current = current.add(delta);\n          }\n          return new ValueList(result);\n        }\n      );\n\n    this._primitiveFunctions['_unsafeListLength'] =\n      new PrimitiveOperation(\n        [typeAny], noValidation,\n        function (globalState, list) {\n          return new ValueInteger(list.length());\n        }\n      );\n\n    this._primitiveFunctions['_unsafeListNth'] =\n      new PrimitiveOperation(\n        [typeAny, typeAny], noValidation,\n        function (globalState, list, index) {\n          return list.elements[index.asNumber()];\n        }\n      );\n\n    this._primitiveFunctions[i18n('PRIM:numStones')] =\n      new PrimitiveOperation(\n        [typeColor], noValidation,\n        function (globalState, color) {\n          return globalState.numStones(colorFromValue(color));\n        }\n      );\n\n    this._primitiveFunctions[i18n('PRIM:anyStones')] =\n      new PrimitiveOperation(\n        [typeColor], noValidation,\n        function (globalState, color) {\n          let num = globalState.numStones(colorFromValue(color));\n          return valueFromBool(num.gt(new ValueInteger(0)));\n        }\n      );\n\n    this._primitiveFunctions[i18n('PRIM:canMove')] =\n      new PrimitiveOperation(\n        [typeDir], noValidation,\n        function (globalState, dir) {\n          return valueFromBool(globalState.canMove(dirFromValue(dir)));\n        }\n      );\n\n    this._primitiveFunctions[i18n('PRIM:next')] =\n      new PrimitiveOperation(\n        [typeAny],\n        function (startPos, endPos, globalState, args) {\n          let value = args[0];\n          validateTypeAmong(startPos, endPos, value, TYPES_WITH_ORDER);\n        },\n        function (globalState, value) {\n          return genericNext(value);\n        }\n      );\n\n    this._primitiveFunctions[i18n('PRIM:prev')] =\n      new PrimitiveOperation(\n        [typeAny],\n        function (startPos, endPos, globalState, args) {\n          let value = args[0];\n          validateTypeAmong(startPos, endPos, value, TYPES_WITH_ORDER);\n        },\n        function (globalState, value) {\n          return genericPrev(value);\n        }\n      );\n\n    this._primitiveFunctions[i18n('PRIM:opposite')] =\n      new PrimitiveOperation(\n        [typeAny],\n        function (startPos, endPos, globalState, args) {\n          let value = args[0];\n          validateTypeAmong(startPos, endPos, value, TYPES_WITH_ORDER);\n        },\n        function (globalState, value) {\n          return genericOpposite(value);\n        }\n      );\n\n    this._primitiveFunctions[i18n('PRIM:minBool')] =\n      new PrimitiveOperation(\n        [], noValidation,\n        function (globalState) {\n          return valueFromBool(false);\n        }\n      );\n\n    this._primitiveFunctions[i18n('PRIM:maxBool')] =\n      new PrimitiveOperation(\n        [], noValidation,\n        function (globalState) {\n          return valueFromBool(true);\n        }\n      );\n\n    this._primitiveFunctions[i18n('PRIM:minColor')] =\n      new PrimitiveOperation(\n        [], noValidation,\n        function (globalState) {\n          return valueFromColor(colorEnum()[0]);\n        }\n      );\n\n    this._primitiveFunctions[i18n('PRIM:maxColor')] =\n      new PrimitiveOperation(\n        [], noValidation,\n        function (globalState) {\n          return valueFromColor(colorEnum()[colorEnum().length - 1]);\n        }\n      );\n\n    this._primitiveFunctions[i18n('PRIM:minDir')] =\n      new PrimitiveOperation(\n        [], noValidation,\n        function (globalState) {\n          return valueFromDir(dirEnum()[0]);\n        }\n      );\n\n    this._primitiveFunctions[i18n('PRIM:maxDir')] =\n      new PrimitiveOperation(\n        [], noValidation,\n        function (globalState) {\n          return valueFromDir(dirEnum()[dirEnum().length - 1]);\n        }\n      );\n\n    /* Arithmetic operators */\n\n    this._primitiveFunctions['+'] =\n      new PrimitiveOperation(\n        [typeInteger, typeInteger], noValidation,\n        function (globalState, a, b) {\n          return a.add(b);\n        }\n      );\n\n    this._primitiveFunctions['-'] =\n      new PrimitiveOperation(\n        [typeInteger, typeInteger], noValidation,\n        function (globalState, a, b) {\n          return a.sub(b);\n        }\n      );\n\n    this._primitiveFunctions['*'] =\n      new PrimitiveOperation(\n        [typeInteger, typeInteger], noValidation,\n        function (globalState, a, b) {\n          return a.mul(b);\n        }\n      );\n\n    this._primitiveFunctions['div'] =\n      new PrimitiveOperation(\n        [typeInteger, typeInteger],\n        function (startPos, endPos, globalState, args) {\n          let b = args[1];\n          if (b.eq(new ValueInteger(0))) {\n            fail(startPos, endPos, 'cannot-divide-by-zero', []);\n          }\n        },\n        function (globalState, a, b) {\n          return a.div(b);\n        }\n      );\n\n    this._primitiveFunctions['mod'] =\n      new PrimitiveOperation(\n        [typeInteger, typeInteger],\n        function (startPos, endPos, globalState, args) {\n          let b = args[1];\n          if (b.eq(new ValueInteger(0))) {\n            fail(startPos, endPos, 'cannot-divide-by-zero', []);\n          }\n        },\n        function (globalState, a, b) {\n          return a.mod(b);\n        }\n      );\n\n    this._primitiveFunctions['-(unary)'] =\n      new PrimitiveOperation(\n        [typeAny],\n        function (startPos, endPos, globalState, args) {\n          let a = args[0];\n          validateTypeAmong(startPos, endPos, a, TYPES_WITH_OPPOSITE);\n        },\n        function (globalState, a) {\n          return genericOpposite(a);\n        }\n      );\n\n    /* Relational operators */\n\n    this._primitiveFunctions['=='] =\n      new PrimitiveOperation(\n        [typeAny, typeAny],\n        function (startPos, endPos, globalState, args) {\n          let a = args[0];\n          let b = args[1];\n          validateCompatibleTypes(startPos, endPos, a, b);\n        },\n        function (globalState, a, b) {\n          return valueFromBool(a.equal(b));\n        }\n      );\n\n    this._primitiveFunctions['/='] =\n      new PrimitiveOperation(\n        [typeAny, typeAny],\n        function (startPos, endPos, globalState, args) {\n          let a = args[0];\n          let b = args[1];\n          validateCompatibleTypes(startPos, endPos, a, b);\n        },\n        function (globalState, a, b) {\n          return valueFromBool(!a.equal(b));\n        }\n      );\n\n    this._primitiveFunctions['<='] =\n      new PrimitiveOperation(\n        [typeAny, typeAny],\n        function (startPos, endPos, globalState, args) {\n          let a = args[0];\n          let b = args[1];\n          validateCompatibleTypes(startPos, endPos, a, b);\n          validateTypeAmong(startPos, endPos, a, TYPES_WITH_ORDER);\n          validateTypeAmong(startPos, endPos, b, TYPES_WITH_ORDER);\n        },\n        function (globalState, a, b) {\n          return genericLE(a, b);\n        }\n      );\n\n    this._primitiveFunctions['>='] =\n      new PrimitiveOperation(\n        [typeAny, typeAny],\n        function (startPos, endPos, globalState, args) {\n          let a = args[0];\n          let b = args[1];\n          validateCompatibleTypes(startPos, endPos, a, b);\n          validateTypeAmong(startPos, endPos, a, TYPES_WITH_ORDER);\n          validateTypeAmong(startPos, endPos, b, TYPES_WITH_ORDER);\n        },\n        function (globalState, a, b) {\n          return genericGE(a, b);\n        }\n      );\n\n    this._primitiveFunctions['<'] =\n      new PrimitiveOperation(\n        [typeAny, typeAny],\n        function (startPos, endPos, globalState, args) {\n          let a = args[0];\n          let b = args[1];\n          validateCompatibleTypes(startPos, endPos, a, b);\n          validateTypeAmong(startPos, endPos, a, TYPES_WITH_ORDER);\n          validateTypeAmong(startPos, endPos, b, TYPES_WITH_ORDER);\n        },\n        function (globalState, a, b) {\n          return genericLT(a, b);\n        }\n      );\n\n    this._primitiveFunctions['>'] =\n      new PrimitiveOperation(\n        [typeAny, typeAny],\n        function (startPos, endPos, globalState, args) {\n          let a = args[0];\n          let b = args[1];\n          validateCompatibleTypes(startPos, endPos, a, b);\n          validateTypeAmong(startPos, endPos, a, TYPES_WITH_ORDER);\n          validateTypeAmong(startPos, endPos, b, TYPES_WITH_ORDER);\n        },\n        function (globalState, a, b) {\n          return genericGT(a, b);\n        }\n      );\n\n    /* List opreators */\n    this._primitiveFunctions['++'] =\n      new PrimitiveOperation(\n        [typeListAny, typeListAny],\n        function (startPos, endPos, globalState, args) {\n          let a = args[0];\n          let b = args[1];\n          validateCompatibleTypes(startPos, endPos, a, b);\n        },\n        function (globalState, a, b) {\n          return a.append(b);\n        }\n      );\n\n    this._primitiveFunctions[i18n('PRIM:head')] =\n      new PrimitiveOperation(\n        [typeListAny],\n        function (startPos, endPos, globalState, args) {\n          let a = args[0];\n          if (a.length() === 0) {\n            fail(startPos, endPos, 'list-cannot-be-empty', []);\n          }\n        },\n        function (globalState, a) {\n          return a.head();\n        }\n      );\n\n    this._primitiveFunctions[i18n('PRIM:tail')] =\n      new PrimitiveOperation(\n        [typeListAny],\n        function (startPos, endPos, globalState, args) {\n          let a = args[0];\n          if (a.length() === 0) {\n            fail(startPos, endPos, 'list-cannot-be-empty', []);\n          }\n        },\n        function (globalState, a) {\n          return a.tail();\n        }\n      );\n\n    this._primitiveFunctions[i18n('PRIM:init')] =\n      new PrimitiveOperation(\n        [typeListAny],\n        function (startPos, endPos, globalState, args) {\n          let a = args[0];\n          if (a.length() === 0) {\n            fail(startPos, endPos, 'list-cannot-be-empty', []);\n          }\n        },\n        function (globalState, a) {\n          return a.init();\n        }\n      );\n\n    this._primitiveFunctions[i18n('PRIM:last')] =\n      new PrimitiveOperation(\n        [typeListAny],\n        function (startPos, endPos, globalState, args) {\n          let a = args[0];\n          if (a.length() === 0) {\n            fail(startPos, endPos, 'list-cannot-be-empty', []);\n          }\n        },\n        function (globalState, a) {\n          return a.last();\n        }\n      );\n\n  }\n\n  /* Types */\n\n  types() {\n    let typeNames = [];\n    for (let typeName in this._primitiveTypes) {\n      typeNames.push(typeName);\n    }\n    return typeNames;\n  }\n\n  typeConstructors(typeName) {\n    if (!(typeName in this._primitiveTypes)) {\n      throw Error('Not a primitive type: ' + typeName);\n    }\n    let constructorNames = [];\n    for (let constructorName in this._primitiveTypes[typeName]) {\n      constructorNames.push(constructorName);\n    }\n    return constructorNames;\n  }\n\n  constructorFields(typeName, constructorName) {\n    if (!(typeName in this._primitiveTypes)) {\n      throw Error('Not a primitive type: ' + typeName);\n    }\n    if (!(constructorName in this._primitiveTypes[typeName])) {\n      throw Error('Not a primitive constructor: ' + constructorName);\n    }\n    return this._primitiveTypes[typeName][constructorName];\n  }\n\n  /* Operations */\n\n  isOperation(primitiveName) {\n    return primitiveName in this._primitiveProcedures\n        || primitiveName in this._primitiveFunctions;\n  }\n\n  getOperation(primitiveName) {\n    if (primitiveName in this._primitiveProcedures) {\n      return this._primitiveProcedures[primitiveName];\n    } else if (primitiveName in this._primitiveFunctions) {\n      return this._primitiveFunctions[primitiveName];\n    } else {\n      throw Error(primitiveName + ' is not a primitive.');\n    }\n  }\n\n  /* Procedures */\n\n  procedures() {\n    let procedureNames = [];\n    for (let procedureName in this._primitiveProcedures) {\n      procedureNames.push(procedureName);\n    }\n    return procedureNames;\n  }\n\n  isProcedure(primitiveName) {\n    return primitiveName in this._primitiveProcedures;\n  }\n\n  /* Functions */\n\n  functions() {\n    let functionNames = [];\n    for (let functionName in this._primitiveFunctions) {\n      functionNames.push(functionName);\n    }\n    return functionNames;\n  }\n\n  isFunction(primitiveName) {\n    return primitiveName in this._primitiveFunctions;\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/runtime.js","import { i18n } from './i18n';\nimport { Integer } from './bigint';\n\n/* Each value has a type.\n *\n * A type is a tree, represented with instances of Type (or its subclasses).\n * We write:\n *   r(c1, ..., cN)\n * for a tree whose root is r and whose children are c1, ..., cN.\n *\n * The type of a value may be one of the following:\n *   new TypeAny()                      (unknown)\n *   new TypeInteger()\n *   new TypeString()\n *   new TypeTuple([t1, ..., tN])\n *     where ti is the type of the i-th component.\n *   new TypeList(t)\n *     where t is the type of the elements.\n *   new TypeStructure(typeName, cases)\n *     where typeName is the name of the type (e.g. 'Bool').\n *     Moreover, cases is an object of the following \"type\":\n *       Map String (Map String Type)\n *     more precisely,\n *     - cases is dictionary indexed by constructor names,\n *     - if c is a constructor name, cases[c] is a dictionary\n *       indexed by field name,\n *     - if f is a field name, cases[c][f] is the type of the\n *       field f for the constructor c.\n *\n *     For example, consider the following type definition:\n *       type A is variant {\n *         case B {\n *           field x\n *           field y\n *         }\n *         case C {\n *           field z\n *         }\n *       }\n *\n *    Then the following expression in Gobstones:\n *      [B(x <- 1, y <- \"foo\")]\n *    is a list whose type is represented as:\n *      new TypeList(\n *        new TypeStructure('A', {\n *          'B': {'x': new TypeInteger(), 'y': new TypeString()}\n *        })\n *      )\n *\n *    The following expression in Gobstones:\n *      [B(x <- 1, y <- \"foo\"), C(z <- \"bar\")]\n *    is a list whose type is represented as:\n *      new TypeList(\n *        new TypeStructure('A', {\n *          'B': {'x': new TypeInteger(), 'y': new TypeString()},\n *          'C': {'z': new TypeString()},\n *        })\n *      )\n */\nconst Ty_Any = Symbol.for('Ty_Any');\nconst Ty_Integer = Symbol.for('Ty_Integer');\nconst Ty_String = Symbol.for('Ty_String');\nconst Ty_Tuple = Symbol.for('Ty_Tuple');\nconst Ty_List = Symbol.for('Ty_List');\nconst Ty_Structure = Symbol.for('Ty_Structure');\n\nclass Type {\n  constructor(tag) {\n    this._tag = tag;\n  }\n\n  get tag() {\n    return this._tag;\n  }\n}\n\nexport class TypeAny extends Type {\n  constructor() {\n    super(Ty_Any);\n  }\n\n  toString() {\n    return '?';\n  }\n}\n\nexport class TypeInteger extends Type {\n  constructor() {\n    super(Ty_Integer);\n  }\n\n  toString() {\n    return i18n('TYPE:Integer');\n  }\n}\n\nexport class TypeString extends Type {\n  constructor() {\n    super(Ty_String);\n  }\n\n  toString() {\n    return i18n('TYPE:String');\n  }\n}\n\nexport class TypeTuple extends Type {\n  constructor(componentTypes) {\n    super(Ty_Tuple);\n    this._componentTypes = componentTypes;\n  }\n\n  get componentTypes() {\n    return this._componentTypes;\n  }\n\n  toString() {\n    let strings = [];\n    for (let t of this._componentTypes) {\n      strings.push(t.toString());\n    }\n    return i18n('TYPE:Tuple') + '(' + strings.join(', ') + ')';\n  }\n}\n\nexport class TypeList extends Type {\n  constructor(contentType) {\n    super(Ty_List);\n    this._contentType = contentType;\n  }\n\n  get contentType() {\n    return this._contentType;\n  }\n\n  toString() {\n    return i18n('TYPE:List') + '(' + this._contentType.toString() + ')';\n  }\n}\n\nexport class TypeStructure extends Type {\n  constructor(typeName, cases) {\n    super(Ty_Structure);\n    this._typeName = typeName;\n    this._cases = cases;\n  }\n\n  get typeName() {\n    return this._typeName;\n  }\n\n  get cases() {\n    return this._cases;\n  }\n\n  toString() {\n    let caseStrings = [];\n    for (let constructorName of sortedKeys(this._cases)) {\n      let fieldTypes = this._cases[constructorName];\n      let fieldStrings = [];\n      for (let fieldName of sortedKeys(fieldTypes)) {\n        fieldStrings.push(\n          fieldName + ' <- ' + fieldTypes[fieldName].toString()\n        );\n      }\n      let qualifiedConstructor = this._typeName + ':' + constructorName;\n      if (fieldStrings.length === 0) {\n        caseStrings.push(qualifiedConstructor);\n      } else {\n        caseStrings.push(\n          qualifiedConstructor + '(' + fieldStrings.join(', ') + ')'\n        );\n      }\n    }\n    if (caseStrings.length === 0) {\n      return this._typeName;\n    } else {\n      return caseStrings.join(' + ');\n    }\n  }\n}\n\n/* Attempts to calculate the \"join\" of two types.\n *\n * To join two types:\n * - any occurrence of TypeAny() may be replaced by an arbitrary type,\n * - structures of the same type built with different constructors\n *   are joinable,\n * - structures of the same type built with the same constructors\n *   are joinable if their matching fields are joinable.\n *\n * If the types are joinable, return their join.\n * If the types are not joinable, return null.\n */\n\n/* Forward definition of mutually recursive functions (for ESLint) */\nlet joinTupleTypes;\nlet joinListTypes;\nlet joinStructureTypes;\nlet joinFields;\n\nexport function joinTypes(type1, type2) {\n  if (type1 === null || type2 === null) {\n    return null;\n  } else if (type1.tag === Ty_Any) {\n    return type2;\n  } else if (type2.tag === Ty_Any) {\n    return type1;\n  } else if (type1.tag === Ty_Integer && type2.tag === Ty_Integer) {\n    return type1;\n  } else if (type1.tag === Ty_String && type2.tag === Ty_String) {\n    return type1;\n  } else if (type1.tag === Ty_Tuple && type2.tag === Ty_Tuple) {\n    return joinTupleTypes(type1, type2);\n  } else if (type1.tag === Ty_List && type2.tag === Ty_List) {\n    return joinListTypes(type1, type2);\n  } else if (type1.tag === Ty_Structure && type2.tag === Ty_Structure) {\n    return joinStructureTypes(type1, type2);\n  } else {\n    /* Otherwise the types are not joinable */\n    return null;\n  }\n}\n\njoinTupleTypes = function (type1, type2) {\n  if (type1.componentTypes.length !== type2.componentTypes.length) {\n    /* Tuples are of different length */\n    return null;\n  }\n  let joinedComponents = [];\n  for (let i = 0; i < type1.componentTypes.length; i++) {\n    let t1 = type1.componentTypes[i];\n    let t2 = type2.componentTypes[i];\n    let tj = joinTypes(t1, t2);\n    if (tj === null) {\n      /* Cannot join the i-th component */\n      return null;\n    }\n    joinedComponents.push(tj);\n  }\n  return new TypeTuple(joinedComponents);\n};\n\njoinListTypes = function (type1, type2) {\n  let joinedContent = joinTypes(type1.contentType, type2.contentType);\n  if (joinedContent === null) {\n    /* Cannot join the contents of the lists */\n    return null;\n  }\n  return new TypeList(joinedContent);\n};\n\n/*\n * The join of two structures is quite like a least common multiple.\n * We must:\n * - Check that they are structures of the same type.\n * - Include all the non-common constructors verbatim\n *   (with \"non-common\" we mean those that are in type1\n *   but not in type2 or vice-versa).\n * - For all common constructors, we must recursively join\n *   the types of their respective fields.\n */\njoinStructureTypes = function (type1, type2) {\n  if (type1.typeName !== type2.typeName) {\n    return null;\n  }\n\n  let joinedCases = {};\n\n  /* Include all the non-common constructors */\n  function joinCommon(typeA, typeB) {\n    for (let constructorName in typeA.cases) {\n      if (!(constructorName in typeB.cases)) {\n        joinedCases[constructorName] = typeA.cases[constructorName];\n      }\n    }\n  }\n  joinCommon(type1, type2);\n  joinCommon(type2, type1);\n\n  /* Include all the common constructors */\n  for (let constructorName in type1.cases) {\n    if (constructorName in type2.cases) {\n      let joinedFields = joinFields(\n                           type1.cases[constructorName],\n                           type2.cases[constructorName]\n                         );\n      if (joinedFields === null) {\n        return null;\n      }\n      joinedCases[constructorName] = joinedFields;\n    }\n  }\n\n  return new TypeStructure(type1.typeName, joinedCases);\n};\n\njoinFields = function (fields1, fields2) {\n  /* Ensure that they have the same set of fields */\n  function checkIncluded(fieldsA, fieldsB) {\n    for (let fieldName in fieldsA) {\n      if (!(fieldName in fieldsB)) {\n        throw Error(\n          'Join fields: structures built using the same constructor '\n        + 'should have the same set of fields.'\n        );\n      }\n    }\n  }\n  checkIncluded(fields1, fields2);\n  checkIncluded(fields2, fields1);\n\n  /* Recursively join the types of the common fields */\n  let joinedFields = {};\n  for (let fieldName in fields1) {\n    let type1 = fields1[fieldName];\n    let type2 = fields2[fieldName];\n    let joinedTypes = joinTypes(type1, type2);\n    if (joinedTypes === null) {\n      return null;\n    }\n    joinedFields[fieldName] = joinedTypes;\n  }\n  return joinedFields;\n};\n\n/* Helper function */\n\nfunction sortedKeys(dictionary) {\n  let keys = [];\n  for (let key in dictionary) {\n    keys.push(key);\n  }\n  return keys.sort();\n}\n\n/* Value tags */\nexport const V_Integer = Symbol.for('V_Integer');\nexport const V_String = Symbol.for('V_String');\nexport const V_Tuple = Symbol.for('V_Tuple');\nexport const V_List = Symbol.for('V_List');\nexport const V_Structure = Symbol.for('V_Structure');\n\nexport class Value {\n  constructor(tag) {\n    this._tag = tag;\n  }\n\n  get tag() {\n    return this._tag;\n  }\n\n  type() {\n    return new Type('?', []);\n  }\n\n  isInteger() {\n    return false;\n  }\n\n  isString() {\n    return false;\n  }\n\n  isTuple() {\n    return false;\n  }\n\n  isList() {\n    return false;\n  }\n\n  isStructure() {\n    return false;\n  }\n\n  isBoolean() {\n    return false;\n  }\n\n}\n\nexport class ValueInteger extends Value {\n  constructor(number) {\n    super(V_Integer);\n    if (typeof number === 'number') {\n      this._number = number.toString();\n    } else if (typeof number === 'string') {\n      this._number = number;\n    } else {\n      throw Error(\n        'Integer value must be constructed with an integer or a string'\n      );\n    }\n  }\n\n  isInteger() {\n    return true;\n  }\n\n  toString() {\n    return this._number;\n  }\n\n  get number() {\n    return this._number;\n  }\n\n  type() {\n    return new TypeInteger();\n  }\n\n  equal(other) {\n    return other.tag === V_Integer && this.number === other.number;\n  }\n\n  add(other) {\n    let a = Integer(this._number);\n    let b = Integer(other._number);\n    return new ValueInteger(a.add(b).toString());\n  }\n\n  sub(other) {\n    let a = Integer(this._number);\n    let b = Integer(other._number);\n    return new ValueInteger(a.subtract(b).toString());\n  }\n\n  mul(other) {\n    let a = Integer(this._number);\n    let b = Integer(other._number);\n    return new ValueInteger(a.multiply(b).toString());\n  }\n\n  /* Gobstones calculates quotients using\n   * modulo (i.e.truncating towards minus infinity)\n   * rather than\n   * remainder (i.e.truncating towards 0).\n   *\n   * We need to adjust the result to match the standard Gobstones\n   * semantics, namely:\n   *\n   * if a and b have the same sign, then\n   *   a div b  =  abs(a) / abs(b)\n   *\n   * if a and b have different signs, then\n   *   a div b  =  -((abs(a) + abs(b) - 1) / abs(b))\n   *\n   * Here \"div\" denotes the official Gobstones division operator,\n   * while \"/\" denotes the JavaScript/bigint implementation.\n   */\n  div(other) {\n    let z = new ValueInteger(0);\n    if (this.gt(z) === other.gt(z)) {\n      /* Same sign */\n      let a = Integer(this.abs()._number);\n      let b = Integer(other.abs()._number);\n      return new ValueInteger(a.divide(b).toString());\n    } else {\n      /* Different sign */\n      let inc = other.abs().sub(new ValueInteger(1));\n      let a = Integer(this.abs().add(inc)._number);\n      let b = Integer(other.abs()._number);\n      return new ValueInteger(a.divide(b).negate().toString());\n    }\n  }\n\n  /* Calculate the modulus from the equation a = qb + r,\n   * i.e.  r = a - qb */\n  mod(other) {\n    let q = this.div(other);\n    return this.sub(q.mul(other));\n  }\n\n  eq(other) {\n    return this.equal(other);\n  }\n\n  ne(other) {\n    return !this.equal(other);\n  }\n\n  le(other) {\n    let a = Integer(this._number);\n    let b = Integer(other._number);\n    return a.leq(b);\n  }\n\n  lt(other) {\n    let a = Integer(this._number);\n    let b = Integer(other._number);\n    return a.lt(b);\n  }\n\n  ge(other) {\n    let a = Integer(this._number);\n    let b = Integer(other._number);\n    return a.geq(b);\n  }\n\n  gt(other) {\n    let a = Integer(this._number);\n    let b = Integer(other._number);\n    return a.gt(b);\n  }\n\n  negate() {\n    let a = Integer(this._number);\n    return new ValueInteger(a.negate().toString());\n  }\n\n  abs() {\n    if (this.gt(new ValueInteger(0))) {\n      return this;\n    } else {\n      return this.negate();\n    }\n  }\n\n  asNumber() {\n    return parseInt(this._number, 10);\n  }\n}\n\nexport class ValueString extends Value {\n  constructor(string) {\n    super(V_String);\n    this._string = string;\n  }\n\n  toString() {\n    let res = ['\"'];\n    for (let i = 0; i < this._string.length; i++) {\n      let chr = this._string[i];\n      switch (chr) {\n        case '\"':\n          res.push('\\\\');\n          res.push('\"');\n          break;\n        case '\\\\':\n          res.push('\\\\');\n          res.push('\\\\');\n          break;\n        case '\\u0007':\n          res.push('\\\\');\n          res.push('a');\n          break;\n        case '\\b':\n          res.push('\\\\');\n          res.push('b');\n          break;\n        case '\\f':\n          res.push('\\\\');\n          res.push('f');\n          break;\n        case '\\n':\n          res.push('\\\\');\n          res.push('n');\n          break;\n        case '\\r':\n          res.push('\\\\');\n          res.push('r');\n          break;\n        case '\\t':\n          res.push('\\\\');\n          res.push('t');\n          break;\n        case '\\v':\n          res.push('\\\\');\n          res.push('v');\n          break;\n        default:\n          res.push(chr);\n          break;\n      }\n    }\n    res.push('\"');\n    return res.join('');\n  }\n\n  isString() {\n    return true;\n  }\n\n  get string() {\n    return this._string;\n  }\n\n  equal(other) {\n    return other.tag === V_String && this.string === other.string;\n  }\n\n  type() {\n    return new TypeString();\n  }\n}\n\nexport class ValueTuple extends Value {\n  constructor(components) {\n    super(V_Tuple);\n    this._components = components;\n    this._type = this._inferType();\n  }\n\n  toString() {\n    let res = [];\n    for (let component of this._components) {\n      res.push(component.toString());\n    }\n    return '(' + res.join(', ') + ')';\n  }\n\n  get components() {\n    return this._components;\n  }\n\n  size() {\n    return this._components.length;\n  }\n\n  equal(other) {\n    if (other.tag !== V_Tuple) {\n      return false;\n    }\n    if (this.components.length !== other.components.length) {\n      return false;\n    }\n    for (let i = 0; i < this.components.length; i++) {\n      if (!this.components[i].equal(other.components[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  isTuple() {\n    return true;\n  }\n\n  type() {\n    return this._type;\n  }\n\n  _inferType() {\n    let componentTypes = [];\n    for (let component of this._components) {\n      componentTypes.push(component.type());\n    }\n    return new TypeTuple(componentTypes);\n  }\n}\n\nexport class ValueList extends Value {\n  constructor(elements) {\n    super(V_List);\n    this._elements = elements;\n    this._type = this._inferType();\n  }\n\n  toString() {\n    let res = [];\n    for (let element of this._elements) {\n      res.push(element.toString());\n    }\n    return '[' + res.join(', ') + ']';\n  }\n\n  get elements() {\n    return this._elements;\n  }\n\n  equal(other) {\n    if (other.tag !== V_List) {\n      return false;\n    }\n    if (this.elements.length !== other.elements.length) {\n      return false;\n    }\n    for (let i = 0; i < this.elements.length; i++) {\n      if (!this.elements[i].equal(other.elements[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  type() {\n    return this._type;\n  }\n\n  isList() {\n    return true;\n  }\n\n  length() {\n    return this._elements.length;\n  }\n\n  _inferType() {\n    let contentType = new TypeAny();\n    for (let element of this._elements) {\n      contentType = joinTypes(contentType, element.type());\n    }\n    return new TypeList(contentType);\n  }\n\n  append(other) {\n    let allElements = [];\n    for (let elem of this.elements) {\n      allElements.push(elem);\n    }\n    for (let elem of other.elements) {\n      allElements.push(elem);\n    }\n    return new ValueList(allElements);\n  }\n\n  head() {\n    return this.elements[0];\n  }\n\n  tail() {\n    let elements = [];\n    for (let i = 1; i < this.elements.length; i++) {\n      elements.push(this.elements[i]);\n    }\n    return new ValueList(elements);\n  }\n\n  init() {\n    let elements = [];\n    for (let i = 0; i < this.elements.length - 1; i++) {\n      elements.push(this.elements[i]);\n    }\n    return new ValueList(elements);\n  }\n\n  last() {\n    return this.elements[this.elements.length - 1];\n  }\n\n}\n\n/* An instance of ValueStructure represents a 'structure' i.e.  a value\n * inhabiting an 'inductive' datatype.\n *\n * This includes built-in enumerations (e.g. booleans), the \"event\" type\n * received by an interactive program, and user-defined records and variants.\n *\n * The second parameter \"fields\" should be a dictionary mapping field names to\n * values\n */\nexport class ValueStructure extends Value {\n\n  constructor(typeName, constructorName, fields) {\n    super(V_Structure);\n    this._typeName = typeName;\n    this._constructorName = constructorName;\n    this._fields = fields;\n  }\n\n  toString() {\n    let res = [];\n    let fieldNames = this.fieldNames();\n    if (fieldNames.length === 0) {\n      return this._constructorName;\n    }\n    for (let fieldName of fieldNames) {\n      res.push(fieldName + ' <- ' + this.fields[fieldName].toString());\n    }\n    return this._constructorName + '(' + res.join(', ') + ')';\n  }\n\n  isStructure() {\n    return true;\n  }\n\n  isBoolean() {\n    return this._typeName === i18n('TYPE:Bool');\n  }\n\n  get typeName() {\n    return this._typeName;\n  }\n\n  get constructorName() {\n    return this._constructorName;\n  }\n\n  get fields() {\n    return this._fields;\n  }\n\n  fieldNames() {\n    return sortedKeys(this._fields);\n  }\n\n  _clone() {\n    let newFields = {};\n    for (let fieldName in this._fields) {\n      newFields[fieldName] = this._fields[fieldName];\n    }\n    return new ValueStructure(\n      this._typeName, this._constructorName, newFields\n    );\n  }\n\n  updateFields(fields) {\n    let newStructure = this._clone();\n    for (let fieldName in fields) {\n      newStructure.fields[fieldName] = fields[fieldName];\n    }\n    return newStructure;\n  }\n\n  equal(other) {\n    if (other.tag !== V_Structure) {\n      return false;\n    }\n    if (this.constructorName !== other.constructorName) {\n      return false;\n    }\n    let fieldNames = this.fieldNames();\n    for (let fieldName of fieldNames) {\n      if (!this.fields[fieldName].equal(other.fields[fieldName])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  type() {\n    let fieldTypes = {};\n    for (let fieldName in this._fields) {\n      fieldTypes[fieldName] = this._fields[fieldName].type();\n    }\n    let cases = {};\n    cases[this._constructorName] = fieldTypes;\n    return new TypeStructure(this._typeName, cases);\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/value.js","\n/* A SourceReader represents the current position in a source file.\n * It keeps track of line and column numbers.\n * Methods are non-destructive. For example:\n *\n *     let r = new SourceReader('foo.gbs', 'if\\n(True)');\n *\n *     r.peek();                       // ~~> 'i'\n *     r = r.consumeCharacter();       // Note: returns a new file reader.\n *\n *     r.peek();                       // ~~> 'f'\n *     r = r.consumeCharacter();\n *\n *     r.peek();                       // ~~> '\\n'\n *     r = r.consumeCharacter('\\n');\n *\n *     r.line();                       // ~~> 2\n */\nexport class SourceReader {\n\n  constructor(filename, string) {\n    this._filename = filename;   // Filename\n    this._string = string;       // Source of the current file\n    this._index = 0;             // Index in the current file\n    this._line = 1;              // Line in the current file\n    this._column = 1;            // Column in the current file\n    this._regions = [];          // Stack of regions\n  }\n\n  _clone() {\n    let r = new SourceReader(this._filename, this._string);\n    r._index = this._index;\n    r._line = this._line;\n    r._column = this._column;\n    r._regions = this._regions;\n    return r;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get line() {\n    return this._line;\n  }\n\n  get column() {\n    return this._column;\n  }\n\n  get region() {\n    if (this._regions.length > 0) {\n      return this._regions[0];\n    } else {\n      return '';\n    }\n  }\n\n  /* Consume one character */\n  consumeCharacter() {\n    let r = this._clone();\n    if (r.peek() === '\\n') {\n      r._line++;\n      r._column = 1;\n    } else {\n      r._column++;\n    }\n    r._index++;\n    return r;\n  }\n\n  /* Consume characters from the input, one per each character in the string\n   * (the contents of the string are ignored). */\n  consumeString(string) {\n    let r = this;\n    for (let _ of string) {\n      r = r.consumeCharacter();\n    }\n    return r;\n  }\n\n  /* Returns the SourceReader after consuming an 'invisible' character.\n   * Invisible characters affect the index but not the line or column.\n   */\n  consumeInvisibleCharacter() {\n    let r = this._clone();\n    r._index++;\n    return r;\n  }\n\n  /* Consume 'invisible' characters from the input, one per each character\n   * in the string */\n  consumeInvisibleString(string) {\n    let r = this;\n    for (let _ of string) {\n      r = r.consumeInvisibleCharacter();\n    }\n    return r;\n  }\n\n  /* Return true if the substring occurs at the current point. */\n  startsWith(sub) {\n    let i = this._index;\n    let j = this._index + sub.length;\n    return j <= this._string.length && this._string.substring(i, j) === sub;\n  }\n\n  /* Return true if we have reached the end of the current file */\n  eof() {\n    return this._index >= this._string.length;\n  }\n\n  /* Return the current character, assuming we have not reached EOF */\n  peek() {\n    return this._string[this._index];\n  }\n\n  /* Push a region to the stack of regions (non-destructively) */\n  beginRegion(region) {\n    let r = this._clone();\n    r._regions = [region].concat(r._regions);\n    return r;\n  }\n\n  /* Pop a region from the stack of regions (non-destructively) */\n  endRegion() {\n    let r = this._clone();\n    if (r._regions.length > 0) {\n      r._regions = r._regions.slice(1);\n    }\n    return r;\n  }\n\n}\n\n/* Return a source reader that represents an unknown position */\nexport const UnknownPosition = new SourceReader('(?)', '');\n\n/* An instance of MultifileReader represents a scanner for reading\n * source code from a list of files.\n */\nexport class MultifileReader {\n\n  /* The 'input' parameter should be either:\n   * (1) a string. e.g.  'program {}', or\n   * (2) a map from filenames to strings, e.g.\n   *     {\n   *       'foo.gbs': 'program { P() }',\n   *       'bar.gbs': 'procedure P() {}',\n   *     }\n   */\n  constructor(input) {\n    if (typeof input === 'string') {\n      input = {'(?)': input};\n    }\n    this._filenames = Object.keys(input);\n    this._filenames.sort();\n    this._input = input;\n    this._index = 0;\n  }\n\n  /* Return true if there are more files */\n  moreFiles() {\n    return this._index + 1 < this._filenames.length;\n  }\n\n  /* Advance to the next file */\n  nextFile() {\n    this._index++;\n  }\n\n  /* Return a SourceReader for the current files */\n  readCurrentFile() {\n    if (this._index < this._filenames.length) {\n      let filename = this._filenames[this._index];\n      return new SourceReader(filename, this._input[filename]);\n    } else {\n      return new SourceReader('(?)', '');\n    }\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/reader.js","\n/* Token tags are constant symbols */\nexport const T_EOF = Symbol.for('T_EOF');         // End of file\nexport const T_NUM = Symbol.for('T_NUM');         // Number\nexport const T_STRING = Symbol.for('T_STRING');   // String constant\nexport const T_UPPERID = Symbol.for('T_UPPERID'); // Uppercase identifier\nexport const T_LOWERID = Symbol.for('T_LOWERID'); // Lowercase identifier\n\n/* Keywords */\nexport const T_PROGRAM = Symbol.for('T_PROGRAM');\nexport const T_INTERACTIVE = Symbol.for('T_INTERACTIVE');\nexport const T_PROCEDURE = Symbol.for('T_PROCEDURE');\nexport const T_FUNCTION = Symbol.for('T_FUNCTION');\nexport const T_RETURN = Symbol.for('T_RETURN');\nexport const T_IF = Symbol.for('T_IF');\nexport const T_THEN = Symbol.for('T_THEN');\nexport const T_ELSE = Symbol.for('T_ELSE');\nexport const T_REPEAT = Symbol.for('T_REPEAT');\nexport const T_FOREACH = Symbol.for('T_FOREACH');\nexport const T_IN = Symbol.for('T_IN');\nexport const T_WHILE = Symbol.for('T_WHILE');\nexport const T_SWITCH = Symbol.for('T_SWITCH');\nexport const T_TO = Symbol.for('T_TO');\nexport const T_LET = Symbol.for('T_LET');\nexport const T_NOT = Symbol.for('T_NOT');\nexport const T_DIV = Symbol.for('T_DIV');\nexport const T_MOD = Symbol.for('T_MOD');\nexport const T_TYPE = Symbol.for('T_TYPE');\nexport const T_IS = Symbol.for('T_IS');\nexport const T_RECORD = Symbol.for('T_RECORD');\nexport const T_VARIANT = Symbol.for('T_VARIANT');\nexport const T_CASE = Symbol.for('T_CASE');\nexport const T_FIELD = Symbol.for('T_FIELD');\nexport const T_UNDERSCORE = Symbol.for('T_UNDERSCORE');\nexport const T_TIMEOUT = Symbol.for('T_TIMEOUT');\n\n/* Symbols */\nexport const T_LPAREN = Symbol.for('T_LPAREN');\nexport const T_RPAREN = Symbol.for('T_RPAREN');\nexport const T_LBRACE = Symbol.for('T_LBRACE');\nexport const T_RBRACE = Symbol.for('T_RBRACE');\nexport const T_LBRACK = Symbol.for('T_LBRACK');\nexport const T_RBRACK = Symbol.for('T_RBRACK');\nexport const T_COMMA = Symbol.for('T_COMMA');\nexport const T_SEMICOLON = Symbol.for('T_SEMICOLON');\nexport const T_RANGE = Symbol.for('T_RANGE');\nexport const T_GETS = Symbol.for('T_GETS');\nexport const T_PIPE = Symbol.for('T_PIPE');\nexport const T_ARROW = Symbol.for('T_ARROW');\nexport const T_ASSIGN = Symbol.for('T_ASSIGN');\nexport const T_EQ = Symbol.for('T_EQ');\nexport const T_NE = Symbol.for('T_NE');\nexport const T_LE = Symbol.for('T_LE');\nexport const T_GE = Symbol.for('T_GE');\nexport const T_LT = Symbol.for('T_LT');\nexport const T_GT = Symbol.for('T_GT');\nexport const T_AND = Symbol.for('T_AND');\nexport const T_OR = Symbol.for('T_OR');\nexport const T_CONCAT = Symbol.for('T_CONCAT');\nexport const T_PLUS = Symbol.for('T_PLUS');\nexport const T_MINUS = Symbol.for('T_MINUS');\nexport const T_TIMES = Symbol.for('T_TIMES');\nexport const T_POW = Symbol.for('T_POW');\n\n/* A token is given by:\n * - A token tag (e.g. T_LOWERID, T_NUM).\n * - Possibly, a value (e.g. 'nroBolitas', 8).\n *   When the value is irrelevant, we provide null by convention.\n * - Two positions, representing its location in the source. */\nexport class Token {\n  constructor(tag, value, startPos, endPos) {\n    this._tag = tag;\n    this._value = value;\n    this._startPos = startPos;\n    this._endPos = endPos;\n  }\n\n  toString() {\n    let tag = Symbol.keyFor(this._tag).substring(2);\n    switch (tag) {\n      case 'NUM': case 'STRING': case 'UPPERID': case 'LOWERID':\n        return tag + '(\"' + this._value + '\")';\n      default:\n        return tag;\n    }\n  }\n\n  get tag() {\n    return this._tag;\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  get startPos() {\n    return this._startPos;\n  }\n\n  get endPos() {\n    return this._endPos;\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/token.js","import { i18n, i18nPosition } from './i18n';\nimport { GbsSyntaxError } from './exceptions';\n\n/* Description of a field */\nclass FieldDescriptor {\n  constructor(typeName, constructorName, index) {\n    this._typeName = typeName;\n    this._constructorName = constructorName;\n    this._index = index;\n  }\n\n  get typeName() {\n    return this._typeName;\n  }\n\n  get constructorName() {\n    return this._constructorName;\n  }\n\n  get index() {\n    return this._index;\n  }\n}\n\n/* Local name categories */\nexport const LocalVariable = Symbol.for('LocalVariable');\nexport const LocalParameter = Symbol.for('LocalParameter');\nexport const LocalIndex = Symbol.for('LocalIndex');\n\n/* Description of a local name */\nclass LocalNameDescriptor {\n  constructor(category, position) {\n    this._category = category;\n    this._position = position;\n  }\n\n  get category() {\n    return this._category;\n  }\n\n  get position() {\n    return this._position;\n  }\n}\n\nfunction fail(startPos, endPos, reason, args) {\n  throw new GbsSyntaxError(startPos, endPos, reason, args);\n}\n\n/* A symbol table keeps track of definitions, associating:\n * - procedure and function names to their code\n * - type definitions, constructors, and fields\n */\nexport class SymbolTable {\n  constructor() {\n    this._program = null;\n\n    /* true iff the program is interactive */\n    this._isInteractiveProgram = false;\n\n    /* Each procedure name is mapped to its definition */\n    this._procedures = {};\n\n    /* Each procedure name is mapped to its parameters */\n    this._procedureParameters = {};\n\n    /* Each function name is mapped to its definition */\n    this._functions = {};\n\n    /* Each function name is mapped to its parameters */\n    this._functionParameters = {};\n\n    /* Each type name is mapped to its definition */\n    this._types = {};\n\n    /* Each type name is mapped to a list of constructor names */\n    this._typeConstructors = {};\n\n    /* Each constructor name is mapped to its declaration */\n    this._constructors = {};\n\n    /* Each constructor name is mapped to its type name */\n    this._constructorType = {};\n\n    /* Each constructor name is mapped to a list of field names */\n    this._constructorFields = {};\n\n    /* Each field name is mapped to a list of field descriptors.\n     * Each field descriptor is of the form\n     *   new FieldDescriptor(typeName, constructorName, index)\n     * where\n     * - 'typeName' is the name of a type\n     * - 'constructorName' is the name of a constructor of the given type\n     * - 'index' is the index of the given field with respect to the\n     *   given constructor (starting from 0)\n     */\n    this._fields = {};\n\n    /* Local names include parameters, indices and variables,\n     * which are only meaningful within a routine.\n     *\n     * Local names may be bound/referenced in the following places:\n     * - formal parameters,\n     * - indices of a \"foreach\",\n     * - pattern matching (formal parameters of a \"switch\"),\n     * - assignments and tuple assignments,\n     * - reading local variables.\n     *\n     * _localNames maps a name to a descriptor of the form:\n     *   new LocalNameDescriptor(category, position)\n     */\n    this._localNames = {};\n  }\n\n  get program() {\n    return this._program;\n  }\n\n  isInteractiveProgram() {\n    return this._isInteractiveProgram;\n  }\n\n  isProcedure(name) {\n    return name in this._procedures;\n  }\n\n  allProcedureNames() {\n    let names = [];\n    for (let name in this._procedures) {\n      names.push(name);\n    }\n    return names.sort();\n  }\n\n  procedureDefinition(name) {\n    if (this.isProcedure(name)) {\n      return this._procedures[name];\n    } else {\n      throw Error('Undefined procedure.');\n    }\n  }\n\n  procedureParameters(name) {\n    if (this.isProcedure(name)) {\n      return this._procedureParameters[name];\n    } else {\n      throw Error('Undefined procedure.');\n    }\n  }\n\n  isFunction(name) {\n    return name in this._functions;\n  }\n\n  allFunctionNames() {\n    let names = [];\n    for (let name in this._functions) {\n      names.push(name);\n    }\n    return names.sort();\n  }\n\n  functionDefinition(name) {\n    if (this.isFunction(name)) {\n      return this._functions[name];\n    } else {\n      throw Error('Undefined function.');\n    }\n  }\n\n  functionParameters(name) {\n    if (this.isFunction(name)) {\n      return this._functionParameters[name];\n    } else {\n      throw Error('Undefined function.');\n    }\n  }\n\n  isType(name) {\n    return name in this._types;\n  }\n\n  typeDefinition(name) {\n    if (this.isType(name)) {\n      return this._types[name];\n    } else {\n      throw Error('Undefined type.');\n    }\n  }\n\n  typeConstructors(name) {\n    if (this.isType(name)) {\n      return this._typeConstructors[name];\n    } else {\n      throw Error('Undefined type.');\n    }\n  }\n\n  isConstructor(name) {\n    return name in this._constructors;\n  }\n\n  constructorDeclaration(name) {\n    if (this.isConstructor(name)) {\n      return this._constructors[name];\n    } else {\n      throw Error('Undefined constructor.');\n    }\n  }\n\n  constructorType(name) {\n    if (this.isConstructor(name)) {\n      return this._constructorType[name];\n    } else {\n      throw Error('Undefined constructor.');\n    }\n  }\n\n  constructorFields(name) {\n    if (this.isConstructor(name)) {\n      return this._constructorFields[name];\n    } else {\n      throw Error('Undefined constructor.');\n    }\n  }\n\n  isField(name) {\n    return name in this._fields;\n  }\n\n  fieldDescriptor(name) {\n    if (this.isField(name)) {\n      return this._fields[name];\n    } else {\n      throw Error('Undefined field.');\n    }\n  }\n\n  defProgram(definition) {\n    if (this._program !== null) {\n      fail(\n        definition.startPos, definition.endPos,\n        'program-already-defined', [\n          i18nPosition(this._program.startPos),\n          i18nPosition(definition.startPos)\n        ]\n      );\n    }\n    this._program = definition;\n  }\n\n  defInteractiveProgram(definition) {\n    this.defProgram(definition);\n    this._isInteractiveProgram = true;\n  }\n\n  defProcedure(definition) {\n    let name = definition.name.value;\n    if (name in this._procedures) {\n      fail(\n        definition.name.startPos, definition.name.endPos,\n        'procedure-already-defined', [\n          name,\n          i18nPosition(this._procedures[name].startPos),\n          i18nPosition(definition.startPos)\n        ]\n      );\n    }\n    let parameters = [];\n    for (let parameter of definition.parameters) {\n      parameters.push(parameter.value);\n    }\n    this._procedures[name] = definition;\n    this._procedureParameters[name] = parameters;\n  }\n\n  defFunction(definition) {\n    let name = definition.name.value;\n    if (name in this._functions) {\n      fail(\n        definition.name.startPos, definition.name.endPos,\n        'function-already-defined', [\n          name,\n          i18nPosition(this._functions[name].startPos),\n          i18nPosition(definition.startPos)\n        ]\n      );\n    } else if (name in this._fields) {\n      let fieldPos =\n        this._constructors[this._fields[name][0].constructorName].startPos;\n      fail(\n        definition.name.startPos, definition.name.endPos,\n        'function-and-field-cannot-have-the-same-name', [\n          name,\n          i18nPosition(definition.startPos),\n          i18nPosition(fieldPos)\n        ]\n      );\n    }\n    let parameters = [];\n    for (let parameter of definition.parameters) {\n      parameters.push(parameter.value);\n    }\n    this._functions[name] = definition;\n    this._functionParameters[name] = parameters;\n  }\n\n  defType(definition) {\n    let typeName = definition.typeName.value;\n    if (typeName in this._types) {\n      fail(\n        definition.typeName.startPos, definition.typeName.endPos,\n        'type-already-defined', [\n          typeName,\n          i18nPosition(this._types[typeName].startPos),\n          i18nPosition(definition.startPos)\n        ]\n      );\n    }\n    this._types[typeName] = definition;\n    let constructorNames = [];\n    for (let constructorDeclaration of definition.constructorDeclarations) {\n      this._declareConstructor(typeName, constructorDeclaration);\n      constructorNames.push(constructorDeclaration.constructorName.value);\n    }\n    this._typeConstructors[typeName] = constructorNames;\n  }\n\n  _declareConstructor(typeName, constructorDeclaration) {\n    let constructorName = constructorDeclaration.constructorName.value;\n    if (constructorName in this._constructors) {\n      fail(\n        constructorDeclaration.constructorName.startPos,\n        constructorDeclaration.constructorName.endPos,\n        'constructor-already-defined', [\n          constructorName,\n          i18nPosition(this._constructors[constructorName].startPos),\n          i18nPosition(constructorDeclaration.startPos)\n        ]\n      );\n    }\n    this._constructors[constructorName] = constructorDeclaration;\n    this._constructorType[constructorName] = typeName;\n\n    let constructorFields = {};\n    let fieldNames = [];\n    let index = 0;\n    for (let fieldName of constructorDeclaration.fieldNames) {\n      if (fieldName.value in constructorFields) {\n        fail(\n          fieldName.startPos, fieldName.endPos,\n          'repeated-field-name',\n          [constructorName, fieldName.value]\n        );\n      }\n      constructorFields[fieldName.value] = true;\n      fieldNames.push(fieldName.value);\n      this._declareField(\n        fieldName.startPos, fieldName.endPos,\n        typeName, constructorName, fieldName.value, index\n      );\n      index++;\n    }\n    this._constructorFields[constructorName] = fieldNames;\n  }\n\n  _declareField(startPos, endPos, typeName, constructorName, fieldName, index) {\n    if (fieldName in this._functions) {\n      fail(\n        startPos, endPos,\n        'function-and-field-cannot-have-the-same-name', [\n          fieldName,\n          i18nPosition(this._functions[fieldName].startPos),\n          i18nPosition(startPos)\n        ]\n      );\n    }\n    if (!(fieldName in this._fields)) {\n      this._fields[fieldName] = [];\n    }\n    this._fields[fieldName].push(\n        new FieldDescriptor(typeName, constructorName, index)\n    );\n  }\n\n  /* Adds a new local name, failing if it already exists. */\n  addNewLocalName(localName, category) {\n    if (localName.value in this._localNames) {\n      fail(\n        localName.startPos, localName.endPos,\n        'local-name-conflict', [\n          localName.value,\n          i18n(Symbol.keyFor(this._localNames[localName.value].category)),\n          i18nPosition(this._localNames[localName.value].position),\n          i18n(Symbol.keyFor(category)),\n          i18nPosition(localName.startPos)\n        ]\n      );\n    }\n    this.setLocalName(localName, category);\n  }\n\n  /* Sets a local name.\n   * It fails if it already exists with a different category. */\n  setLocalName(localName, category) {\n    if (localName.value in this._localNames &&\n        this._localNames[localName.value].category !== category) {\n      fail(\n        localName.startPos, localName.endPos,\n        'local-name-conflict', [\n          localName.value,\n          i18n(Symbol.keyFor(this._localNames[localName.value].category)),\n          i18nPosition(this._localNames[localName.value].position),\n          i18n(Symbol.keyFor(category)),\n          i18nPosition(localName.startPos)\n        ]\n      );\n    }\n    this._localNames[localName.value] =\n      new LocalNameDescriptor(category, localName.startPos);\n  }\n\n  /* Removes a local name. */\n  removeLocalName(localName) {\n    delete this._localNames[localName.value];\n  }\n\n  /* Removes all local names. */\n  exitScope() {\n    this._localNames = {};\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/symtable.js","import { UnknownPosition } from './reader';\n\n/* Opcodes are constant symbols */\nexport const I_PushInteger = Symbol.for('I_PushInteger');\nexport const I_PushString = Symbol.for('I_PushString');\nexport const I_PushVariable = Symbol.for('I_PushVariable');\nexport const I_SetVariable = Symbol.for('I_SetVariable');\nexport const I_UnsetVariable = Symbol.for('I_UnsetVariable');\nexport const I_Label = Symbol.for('I_Label');\nexport const I_Jump = Symbol.for('I_Jump');\nexport const I_JumpIfFalse = Symbol.for('I_JumpIfFalse');\nexport const I_JumpIfStructure = Symbol.for('I_JumpIfStructure');\nexport const I_JumpIfTuple = Symbol.for('I_JumpIfTuple');\nexport const I_Call = Symbol.for('I_Call');\nexport const I_Return = Symbol.for('I_Return');\nexport const I_MakeTuple = Symbol.for('I_MakeTuple');\nexport const I_MakeList = Symbol.for('I_MakeList');\nexport const I_MakeStructure = Symbol.for('I_MakeStructure');\nexport const I_UpdateStructure = Symbol.for('I_UpdateStructure');\nexport const I_ReadTupleComponent = Symbol.for('I_ReadTupleComponent');\nexport const I_ReadStructureField = Symbol.for('I_ReadStructureField');\nexport const I_ReadStructureFieldPop = Symbol.for('I_ReadStructureFieldPop');\nexport const I_Add = Symbol.for('I_Add');\nexport const I_Dup = Symbol.for('I_Dup');\nexport const I_Pop = Symbol.for('I_Pop');\nexport const I_PrimitiveCall = Symbol.for('I_PrimitiveCall');\nexport const I_SaveState = Symbol.for('I_SaveState');\nexport const I_RestoreState = Symbol.for('I_RestoreState');\nexport const I_TypeCheck = Symbol.for('I_TypeCheck');\n\nexport class Code {\n\n  constructor(instructions) {\n    this._instructions = instructions;\n  }\n\n  toString() {\n    let res = [];\n    for (let instruction of this._instructions) {\n      res.push(instruction.toString());\n    }\n    return res.join('\\n');\n  }\n\n  produce(instruction) {\n    this._instructions.push(instruction);\n  }\n\n  /* Return the instruction at the given location */\n  at(ip) {\n    if (0 <= ip && ip < this._instructions.length) {\n      return this._instructions[ip];\n    } else {\n      throw Error('Code: instruction pointer out of range.');\n    }\n  }\n\n  /* Return a dictionary mapping label names to their corresponding\n   * instruction pointers. */\n  labelTargets() {\n    let labelTargets = {};\n    for (let i = 0; i < this._instructions.length; i++) {\n      if (this._instructions[i].opcode === I_Label) {\n        let label = this._instructions[i].label;\n        if (label in labelTargets) {\n          throw Error('Code: label \"' + label + '\" is repeated.');\n        }\n        labelTargets[label] = i;\n      }\n    }\n    return labelTargets;\n  }\n\n}\n\nfunction argToString(arg) {\n  if (arg instanceof Array) {\n    let res = [];\n    for (let elem of arg) {\n      res.push(argToString(elem));\n    }\n    return '[' + res.join(', ') + ']';\n  } else {\n    return arg.toString();\n  }\n}\n\nexport class Instruction {\n  constructor(opcode, args) {\n    this._opcode = opcode;\n    this._args = args;\n    this._startPos = UnknownPosition;\n    this._endPos = UnknownPosition;\n  }\n\n  toString() {\n    let opcode = Symbol.keyFor(this._opcode).substring(2);\n    let sargs = [];\n    for (let arg of this._args) {\n      sargs.push(argToString(arg));\n    }\n    return '  ' + opcode + ' ' + sargs.join(', ');\n  }\n\n  get opcode() {\n    return this._opcode;\n  }\n\n  get args() {\n    return this._args;\n  }\n\n  set startPos(position) {\n    this._startPos = position;\n  }\n\n  get startPos() {\n    return this._startPos;\n  }\n\n  set endPos(position) {\n    this._endPos = position;\n  }\n\n  get endPos() {\n    return this._endPos;\n  }\n\n}\n\n/* Push a constant on the stack. */\n\nexport class IPushInteger extends Instruction {\n  constructor(number) {\n    super(I_PushInteger, [number]);\n  }\n\n  get number() {\n    return this._args[0];\n  }\n}\n\nexport class IPushString extends Instruction {\n  constructor(string) {\n    super(I_PushString, [string]);\n  }\n\n  get string() {\n    return this._args[0];\n  }\n}\n\n/* Push a local index/variable/parameter on the stack. */\nexport class IPushVariable extends Instruction {\n  constructor(variableName) {\n    super(I_PushVariable, [variableName]);\n  }\n\n  get variableName() {\n    return this._args[0];\n  }\n}\n\n/* Set a local index/variable/parameter to the value on the top of the stack. */\nexport class ISetVariable extends Instruction {\n  constructor(variableName) {\n    super(I_SetVariable, [variableName]);\n  }\n\n  get variableName() {\n    return this._args[0];\n  }\n}\n\n/* Unset a local index/variable/parameter.\n * This should be used to avoid the variable being used after the end\n * of its scope.\n *\n * E.g. \"i\" should have no value after the end of the foreach:\n *\n *   foreach i in [1,2,3] {\n *   }\n *   x := i\n */\nexport class IUnsetVariable extends Instruction {\n  constructor(variableName) {\n    super(I_UnsetVariable, [variableName]);\n  }\n\n  get variableName() {\n    return this._args[0];\n  }\n}\n\n/* Pseudo-instruction to mark the target of a jump. */\nexport class ILabel extends Instruction {\n  constructor(label) {\n    super(I_Label, [label]);\n  }\n\n  toString() {\n    return this.label + ':';\n  }\n\n  get label() {\n    return this._args[0];\n  }\n}\n\n/* Unconditional jump. */\nexport class IJump extends Instruction {\n  constructor(targetLabel) {\n    super(I_Jump, [targetLabel]);\n  }\n\n  get targetLabel() {\n    return this._args[0];\n  }\n}\n\n/* Jump if the top of the stack is False.\n * Pops the top of the stack. */\nexport class IJumpIfFalse extends Instruction {\n  constructor(targetLabel) {\n    super(I_JumpIfFalse, [targetLabel]);\n  }\n\n  get targetLabel() {\n    return this._args[0];\n  }\n}\n\n/* Jump if the top of the stack is a structure built using the given\n * constructor. Does NOT pop the top of the stack. */\nexport class IJumpIfStructure extends Instruction {\n  constructor(constructorName, targetLabel) {\n    super(I_JumpIfStructure, [constructorName, targetLabel]);\n  }\n\n  get constructorName() {\n    return this._args[0];\n  }\n\n  get targetLabel() {\n    return this._args[1];\n  }\n}\n\n/* Jump if the top of the stack is an n-tuple of the given size.\n * Does NOT pop the top of the stack. */\nexport class IJumpIfTuple extends Instruction {\n  constructor(size, targetLabel) {\n    super(I_JumpIfTuple, [size, targetLabel]);\n  }\n\n  get size() {\n    return this._args[0];\n  }\n\n  get targetLabel() {\n    return this._args[1];\n  }\n}\n\n/* Call a subroutine (procedure or function).\n * The arguments are expected to be located in the stack\n * with the last one at the top.\n *\n * The arguments are popped from the current frame and pushed\n * onto the new frame.\n */\nexport class ICall extends Instruction {\n  constructor(targetLabel, nargs) {\n    super(I_Call, [targetLabel, nargs]);\n  }\n\n  get targetLabel() {\n    return this._args[0];\n  }\n\n  get nargs() {\n    return this._args[1];\n  }\n}\n\n/* Return from a routine to the caller.\n * If returning a value (from a function or program),\n * it must be on the top of the stack. */\nexport class IReturn extends Instruction {\n  constructor() {\n    super(I_Return, []);\n  }\n}\n\n/* Make a tuple of the given size.\n * The components are expected to be located in the stack\n * with the last one at the top. */\nexport class IMakeTuple extends Instruction {\n  constructor(size) {\n    super(I_MakeTuple, [size]);\n  }\n\n  get size() {\n    return this._args[0];\n  }\n}\n\n/* Make a list of the given size.\n * The elements are expected to be located in the stack\n * with the last one at the top. */\nexport class IMakeList extends Instruction {\n  constructor(size) {\n    super(I_MakeList, [size]);\n  }\n\n  get size() {\n    return this._args[0];\n  }\n}\n\n/* Make a structure using the given constructor and the given fields.\n * The values of the fields are expected to be located in the stack\n * with the last one at the top. */\nexport class IMakeStructure extends Instruction {\n  constructor(typeName, constructorName, fieldNames) {\n    super(I_MakeStructure, [typeName, constructorName, fieldNames]);\n  }\n\n  get typeName() {\n    return this._args[0];\n  }\n\n  get constructorName() {\n    return this._args[1];\n  }\n\n  get fieldNames() {\n    return this._args[2];\n  }\n}\n\n/* Update a structure built using the given constructor with the given\n * fields.\n * The stack should have a structure built using the given constructor,\n * followed by the values of the fields that are expected.\n * The last field should be at the top. */\nexport class IUpdateStructure extends Instruction {\n  constructor(typeName, constructorName, fieldNames) {\n    super(I_UpdateStructure, [typeName, constructorName, fieldNames]);\n  }\n\n  get typeName() {\n    return this._args[0];\n  }\n\n  get constructorName() {\n    return this._args[1];\n  }\n\n  get fieldNames() {\n    return this._args[2];\n  }\n}\n\n/* Read the n-th component from the tuple at the top of the stack.\n * Does not pop the tuple. */\nexport class IReadTupleComponent extends Instruction {\n  constructor(index) {\n    super(I_ReadTupleComponent, [index]);\n  }\n\n  get index() {\n    return this._args[0];\n  }\n}\n\n/* Read the given field from the structure at the top of the stack.\n * Does not pop the structure. */\nexport class IReadStructureField extends Instruction {\n  constructor(fieldName) {\n    super(I_ReadStructureField, [fieldName]);\n  }\n\n  get fieldName() {\n    return this._args[0];\n  }\n}\n\n/* Read the given field from the structure at the top of the stack.\n * Pop the structure. */\nexport class IReadStructureFieldPop extends Instruction {\n  constructor(fieldName) {\n    super(I_ReadStructureFieldPop, [fieldName]);\n  }\n\n  get fieldName() {\n    return this._args[0];\n  }\n}\n\n/* Add the topmost elements of the stack (used mostly for testing/debugging) */\nexport class IAdd extends Instruction {\n  constructor() {\n    super(I_Add, []);\n  }\n}\n\n/* Duplicate the top of the stack (there should be at least one element) */\nexport class IDup extends Instruction {\n  constructor() {\n    super(I_Dup, []);\n  }\n}\n\n/* Pop the top of the stack (there should be at least one element) */\nexport class IPop extends Instruction {\n  constructor() {\n    super(I_Pop, []);\n  }\n}\n\n/* Call a primitive function.\n *\n * The arguments are expected to be located in the stack\n * with the last one at the top.\n *\n * Note: the compiler relies on various primitive functions.\n * For example, the operation to make a range is a primitive\n * function:\n *\n *   function _makeRange(start, end)\n *\n * So is the function that checks whether the top of the stack is a list,\n * etc. (required to compile a \"foreach\"), and so on.\n */\nexport class IPrimitiveCall extends Instruction {\n  constructor(primitiveName, nargs) {\n    super(I_PrimitiveCall, [primitiveName, nargs]);\n  }\n\n  get primitiveName() {\n    return this._args[0];\n  }\n\n  get nargs() {\n    return this._args[1];\n  }\n}\n\n/* Save the global state (when entering a function) */\nexport class ISaveState extends Instruction {\n  constructor() {\n    super(I_SaveState, []);\n  }\n}\n\n/* Restore the global state (when leaving a function) */\nexport class IRestoreState extends Instruction {\n  constructor() {\n    super(I_RestoreState, []);\n  }\n}\n\n/* Check that the top of the stack has the given type.\n * Does not pop the top of the stack. */\nexport class ITypeCheck extends Instruction {\n  constructor(type) {\n    super(I_TypeCheck, [type]);\n  }\n\n  get type() {\n    return this._args[0];\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/instruction.js","/* Gobstones API for backwards compatibility with gs-weblang-core */\nimport { boolFromValue, RuntimeState } from './runtime.js';\nimport { Runner } from './runner.js';\nimport { i18n, i18nWithLanguage } from './i18n.js';\nimport {\n  apiboardFromJboard, apiboardToJboard,\n  gbbFromJboard, gbbToJboard,\n} from './board_formats.js';\nimport { ValueStructure } from './value.js';\nimport {\n  N_PatternWildcard, N_PatternStructure, N_PatternTuple, N_PatternTimeout\n} from './ast.js';\n\nconst DEFAULT_INFINITE_LOOP_TIMEOUT = 3000; /* millisecs */\nconst DEFAULT_LANGUAGE = 'es'; /* millisecs */\n\n/* load a board in the API format into a fresh RuntimeState */\nfunction apiboardToState(apiboard) {\n  let state = new RuntimeState();\n  state.load(apiboardToJboard(apiboard));\n  return state;\n}\n\n/* Dump a RuntimeState to a board in the API format */\nfunction apiboardFromState(state) {\n  return apiboardFromJboard(state.dump());\n}\n\n/* Backwards-compatible type/value with special cases for some types */\nfunction apivalueFromValue(value) {\n  if (value === null) {\n    return null;\n  }\n  if (value.isInteger()) {\n    return {\n      type: i18n('TYPE:Integer'),\n      value: value.asNumber()\n    };\n  } else if (value.isBoolean()) {\n    return {\n      type: i18n('TYPE:Bool'),\n      value: boolFromValue(value)\n    };\n  } else if (value.isString()) {\n    return {\n      type: i18n('TYPE:String'),\n      value: value.string\n    };\n  } else if (value.isStructure()) {\n    return {\n      type: value.typeName,\n      value: value.toString()\n    };\n  } else {\n    return {\n      type: value.type().toString(),\n      value: value.toString()\n    };\n  }\n}\n\nclass GobstonesInterpreterError {\n\n  constructor(exception) {\n    this.message = exception.message;\n    this.reason = {\n      code: exception.reason,\n      detail: exception.args\n    };\n    this.on = {\n      range: {\n        start: {\n          row: exception.startPos.line,\n          column: exception.startPos.column\n        },\n        end: {\n          row: exception.endPos.line,\n          column: exception.endPos.column\n        },\n      },\n      region: exception.startPos.region\n    };\n  }\n\n}\n\nclass ParseError extends GobstonesInterpreterError {\n  constructor(exception) {\n    super(exception);\n  }\n}\n\nclass ExecutionError extends GobstonesInterpreterError {\n  constructor(exception) {\n    super(exception);\n  }\n}\n\nclass NormalExecutionResult {\n  constructor(finalBoard, snapshots, returnValue) {\n    this.finalBoard = finalBoard;\n    this.snapshots = snapshots;\n    this.returnValue = apivalueFromValue(returnValue);\n\n    /* Actual return value */\n    this.actualReturnValue = returnValue;\n  }\n}\n\nclass InteractiveExecutionResult {\n  constructor(state) {\n    this.keys = this._collectKeyNames(state);\n    this.timeout = this._timeoutValue(state);\n    this.onInit = this._onInitFunction(state);\n    this.onKey = this._onKeyFunction(state);\n    this.onTimeout = this._onTimeoutFunction(state);\n  }\n\n  _hasInit(state) {\n    for (let branch of state.runner.symbolTable.program.branches) {\n      let p = branch.pattern;\n      if (p.tag === N_PatternStructure &&\n          p.constructorName.value === i18n('CONS:INIT')) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  _hasTimeout(state) {\n    return this.timeout !== null;\n  }\n\n  _collectKeyNames(state) {\n    let keys = [];\n    for (let branch of state.runner.symbolTable.program.branches) {\n      let p = branch.pattern;\n      if (p.tag === N_PatternStructure &&\n          p.constructorName.value !== i18n('CONS:INIT')) {\n        keys.push(p.constructorName.value);\n      }\n    }\n    return keys;\n  }\n\n  _timeoutValue(state) {\n    for (let branch of state.runner.symbolTable.program.branches) {\n      if (branch.pattern.tag === N_PatternTimeout) {\n        return branch.pattern.timeout;\n      }\n    }\n    return null;\n  }\n\n  /* Return a function that, when called, continues running\n   * the interactive program feeding it with the INIT event.\n   *\n   * If the interactive program does not have an entry for the\n   * INIT event, the returned function has no effect.\n   */\n  _onInitFunction(state) {\n    if (this._hasInit(state)) {\n      let self = this;\n      return function () {\n        return i18nWithLanguage(state.language, () => {\n          return self._onEvent(\n            state,\n            new ValueStructure(i18n('TYPE:Event'), i18n('CONS:INIT'))\n          );\n        });\n      };\n    } else {\n      return function () {\n        return i18nWithLanguage(state.language, () => {\n          return apiboardFromState(state.runner.globalState);\n        });\n      };\n    }\n  }\n\n  /* Return a function that, when called, continues running\n   * the interactive program feeding it with the TIMEOUT event.\n   *\n   * If the interactive program does not have an entry for the\n   * TIMEOUT event, the returned function has no effect.\n   */\n  _onTimeoutFunction(state) {\n    if (this._hasTimeout(state)) {\n      let self = this;\n      return function () {\n        return i18nWithLanguage(state.language, () => {\n          return self._onEvent(\n            state,\n            new ValueStructure(i18n('TYPE:Event'), i18n('CONS:TIMEOUT'))\n          );\n        });\n      };\n    } else {\n      return function () {\n        return i18nWithLanguage(state.language, () => {\n          return apiboardFromState(state.runner.globalState);\n        });\n      };\n    }\n  }\n\n  /* Return a function that, when called with a key code, continues running\n   * the interactive program feeding it with the given key event.\n   *\n   * If the interactive program does not have an entry for the given\n   * key, this results in a runtime error.\n   */\n  _onKeyFunction(state) {\n    let self = this;\n    return function (keyCode) {\n      return i18nWithLanguage(state.language, () => {\n        return self._onEvent(\n          state,\n          new ValueStructure(i18n('TYPE:Event'), keyCode)\n        );\n      });\n    };\n  }\n\n  /* Continue running the interactive program feeding it with the given\n   * eventValue.\n   * On success, return a Board.\n   * On failure, return an ExecutionError. */\n  _onEvent(state, eventValue) {\n    return i18nWithLanguage(state.language, () => {\n      try {\n        state.runner.executeEventWithTimeout(\n          eventValue,\n          state.infiniteLoopTimeout\n        );\n        return apiboardFromState(state.runner.globalState);\n      } catch (exception) {\n        if (exception.isGobstonesException === undefined) {\n          throw exception;\n        }\n        return new ExecutionError(exception);\n      }\n    });\n  }\n\n}\n\nclass SnapshotTaker {\n\n  constructor(runner) {\n    this._runner = runner;\n    this._snapshots = [];\n    this._index = 0;\n  }\n\n  takeSnapshot(routineName, position, callStack, globalState) {\n    if (this._shouldTakeSnapshot(routineName, callStack)) {\n      this._snapshots.push(\n        this._snapshot(routineName, position, callStack, globalState)\n      );\n    }\n  }\n\n  snapshots() {\n    return this._snapshots;\n  }\n\n  _snapshot(routineName, position, callStack, globalState) {\n    let snapshot = {};\n    snapshot.contextNames = [];\n    for (let stackFrame of callStack) {\n      let name = stackFrame.routineName;\n      if (name !== 'program') {\n        this._index += 1;\n        name = name + '-' + this._index.toString();\n      }\n      snapshot.contextNames.push(name);\n    }\n    snapshot.board = apiboardFromState(globalState);\n    snapshot.region = position.region;\n    return snapshot;\n  }\n\n  _shouldTakeSnapshot(routineName, callStack) {\n    let routineNameStack = [];\n    for (let stackFrame of callStack) {\n      routineNameStack.push(stackFrame.routineName);\n    }\n\n    if (this._runner.primitives.isProcedure(routineName)) {\n      /* A primitive procedure must be recorded if there are no\n       * atomic routines anywhere in the call stack. */\n      return this._noAtomicRoutines(routineNameStack);\n    } else {\n      /* Other routines must be recorded if they have the 'recorded'\n       * attribute, and, moreover, there are no atomic routines other\n       * than the last one in the call stack. */\n      routineNameStack.pop();\n      return this._isRecorded(routineName)\n          && this._noAtomicRoutines(routineNameStack);\n    }\n  }\n\n  _noAtomicRoutines(routineNameStack) {\n    for (let routineName of routineNameStack) {\n      if (this._isAtomic(routineName)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  _isAtomic(routineName) {\n    if (routineName === 'program') {\n      return false;\n    } else if (this._runner.primitives.isProcedure(routineName)) {\n      /* Primitive procedure */\n      return false;\n    } else if (this._runner.symbolTable.isProcedure(routineName)) {\n      /* User-defined procedure */\n      return false;\n    } else {\n      /* Function */\n      return true;\n    }\n  }\n\n  _isRecorded(routineName) {\n    if (routineName === 'program') {\n      return true;\n    } else if (this._runner.primitives.isProcedure(routineName)) {\n      /* Primitive procedure */\n      return true;\n    } else if (this._runner.symbolTable.isProcedure(routineName)) {\n      /* User-defined procedure */\n      return false;\n    } else {\n      /* Function */\n      return false;\n    }\n  }\n\n}\n\nclass ParseResult {\n\n  constructor(state) {\n    if (state.runner.symbolTable.program === null) {\n      this.program = null;\n    } else if (state.runner.symbolTable.isInteractiveProgram()) {\n      this.program = this._resultForInteractiveProgram(state);\n    } else {\n      this.program = this._resultForProgram(state);\n    }\n    this.declarations = this._collectDeclarations(state.runner);\n  }\n\n  _resultForProgram(state) {\n    let program = {};\n    program.alias = 'program';\n    program.interpret = function (board) {\n      return i18nWithLanguage(state.language, () => {\n        let snapshotTaker = new SnapshotTaker(state.runner);\n        try {\n          state.runner.compile();\n          state.runner.executeWithTimeoutTakingSnapshots(\n            apiboardToState(board),\n            state.infiniteLoopTimeout,\n            snapshotTaker.takeSnapshot.bind(snapshotTaker)\n          );\n\n          let finalBoard = apiboardFromState(state.runner.globalState);\n          let returnValue = state.runner.result;\n          return new NormalExecutionResult(\n            finalBoard,\n            snapshotTaker.snapshots(),\n            returnValue,\n          );\n        } catch (exception) {\n          if (exception.isGobstonesException === undefined) {\n            throw exception;\n          }\n          return new ExecutionError(exception);\n        }\n      });\n    };\n    return program;\n  }\n\n  _resultForInteractiveProgram(state) {\n    let program = {};\n    program.alias = 'interactiveProgram';\n    program.interpret = function (board) {\n      return i18nWithLanguage(state.language, () => {\n        try {\n          state.runner.compile();\n          state.runner.initializeVirtualMachine(apiboardToState(board));\n          return new InteractiveExecutionResult(state);\n        } catch (exception) {\n          if (exception.isGobstonesException === undefined) {\n            throw exception;\n          }\n          return new ExecutionError(exception);\n        }\n      });\n    };\n    return program;\n  }\n\n  _collectDeclarations(runner) {\n    let declarations = [];\n    for (let name of runner.symbolTable.allProcedureNames()) {\n      if (runner.primitives.isProcedure(name)) {\n        continue; /* Skip primitive procedures */\n      }\n      declarations.push({\n        alias: 'procedureDeclaration',\n        name: name\n      });\n    }\n    for (let name of runner.symbolTable.allFunctionNames()) {\n      if (runner.primitives.isFunction(name)) {\n        continue; /* Skip primitive functions */\n      }\n      declarations.push({\n        alias: 'functionDeclaration',\n        name: name\n      });\n    }\n    return declarations;\n  }\n\n}\n\nexport class GobstonesInterpreterAPI {\n\n  constructor() {\n    /* Internal state of the interpreter */\n    let state = {\n      infiniteLoopTimeout: DEFAULT_INFINITE_LOOP_TIMEOUT,\n      language: DEFAULT_LANGUAGE,\n      runner: new Runner(),\n    };\n\n    this.config = {\n      setLanguage: function (code) {\n        state.language = code;\n      },\n      setInfiniteLoopTimeout: function (milliseconds) {\n        state.infiniteLoopTimeout = milliseconds;\n      },\n      setXGobstonesEnabled: function (isEnabled) {\n        /* TODO */\n      },\n    };\n\n    this.gbb = {\n      /* Convert a string representing a board in GBB format\n       * to a board in the \"API\" format. */\n      read: function (gbb) {\n        return apiboardFromJboard(gbbToJboard(gbb));\n      },\n      /* Convert a board in the \"API\" format to a string representing\n       * a board in GBB format. */\n      write: function (apiboard) {\n        return gbbFromJboard(apiboardToJboard(apiboard));\n      },\n    };\n\n    this.parse = function (sourceCode) {\n      return i18nWithLanguage(state.language, () => {\n        try {\n          state.runner.initialize();\n          state.runner.parse(sourceCode);\n          /* Disable checking whether there is a main 'program' present. */\n          state.runner.enableLintCheck(\n            'source-should-have-a-program-definition', false\n          );\n          state.runner.lint();\n          return new ParseResult(state);\n        } catch (exception) {\n          if (exception.isGobstonesException === undefined) {\n            throw exception;\n          }\n          return new ParseError(exception);\n        }\n      });\n    };\n\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/* eslint-disable */\r\n\r\n/* This file is taken and slightly adapted from\r\n * http://peterolson.github.io/BigInteger.js/BigInteger.js */\r\n\r\nvar BASE = 1e7,\r\n    LOG_BASE = 7,\r\n    MAX_INT = 9007199254740992,\r\n    MAX_INT_ARR = smallToArray(MAX_INT),\r\n    LOG_MAX_INT = Math.log(MAX_INT);\r\n\r\nexport function Integer(v, radix) {\r\n    if (typeof v === \"undefined\") return Integer[0];\r\n    if (typeof radix !== \"undefined\") return +radix === 10 ? parseValue(v) : parseBase(v, radix);\r\n    return parseValue(v);\r\n}\r\n\r\nfunction BigInteger(value, sign) {\r\n    this.value = value;\r\n    this.sign = sign;\r\n    this.isSmall = false;\r\n}\r\nBigInteger.prototype = Object.create(Integer.prototype);\r\n\r\nfunction SmallInteger(value) {\r\n    this.value = value;\r\n    this.sign = value < 0;\r\n    this.isSmall = true;\r\n}\r\nSmallInteger.prototype = Object.create(Integer.prototype);\r\n\r\nfunction isPrecise(n) {\r\n    return -MAX_INT < n && n < MAX_INT;\r\n}\r\n\r\nfunction smallToArray(n) { // For performance reasons doesn't reference BASE, need to change this function if BASE changes\r\n    if (n < 1e7)\r\n        return [n];\r\n    if (n < 1e14)\r\n        return [n % 1e7, Math.floor(n / 1e7)];\r\n    return [n % 1e7, Math.floor(n / 1e7) % 1e7, Math.floor(n / 1e14)];\r\n}\r\n\r\nfunction arrayToSmall(arr) { // If BASE changes this function may need to change\r\n    trim(arr);\r\n    var length = arr.length;\r\n    if (length < 4 && compareAbs(arr, MAX_INT_ARR) < 0) {\r\n        switch (length) {\r\n            case 0: return 0;\r\n            case 1: return arr[0];\r\n            case 2: return arr[0] + arr[1] * BASE;\r\n            default: return arr[0] + (arr[1] + arr[2] * BASE) * BASE;\r\n        }\r\n    }\r\n    return arr;\r\n}\r\n\r\nfunction trim(v) {\r\n    var i = v.length;\r\n    while (v[--i] === 0);\r\n    v.length = i + 1;\r\n}\r\n\r\nfunction createArray(length) { // function shamelessly stolen from Yaffle's library https://github.com/Yaffle/BigInteger\r\n    var x = new Array(length);\r\n    var i = -1;\r\n    while (++i < length) {\r\n        x[i] = 0;\r\n    }\r\n    return x;\r\n}\r\n\r\nfunction truncate(n) {\r\n    if (n > 0) return Math.floor(n);\r\n    return Math.ceil(n);\r\n}\r\n\r\nfunction add(a, b) { // assumes a and b are arrays with a.length >= b.length\r\n    var l_a = a.length,\r\n        l_b = b.length,\r\n        r = new Array(l_a),\r\n        carry = 0,\r\n        base = BASE,\r\n        sum, i;\r\n    for (i = 0; i < l_b; i++) {\r\n        sum = a[i] + b[i] + carry;\r\n        carry = sum >= base ? 1 : 0;\r\n        r[i] = sum - carry * base;\r\n    }\r\n    while (i < l_a) {\r\n        sum = a[i] + carry;\r\n        carry = sum === base ? 1 : 0;\r\n        r[i++] = sum - carry * base;\r\n    }\r\n    if (carry > 0) r.push(carry);\r\n    return r;\r\n}\r\n\r\nfunction addAny(a, b) {\r\n    if (a.length >= b.length) return add(a, b);\r\n    return add(b, a);\r\n}\r\n\r\nfunction addSmall(a, carry) { // assumes a is array, carry is number with 0 <= carry < MAX_INT\r\n    var l = a.length,\r\n        r = new Array(l),\r\n        base = BASE,\r\n        sum, i;\r\n    for (i = 0; i < l; i++) {\r\n        sum = a[i] - base + carry;\r\n        carry = Math.floor(sum / base);\r\n        r[i] = sum - carry * base;\r\n        carry += 1;\r\n    }\r\n    while (carry > 0) {\r\n        r[i++] = carry % base;\r\n        carry = Math.floor(carry / base);\r\n    }\r\n    return r;\r\n}\r\n\r\nBigInteger.prototype.add = function (v) {\r\n    var n = parseValue(v);\r\n    if (this.sign !== n.sign) {\r\n        return this.subtract(n.negate());\r\n    }\r\n    var a = this.value, b = n.value;\r\n    if (n.isSmall) {\r\n        return new BigInteger(addSmall(a, Math.abs(b)), this.sign);\r\n    }\r\n    return new BigInteger(addAny(a, b), this.sign);\r\n};\r\nBigInteger.prototype.plus = BigInteger.prototype.add;\r\n\r\nSmallInteger.prototype.add = function (v) {\r\n    var n = parseValue(v);\r\n    var a = this.value;\r\n    if (a < 0 !== n.sign) {\r\n        return this.subtract(n.negate());\r\n    }\r\n    var b = n.value;\r\n    if (n.isSmall) {\r\n        if (isPrecise(a + b)) return new SmallInteger(a + b);\r\n        b = smallToArray(Math.abs(b));\r\n    }\r\n    return new BigInteger(addSmall(b, Math.abs(a)), a < 0);\r\n};\r\nSmallInteger.prototype.plus = SmallInteger.prototype.add;\r\n\r\nfunction subtract(a, b) { // assumes a and b are arrays with a >= b\r\n    var a_l = a.length,\r\n        b_l = b.length,\r\n        r = new Array(a_l),\r\n        borrow = 0,\r\n        base = BASE,\r\n        i, difference;\r\n    for (i = 0; i < b_l; i++) {\r\n        difference = a[i] - borrow - b[i];\r\n        if (difference < 0) {\r\n            difference += base;\r\n            borrow = 1;\r\n        } else borrow = 0;\r\n        r[i] = difference;\r\n    }\r\n    for (i = b_l; i < a_l; i++) {\r\n        difference = a[i] - borrow;\r\n        if (difference < 0) difference += base;\r\n        else {\r\n            r[i++] = difference;\r\n            break;\r\n        }\r\n        r[i] = difference;\r\n    }\r\n    for (; i < a_l; i++) {\r\n        r[i] = a[i];\r\n    }\r\n    trim(r);\r\n    return r;\r\n}\r\n\r\nfunction subtractAny(a, b, sign) {\r\n    var value;\r\n    if (compareAbs(a, b) >= 0) {\r\n        value = subtract(a,b);\r\n    } else {\r\n        value = subtract(b, a);\r\n        sign = !sign;\r\n    }\r\n    value = arrayToSmall(value);\r\n    if (typeof value === \"number\") {\r\n        if (sign) value = -value;\r\n        return new SmallInteger(value);\r\n    }\r\n    return new BigInteger(value, sign);\r\n}\r\n\r\nfunction subtractSmall(a, b, sign) { // assumes a is array, b is number with 0 <= b < MAX_INT\r\n    var l = a.length,\r\n        r = new Array(l),\r\n        carry = -b,\r\n        base = BASE,\r\n        i, difference;\r\n    for (i = 0; i < l; i++) {\r\n        difference = a[i] + carry;\r\n        carry = Math.floor(difference / base);\r\n        difference %= base;\r\n        r[i] = difference < 0 ? difference + base : difference;\r\n    }\r\n    r = arrayToSmall(r);\r\n    if (typeof r === \"number\") {\r\n        if (sign) r = -r;\r\n        return new SmallInteger(r);\r\n    } return new BigInteger(r, sign);\r\n}\r\n\r\nBigInteger.prototype.subtract = function (v) {\r\n    var n = parseValue(v);\r\n    if (this.sign !== n.sign) {\r\n        return this.add(n.negate());\r\n    }\r\n    var a = this.value, b = n.value;\r\n    if (n.isSmall)\r\n        return subtractSmall(a, Math.abs(b), this.sign);\r\n    return subtractAny(a, b, this.sign);\r\n};\r\nBigInteger.prototype.minus = BigInteger.prototype.subtract;\r\n\r\nSmallInteger.prototype.subtract = function (v) {\r\n    var n = parseValue(v);\r\n    var a = this.value;\r\n    if (a < 0 !== n.sign) {\r\n        return this.add(n.negate());\r\n    }\r\n    var b = n.value;\r\n    if (n.isSmall) {\r\n        return new SmallInteger(a - b);\r\n    }\r\n    return subtractSmall(b, Math.abs(a), a >= 0);\r\n};\r\nSmallInteger.prototype.minus = SmallInteger.prototype.subtract;\r\n\r\nBigInteger.prototype.negate = function () {\r\n    return new BigInteger(this.value, !this.sign);\r\n};\r\nSmallInteger.prototype.negate = function () {\r\n    var sign = this.sign;\r\n    var small = new SmallInteger(-this.value);\r\n    small.sign = !sign;\r\n    return small;\r\n};\r\n\r\nBigInteger.prototype.abs = function () {\r\n    return new BigInteger(this.value, false);\r\n};\r\nSmallInteger.prototype.abs = function () {\r\n    return new SmallInteger(Math.abs(this.value));\r\n};\r\n\r\nfunction multiplyLong(a, b) {\r\n    var a_l = a.length,\r\n        b_l = b.length,\r\n        l = a_l + b_l,\r\n        r = createArray(l),\r\n        base = BASE,\r\n        product, carry, i, a_i, b_j;\r\n    for (i = 0; i < a_l; ++i) {\r\n        a_i = a[i];\r\n        for (var j = 0; j < b_l; ++j) {\r\n            b_j = b[j];\r\n            product = a_i * b_j + r[i + j];\r\n            carry = Math.floor(product / base);\r\n            r[i + j] = product - carry * base;\r\n            r[i + j + 1] += carry;\r\n        }\r\n    }\r\n    trim(r);\r\n    return r;\r\n}\r\n\r\nfunction multiplySmall(a, b) { // assumes a is array, b is number with |b| < BASE\r\n    var l = a.length,\r\n        r = new Array(l),\r\n        base = BASE,\r\n        carry = 0,\r\n        product, i;\r\n    for (i = 0; i < l; i++) {\r\n        product = a[i] * b + carry;\r\n        carry = Math.floor(product / base);\r\n        r[i] = product - carry * base;\r\n    }\r\n    while (carry > 0) {\r\n        r[i++] = carry % base;\r\n        carry = Math.floor(carry / base);\r\n    }\r\n    return r;\r\n}\r\n\r\nfunction shiftLeft(x, n) {\r\n    var r = [];\r\n    while (n-- > 0) r.push(0);\r\n    return r.concat(x);\r\n}\r\n\r\nfunction multiplyKaratsuba(x, y) {\r\n    var n = Math.max(x.length, y.length);\r\n\r\n    if (n <= 30) return multiplyLong(x, y);\r\n    n = Math.ceil(n / 2);\r\n\r\n    var b = x.slice(n),\r\n        a = x.slice(0, n),\r\n        d = y.slice(n),\r\n        c = y.slice(0, n);\r\n\r\n    var ac = multiplyKaratsuba(a, c),\r\n        bd = multiplyKaratsuba(b, d),\r\n        abcd = multiplyKaratsuba(addAny(a, b), addAny(c, d));\r\n\r\n    var product = addAny(addAny(ac, shiftLeft(subtract(subtract(abcd, ac), bd), n)), shiftLeft(bd, 2 * n));\r\n    trim(product);\r\n    return product;\r\n}\r\n\r\n// The following function is derived from a surface fit of a graph plotting the performance difference\r\n// between long multiplication and karatsuba multiplication versus the lengths of the two arrays.\r\nfunction useKaratsuba(l1, l2) {\r\n    return -0.012 * l1 - 0.012 * l2 + 0.000015 * l1 * l2 > 0;\r\n}\r\n\r\nBigInteger.prototype.multiply = function (v) {\r\n    var n = parseValue(v),\r\n        a = this.value, b = n.value,\r\n        sign = this.sign !== n.sign,\r\n        abs;\r\n    if (n.isSmall) {\r\n        if (b === 0) return Integer[0];\r\n        if (b === 1) return this;\r\n        if (b === -1) return this.negate();\r\n        abs = Math.abs(b);\r\n        if (abs < BASE) {\r\n            return new BigInteger(multiplySmall(a, abs), sign);\r\n        }\r\n        b = smallToArray(abs);\r\n    }\r\n    if (useKaratsuba(a.length, b.length)) // Karatsuba is only faster for certain array sizes\r\n        return new BigInteger(multiplyKaratsuba(a, b), sign);\r\n    return new BigInteger(multiplyLong(a, b), sign);\r\n};\r\n\r\nBigInteger.prototype.times = BigInteger.prototype.multiply;\r\n\r\nfunction multiplySmallAndArray(a, b, sign) { // a >= 0\r\n    if (a < BASE) {\r\n        return new BigInteger(multiplySmall(b, a), sign);\r\n    }\r\n    return new BigInteger(multiplyLong(b, smallToArray(a)), sign);\r\n}\r\nSmallInteger.prototype._multiplyBySmall = function (a) {\r\n        if (isPrecise(a.value * this.value)) {\r\n            return new SmallInteger(a.value * this.value);\r\n        }\r\n        return multiplySmallAndArray(Math.abs(a.value), smallToArray(Math.abs(this.value)), this.sign !== a.sign);\r\n};\r\nBigInteger.prototype._multiplyBySmall = function (a) {\r\n        if (a.value === 0) return Integer[0];\r\n        if (a.value === 1) return this;\r\n        if (a.value === -1) return this.negate();\r\n        return multiplySmallAndArray(Math.abs(a.value), this.value, this.sign !== a.sign);\r\n};\r\nSmallInteger.prototype.multiply = function (v) {\r\n    return parseValue(v)._multiplyBySmall(this);\r\n};\r\nSmallInteger.prototype.times = SmallInteger.prototype.multiply;\r\n\r\nfunction square(a) {\r\n    var l = a.length,\r\n        r = createArray(l + l),\r\n        base = BASE,\r\n        product, carry, i, a_i, a_j;\r\n    for (i = 0; i < l; i++) {\r\n        a_i = a[i];\r\n        for (var j = 0; j < l; j++) {\r\n            a_j = a[j];\r\n            product = a_i * a_j + r[i + j];\r\n            carry = Math.floor(product / base);\r\n            r[i + j] = product - carry * base;\r\n            r[i + j + 1] += carry;\r\n        }\r\n    }\r\n    trim(r);\r\n    return r;\r\n}\r\n\r\nBigInteger.prototype.square = function () {\r\n    return new BigInteger(square(this.value), false);\r\n};\r\n\r\nSmallInteger.prototype.square = function () {\r\n    var value = this.value * this.value;\r\n    if (isPrecise(value)) return new SmallInteger(value);\r\n    return new BigInteger(square(smallToArray(Math.abs(this.value))), false);\r\n};\r\n\r\nfunction divMod1(a, b) { // Left over from previous version. Performs faster than divMod2 on smaller input sizes.\r\n    var a_l = a.length,\r\n        b_l = b.length,\r\n        base = BASE,\r\n        result = createArray(b.length),\r\n        divisorMostSignificantDigit = b[b_l - 1],\r\n        // normalization\r\n        lambda = Math.ceil(base / (2 * divisorMostSignificantDigit)),\r\n        remainder = multiplySmall(a, lambda),\r\n        divisor = multiplySmall(b, lambda),\r\n        quotientDigit, shift, carry, borrow, i, l, q;\r\n    if (remainder.length <= a_l) remainder.push(0);\r\n    divisor.push(0);\r\n    divisorMostSignificantDigit = divisor[b_l - 1];\r\n    for (shift = a_l - b_l; shift >= 0; shift--) {\r\n        quotientDigit = base - 1;\r\n        if (remainder[shift + b_l] !== divisorMostSignificantDigit) {\r\n          quotientDigit = Math.floor((remainder[shift + b_l] * base + remainder[shift + b_l - 1]) / divisorMostSignificantDigit);\r\n        }\r\n        // quotientDigit <= base - 1\r\n        carry = 0;\r\n        borrow = 0;\r\n        l = divisor.length;\r\n        for (i = 0; i < l; i++) {\r\n            carry += quotientDigit * divisor[i];\r\n            q = Math.floor(carry / base);\r\n            borrow += remainder[shift + i] - (carry - q * base);\r\n            carry = q;\r\n            if (borrow < 0) {\r\n                remainder[shift + i] = borrow + base;\r\n                borrow = -1;\r\n            } else {\r\n                remainder[shift + i] = borrow;\r\n                borrow = 0;\r\n            }\r\n        }\r\n        while (borrow !== 0) {\r\n            quotientDigit -= 1;\r\n            carry = 0;\r\n            for (i = 0; i < l; i++) {\r\n                carry += remainder[shift + i] - base + divisor[i];\r\n                if (carry < 0) {\r\n                    remainder[shift + i] = carry + base;\r\n                    carry = 0;\r\n                } else {\r\n                    remainder[shift + i] = carry;\r\n                    carry = 1;\r\n                }\r\n            }\r\n            borrow += carry;\r\n        }\r\n        result[shift] = quotientDigit;\r\n    }\r\n    // denormalization\r\n    remainder = divModSmall(remainder, lambda)[0];\r\n    return [arrayToSmall(result), arrayToSmall(remainder)];\r\n}\r\n\r\nfunction divMod2(a, b) { // Implementation idea shamelessly stolen from Silent Matt's library http://silentmatt.com/biginteger/\r\n    // Performs faster than divMod1 on larger input sizes.\r\n    var a_l = a.length,\r\n        b_l = b.length,\r\n        result = [],\r\n        part = [],\r\n        base = BASE,\r\n        guess, xlen, highx, highy, check;\r\n    while (a_l) {\r\n        part.unshift(a[--a_l]);\r\n        trim(part);\r\n        if (compareAbs(part, b) < 0) {\r\n            result.push(0);\r\n            continue;\r\n        }\r\n        xlen = part.length;\r\n        highx = part[xlen - 1] * base + part[xlen - 2];\r\n        highy = b[b_l - 1] * base + b[b_l - 2];\r\n        if (xlen > b_l) {\r\n            highx = (highx + 1) * base;\r\n        }\r\n        guess = Math.ceil(highx / highy);\r\n        do {\r\n            check = multiplySmall(b, guess);\r\n            if (compareAbs(check, part) <= 0) break;\r\n            guess--;\r\n        } while (guess);\r\n        result.push(guess);\r\n        part = subtract(part, check);\r\n    }\r\n    result.reverse();\r\n    return [arrayToSmall(result), arrayToSmall(part)];\r\n}\r\n\r\nfunction divModSmall(value, lambda) {\r\n    var length = value.length,\r\n        quotient = createArray(length),\r\n        base = BASE,\r\n        i, q, remainder, divisor;\r\n    remainder = 0;\r\n    for (i = length - 1; i >= 0; --i) {\r\n        divisor = remainder * base + value[i];\r\n        q = truncate(divisor / lambda);\r\n        remainder = divisor - q * lambda;\r\n        quotient[i] = q | 0;\r\n    }\r\n    return [quotient, remainder | 0];\r\n}\r\n\r\nfunction divModAny(self, v) {\r\n    var value, n = parseValue(v);\r\n    var a = self.value, b = n.value;\r\n    var quotient;\r\n    if (b === 0) throw new Error(\"Cannot divide by zero\");\r\n    if (self.isSmall) {\r\n        if (n.isSmall) {\r\n            return [new SmallInteger(truncate(a / b)), new SmallInteger(a % b)];\r\n        }\r\n        return [Integer[0], self];\r\n    }\r\n    if (n.isSmall) {\r\n        if (b === 1) return [self, Integer[0]];\r\n        if (b == -1) return [self.negate(), Integer[0]];\r\n        var abs = Math.abs(b);\r\n        if (abs < BASE) {\r\n            value = divModSmall(a, abs);\r\n            quotient = arrayToSmall(value[0]);\r\n            var remainder = value[1];\r\n            if (self.sign) remainder = -remainder;\r\n            if (typeof quotient === \"number\") {\r\n                if (self.sign !== n.sign) quotient = -quotient;\r\n                return [new SmallInteger(quotient), new SmallInteger(remainder)];\r\n            }\r\n            return [new BigInteger(quotient, self.sign !== n.sign), new SmallInteger(remainder)];\r\n        }\r\n        b = smallToArray(abs);\r\n    }\r\n    var comparison = compareAbs(a, b);\r\n    if (comparison === -1) return [Integer[0], self];\r\n    if (comparison === 0) return [Integer[self.sign === n.sign ? 1 : -1], Integer[0]];\r\n\r\n    // divMod1 is faster on smaller input sizes\r\n    if (a.length + b.length <= 200)\r\n        value = divMod1(a, b);\r\n    else value = divMod2(a, b);\r\n\r\n    quotient = value[0];\r\n    var qSign = self.sign !== n.sign,\r\n        mod = value[1],\r\n        mSign = self.sign;\r\n    if (typeof quotient === \"number\") {\r\n        if (qSign) quotient = -quotient;\r\n        quotient = new SmallInteger(quotient);\r\n    } else quotient = new BigInteger(quotient, qSign);\r\n    if (typeof mod === \"number\") {\r\n        if (mSign) mod = -mod;\r\n        mod = new SmallInteger(mod);\r\n    } else mod = new BigInteger(mod, mSign);\r\n    return [quotient, mod];\r\n}\r\n\r\nBigInteger.prototype.divmod = function (v) {\r\n    var result = divModAny(this, v);\r\n    return {\r\n        quotient: result[0],\r\n        remainder: result[1]\r\n    };\r\n};\r\nSmallInteger.prototype.divmod = BigInteger.prototype.divmod;\r\n\r\nBigInteger.prototype.divide = function (v) {\r\n    return divModAny(this, v)[0];\r\n};\r\nSmallInteger.prototype.over = SmallInteger.prototype.divide = BigInteger.prototype.over = BigInteger.prototype.divide;\r\n\r\nBigInteger.prototype.mod = function (v) {\r\n    return divModAny(this, v)[1];\r\n};\r\nSmallInteger.prototype.remainder = SmallInteger.prototype.mod = BigInteger.prototype.remainder = BigInteger.prototype.mod;\r\n\r\nBigInteger.prototype.pow = function (v) {\r\n    var n = parseValue(v),\r\n        a = this.value,\r\n        b = n.value,\r\n        value, x, y;\r\n    if (b === 0) return Integer[1];\r\n    if (a === 0) return Integer[0];\r\n    if (a === 1) return Integer[1];\r\n    if (a === -1) return n.isEven() ? Integer[1] : Integer[-1];\r\n    if (n.sign) {\r\n        return Integer[0];\r\n    }\r\n    if (!n.isSmall) throw new Error(\"The exponent \" + n.toString() + \" is too large.\");\r\n    if (this.isSmall) {\r\n        if (isPrecise(value = Math.pow(a, b)))\r\n            return new SmallInteger(truncate(value));\r\n    }\r\n    x = this;\r\n    y = Integer[1];\r\n    while (true) {\r\n        if (b & 1 === 1) {\r\n            y = y.times(x);\r\n            --b;\r\n        }\r\n        if (b === 0) break;\r\n        b /= 2;\r\n        x = x.square();\r\n    }\r\n    return y;\r\n};\r\nSmallInteger.prototype.pow = BigInteger.prototype.pow;\r\n\r\nBigInteger.prototype.modPow = function (exp, mod) {\r\n    exp = parseValue(exp);\r\n    mod = parseValue(mod);\r\n    if (mod.isZero()) throw new Error(\"Cannot take modPow with modulus 0\");\r\n    var r = Integer[1],\r\n        base = this.mod(mod);\r\n    while (exp.isPositive()) {\r\n        if (base.isZero()) return Integer[0];\r\n        if (exp.isOdd()) r = r.multiply(base).mod(mod);\r\n        exp = exp.divide(2);\r\n        base = base.square().mod(mod);\r\n    }\r\n    return r;\r\n};\r\nSmallInteger.prototype.modPow = BigInteger.prototype.modPow;\r\n\r\nfunction compareAbs(a, b) {\r\n    if (a.length !== b.length) {\r\n        return a.length > b.length ? 1 : -1;\r\n    }\r\n    for (var i = a.length - 1; i >= 0; i--) {\r\n        if (a[i] !== b[i]) return a[i] > b[i] ? 1 : -1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nBigInteger.prototype.compareAbs = function (v) {\r\n    var n = parseValue(v),\r\n        a = this.value,\r\n        b = n.value;\r\n    if (n.isSmall) return 1;\r\n    return compareAbs(a, b);\r\n};\r\nSmallInteger.prototype.compareAbs = function (v) {\r\n    var n = parseValue(v),\r\n        a = Math.abs(this.value),\r\n        b = n.value;\r\n    if (n.isSmall) {\r\n        b = Math.abs(b);\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n    return -1;\r\n};\r\n\r\nBigInteger.prototype.compare = function (v) {\r\n    // See discussion about comparison with Infinity:\r\n    // https://github.com/peterolson/BigInteger.js/issues/61\r\n    if (v === Infinity) {\r\n        return -1;\r\n    }\r\n    if (v === -Infinity) {\r\n        return 1;\r\n    }\r\n\r\n    var n = parseValue(v),\r\n        a = this.value,\r\n        b = n.value;\r\n    if (this.sign !== n.sign) {\r\n        return n.sign ? 1 : -1;\r\n    }\r\n    if (n.isSmall) {\r\n        return this.sign ? -1 : 1;\r\n    }\r\n    return compareAbs(a, b) * (this.sign ? -1 : 1);\r\n};\r\nBigInteger.prototype.compareTo = BigInteger.prototype.compare;\r\n\r\nSmallInteger.prototype.compare = function (v) {\r\n    if (v === Infinity) {\r\n        return -1;\r\n    }\r\n    if (v === -Infinity) {\r\n        return 1;\r\n    }\r\n\r\n    var n = parseValue(v),\r\n        a = this.value,\r\n        b = n.value;\r\n    if (n.isSmall) {\r\n        return a == b ? 0 : a > b ? 1 : -1;\r\n    }\r\n    if (a < 0 !== n.sign) {\r\n        return a < 0 ? -1 : 1;\r\n    }\r\n    return a < 0 ? 1 : -1;\r\n};\r\nSmallInteger.prototype.compareTo = SmallInteger.prototype.compare;\r\n\r\nBigInteger.prototype.equals = function (v) {\r\n    return this.compare(v) === 0;\r\n};\r\nSmallInteger.prototype.eq = SmallInteger.prototype.equals = BigInteger.prototype.eq = BigInteger.prototype.equals;\r\n\r\nBigInteger.prototype.notEquals = function (v) {\r\n    return this.compare(v) !== 0;\r\n};\r\nSmallInteger.prototype.neq = SmallInteger.prototype.notEquals = BigInteger.prototype.neq = BigInteger.prototype.notEquals;\r\n\r\nBigInteger.prototype.greater = function (v) {\r\n    return this.compare(v) > 0;\r\n};\r\nSmallInteger.prototype.gt = SmallInteger.prototype.greater = BigInteger.prototype.gt = BigInteger.prototype.greater;\r\n\r\nBigInteger.prototype.lesser = function (v) {\r\n    return this.compare(v) < 0;\r\n};\r\nSmallInteger.prototype.lt = SmallInteger.prototype.lesser = BigInteger.prototype.lt = BigInteger.prototype.lesser;\r\n\r\nBigInteger.prototype.greaterOrEquals = function (v) {\r\n    return this.compare(v) >= 0;\r\n};\r\nSmallInteger.prototype.geq = SmallInteger.prototype.greaterOrEquals = BigInteger.prototype.geq = BigInteger.prototype.greaterOrEquals;\r\n\r\nBigInteger.prototype.lesserOrEquals = function (v) {\r\n    return this.compare(v) <= 0;\r\n};\r\nSmallInteger.prototype.leq = SmallInteger.prototype.lesserOrEquals = BigInteger.prototype.leq = BigInteger.prototype.lesserOrEquals;\r\n\r\nBigInteger.prototype.isEven = function () {\r\n    return (this.value[0] & 1) === 0;\r\n};\r\nSmallInteger.prototype.isEven = function () {\r\n    return (this.value & 1) === 0;\r\n};\r\n\r\nBigInteger.prototype.isOdd = function () {\r\n    return (this.value[0] & 1) === 1;\r\n};\r\nSmallInteger.prototype.isOdd = function () {\r\n    return (this.value & 1) === 1;\r\n};\r\n\r\nBigInteger.prototype.isPositive = function () {\r\n    return !this.sign;\r\n};\r\nSmallInteger.prototype.isPositive = function () {\r\n    return this.value > 0;\r\n};\r\n\r\nBigInteger.prototype.isNegative = function () {\r\n    return this.sign;\r\n};\r\nSmallInteger.prototype.isNegative = function () {\r\n    return this.value < 0;\r\n};\r\n\r\nBigInteger.prototype.isUnit = function () {\r\n    return false;\r\n};\r\nSmallInteger.prototype.isUnit = function () {\r\n    return Math.abs(this.value) === 1;\r\n};\r\n\r\nBigInteger.prototype.isZero = function () {\r\n    return false;\r\n};\r\nSmallInteger.prototype.isZero = function () {\r\n    return this.value === 0;\r\n};\r\nBigInteger.prototype.isDivisibleBy = function (v) {\r\n    var n = parseValue(v);\r\n    var value = n.value;\r\n    if (value === 0) return false;\r\n    if (value === 1) return true;\r\n    if (value === 2) return this.isEven();\r\n    return this.mod(n).equals(Integer[0]);\r\n};\r\nSmallInteger.prototype.isDivisibleBy = BigInteger.prototype.isDivisibleBy;\r\n\r\nfunction isBasicPrime(v) {\r\n    var n = v.abs();\r\n    if (n.isUnit()) return false;\r\n    if (n.equals(2) || n.equals(3) || n.equals(5)) return true;\r\n    if (n.isEven() || n.isDivisibleBy(3) || n.isDivisibleBy(5)) return false;\r\n    if (n.lesser(25)) return true;\r\n    // we don't know if it's prime: let the other functions figure it out\r\n}\r\n\r\nBigInteger.prototype.isPrime = function () {\r\n    var isPrime = isBasicPrime(this);\r\n    if (isPrime !== undefined) return isPrime;\r\n    var n = this.abs(),\r\n        nPrev = n.prev();\r\n    var a = [2, 3, 5, 7, 11, 13, 17, 19],\r\n        b = nPrev,\r\n        d, t, i, x;\r\n    while (b.isEven()) b = b.divide(2);\r\n    for (i = 0; i < a.length; i++) {\r\n        x = bigInt(a[i]).modPow(b, n);\r\n        if (x.equals(Integer[1]) || x.equals(nPrev)) continue;\r\n        for (t = true, d = b; t && d.lesser(nPrev) ; d = d.multiply(2)) {\r\n            x = x.square().mod(n);\r\n            if (x.equals(nPrev)) t = false;\r\n        }\r\n        if (t) return false;\r\n    }\r\n    return true;\r\n};\r\nSmallInteger.prototype.isPrime = BigInteger.prototype.isPrime;\r\n\r\nBigInteger.prototype.isProbablePrime = function (iterations) {\r\n    var isPrime = isBasicPrime(this);\r\n    if (isPrime !== undefined) return isPrime;\r\n    var n = this.abs();\r\n    var t = iterations === undefined ? 5 : iterations;\r\n    // use the Fermat primality test\r\n    for (var i = 0; i < t; i++) {\r\n        var a = bigInt.randBetween(2, n.minus(2));\r\n        if (!a.modPow(n.prev(), n).isUnit()) return false; // definitely composite\r\n    }\r\n    return true; // large chance of being prime\r\n};\r\nSmallInteger.prototype.isProbablePrime = BigInteger.prototype.isProbablePrime;\r\n\r\nBigInteger.prototype.modInv = function (n) {\r\n    var t = bigInt.zero, newT = bigInt.one, r = parseValue(n), newR = this.abs(), q, lastT, lastR;\r\n    while (!newR.equals(bigInt.zero)) {\r\n        q = r.divide(newR);\r\n        lastT = t;\r\n        lastR = r;\r\n        t = newT;\r\n        r = newR;\r\n        newT = lastT.subtract(q.multiply(newT));\r\n        newR = lastR.subtract(q.multiply(newR));\r\n    }\r\n    if (!r.equals(1)) throw new Error(this.toString() + \" and \" + n.toString() + \" are not co-prime\");\r\n    if (t.compare(0) === -1) {\r\n        t = t.add(n);\r\n    }\r\n    if (this.isNegative()) {\r\n        return t.negate();\r\n    }\r\n    return t;\r\n};\r\n\r\nSmallInteger.prototype.modInv = BigInteger.prototype.modInv;\r\n\r\nBigInteger.prototype.next = function () {\r\n    var value = this.value;\r\n    if (this.sign) {\r\n        return subtractSmall(value, 1, this.sign);\r\n    }\r\n    return new BigInteger(addSmall(value, 1), this.sign);\r\n};\r\nSmallInteger.prototype.next = function () {\r\n    var value = this.value;\r\n    if (value + 1 < MAX_INT) return new SmallInteger(value + 1);\r\n    return new BigInteger(MAX_INT_ARR, false);\r\n};\r\n\r\nBigInteger.prototype.prev = function () {\r\n    var value = this.value;\r\n    if (this.sign) {\r\n        return new BigInteger(addSmall(value, 1), true);\r\n    }\r\n    return subtractSmall(value, 1, this.sign);\r\n};\r\nSmallInteger.prototype.prev = function () {\r\n    var value = this.value;\r\n    if (value - 1 > -MAX_INT) return new SmallInteger(value - 1);\r\n    return new BigInteger(MAX_INT_ARR, true);\r\n};\r\n\r\nvar powersOfTwo = [1];\r\nwhile (powersOfTwo[powersOfTwo.length - 1] <= BASE) powersOfTwo.push(2 * powersOfTwo[powersOfTwo.length - 1]);\r\nvar powers2Length = powersOfTwo.length, highestPower2 = powersOfTwo[powers2Length - 1];\r\n\r\nfunction shift_isSmall(n) {\r\n    return ((typeof n === \"number\" || typeof n === \"string\") && +Math.abs(n) <= BASE) ||\r\n        (n instanceof BigInteger && n.value.length <= 1);\r\n}\r\n\r\nBigInteger.prototype.shiftLeft = function (n) {\r\n    if (!shift_isSmall(n)) {\r\n        throw new Error(String(n) + \" is too large for shifting.\");\r\n    }\r\n    n = +n;\r\n    if (n < 0) return this.shiftRight(-n);\r\n    var result = this;\r\n    while (n >= powers2Length) {\r\n        result = result.multiply(highestPower2);\r\n        n -= powers2Length - 1;\r\n    }\r\n    return result.multiply(powersOfTwo[n]);\r\n};\r\nSmallInteger.prototype.shiftLeft = BigInteger.prototype.shiftLeft;\r\n\r\nBigInteger.prototype.shiftRight = function (n) {\r\n    var remQuo;\r\n    if (!shift_isSmall(n)) {\r\n        throw new Error(String(n) + \" is too large for shifting.\");\r\n    }\r\n    n = +n;\r\n    if (n < 0) return this.shiftLeft(-n);\r\n    var result = this;\r\n    while (n >= powers2Length) {\r\n        if (result.isZero()) return result;\r\n        remQuo = divModAny(result, highestPower2);\r\n        result = remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n        n -= powers2Length - 1;\r\n    }\r\n    remQuo = divModAny(result, powersOfTwo[n]);\r\n    return remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n};\r\nSmallInteger.prototype.shiftRight = BigInteger.prototype.shiftRight;\r\n\r\nfunction bitwise(x, y, fn) {\r\n    y = parseValue(y);\r\n    var xSign = x.isNegative(), ySign = y.isNegative();\r\n    var xRem = xSign ? x.not() : x,\r\n        yRem = ySign ? y.not() : y;\r\n    var xBits = [], yBits = [];\r\n    var xStop = false, yStop = false;\r\n    while (!xStop || !yStop) {\r\n        if (xRem.isZero()) { // virtual sign extension for simulating two's complement\r\n            xStop = true;\r\n            xBits.push(xSign ? 1 : 0);\r\n        }\r\n        else if (xSign) xBits.push(xRem.isEven() ? 1 : 0); // two's complement for negative numbers\r\n        else xBits.push(xRem.isEven() ? 0 : 1);\r\n\r\n        if (yRem.isZero()) {\r\n            yStop = true;\r\n            yBits.push(ySign ? 1 : 0);\r\n        }\r\n        else if (ySign) yBits.push(yRem.isEven() ? 1 : 0);\r\n        else yBits.push(yRem.isEven() ? 0 : 1);\r\n\r\n        xRem = xRem.over(2);\r\n        yRem = yRem.over(2);\r\n    }\r\n    var result = [];\r\n    for (var i = 0; i < xBits.length; i++) result.push(fn(xBits[i], yBits[i]));\r\n    var sum = bigInt(result.pop()).negate().times(bigInt(2).pow(result.length));\r\n    while (result.length) {\r\n        sum = sum.add(bigInt(result.pop()).times(bigInt(2).pow(result.length)));\r\n    }\r\n    return sum;\r\n}\r\n\r\nBigInteger.prototype.not = function () {\r\n    return this.negate().prev();\r\n};\r\nSmallInteger.prototype.not = BigInteger.prototype.not;\r\n\r\nBigInteger.prototype.and = function (n) {\r\n    return bitwise(this, n, function (a, b) { return a & b; });\r\n};\r\nSmallInteger.prototype.and = BigInteger.prototype.and;\r\n\r\nBigInteger.prototype.or = function (n) {\r\n    return bitwise(this, n, function (a, b) { return a | b; });\r\n};\r\nSmallInteger.prototype.or = BigInteger.prototype.or;\r\n\r\nBigInteger.prototype.xor = function (n) {\r\n    return bitwise(this, n, function (a, b) { return a ^ b; });\r\n};\r\nSmallInteger.prototype.xor = BigInteger.prototype.xor;\r\n\r\nvar LOBMASK_I = 1 << 30, LOBMASK_BI = (BASE & -BASE) * (BASE & -BASE) | LOBMASK_I;\r\nfunction roughLOB(n) { // get lowestOneBit (rough)\r\n    // SmallInteger: return Min(lowestOneBit(n), 1 << 30)\r\n    // BigInteger: return Min(lowestOneBit(n), 1 << 14) [BASE=1e7]\r\n    var v = n.value, x = typeof v === \"number\" ? v | LOBMASK_I : v[0] + v[1] * BASE | LOBMASK_BI;\r\n    return x & -x;\r\n}\r\n\r\nfunction max(a, b) {\r\n    a = parseValue(a);\r\n    b = parseValue(b);\r\n    return a.greater(b) ? a : b;\r\n}\r\nfunction min(a, b) {\r\n    a = parseValue(a);\r\n    b = parseValue(b);\r\n    return a.lesser(b) ? a : b;\r\n}\r\nfunction gcd(a, b) {\r\n    a = parseValue(a).abs();\r\n    b = parseValue(b).abs();\r\n    if (a.equals(b)) return a;\r\n    if (a.isZero()) return b;\r\n    if (b.isZero()) return a;\r\n    var c = Integer[1], d, t;\r\n    while (a.isEven() && b.isEven()) {\r\n        d = Math.min(roughLOB(a), roughLOB(b));\r\n        a = a.divide(d);\r\n        b = b.divide(d);\r\n        c = c.multiply(d);\r\n    }\r\n    while (a.isEven()) {\r\n        a = a.divide(roughLOB(a));\r\n    }\r\n    do {\r\n        while (b.isEven()) {\r\n            b = b.divide(roughLOB(b));\r\n        }\r\n        if (a.greater(b)) {\r\n            t = b; b = a; a = t;\r\n        }\r\n        b = b.subtract(a);\r\n    } while (!b.isZero());\r\n    return c.isUnit() ? a : a.multiply(c);\r\n}\r\nfunction lcm(a, b) {\r\n    a = parseValue(a).abs();\r\n    b = parseValue(b).abs();\r\n    return a.divide(gcd(a, b)).multiply(b);\r\n}\r\nfunction randBetween(a, b) {\r\n    a = parseValue(a);\r\n    b = parseValue(b);\r\n    var low = min(a, b), high = max(a, b);\r\n    var range = high.subtract(low);\r\n    if (range.isSmall) return low.add(Math.round(Math.random() * range));\r\n    var length = range.value.length - 1;\r\n    var result = [], restricted = true;\r\n    for (var i = length; i >= 0; i--) {\r\n        var top = restricted ? range.value[i] : BASE;\r\n        var digit = truncate(Math.random() * top);\r\n        result.unshift(digit);\r\n        if (digit < top) restricted = false;\r\n    }\r\n    result = arrayToSmall(result);\r\n    return low.add(typeof result === \"number\" ? new SmallInteger(result) : new BigInteger(result, false));\r\n}\r\nvar parseBase = function (text, base) {\r\n    var length = text.length;\r\nvar i;\r\nvar absBase = Math.abs(base);\r\nfor(var i = 0; i < length; i++) {\r\n\tvar c = text[i].toLowerCase();\r\n\tif(c === \"-\") continue;\r\n\tif(/[a-z0-9]/.test(c)) {\r\n\t    if(/[0-9]/.test(c) && +c >= absBase) {\r\n\t\t\tif(c === \"1\" && absBase === 1) continue;\r\n                throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n\t\t} else if(c.charCodeAt(0) - 87 >= absBase) {\r\n\t\t\tthrow new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n\t\t}\r\n\t}\r\n}\r\n    if (2 <= base && base <= 36) {\r\n        if (length <= LOG_MAX_INT / Math.log(base)) {\r\n\t\tvar result = parseInt(text, base);\r\n\t\tif(isNaN(result)) {\r\n\t\t\tthrow new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n\t\t}\r\n            return new SmallInteger(parseInt(text, base));\r\n        }\r\n    }\r\n    base = parseValue(base);\r\n    var digits = [];\r\n    var isNegative = text[0] === \"-\";\r\n    for (i = isNegative ? 1 : 0; i < text.length; i++) {\r\n        var c = text[i].toLowerCase(),\r\n            charCode = c.charCodeAt(0);\r\n        if (48 <= charCode && charCode <= 57) digits.push(parseValue(c));\r\n        else if (97 <= charCode && charCode <= 122) digits.push(parseValue(c.charCodeAt(0) - 87));\r\n        else if (c === \"<\") {\r\n            var start = i;\r\n            do { i++; } while (text[i] !== \">\");\r\n            digits.push(parseValue(text.slice(start + 1, i)));\r\n        }\r\n        else throw new Error(c + \" is not a valid character\");\r\n    }\r\n    return parseBaseFromArray(digits, base, isNegative);\r\n};\r\n\r\nfunction parseBaseFromArray(digits, base, isNegative) {\r\n    var val = Integer[0], pow = Integer[1], i;\r\n    for (i = digits.length - 1; i >= 0; i--) {\r\n        val = val.add(digits[i].times(pow));\r\n        pow = pow.times(base);\r\n    }\r\n    return isNegative ? val.negate() : val;\r\n}\r\n\r\nfunction stringify(digit) {\r\n    var v = digit.value;\r\n    if (typeof v === \"number\") v = [v];\r\n    if (v.length === 1 && v[0] <= 35) {\r\n        return \"0123456789abcdefghijklmnopqrstuvwxyz\".charAt(v[0]);\r\n    }\r\n    return \"<\" + v + \">\";\r\n}\r\nfunction toBase(n, base) {\r\n    base = bigInt(base);\r\n    if (base.isZero()) {\r\n        if (n.isZero()) return \"0\";\r\n        throw new Error(\"Cannot convert nonzero numbers to base 0.\");\r\n    }\r\n    if (base.equals(-1)) {\r\n        if (n.isZero()) return \"0\";\r\n        if (n.isNegative()) return new Array(1 - n).join(\"10\");\r\n        return \"1\" + new Array(+n).join(\"01\");\r\n    }\r\n    var minusSign = \"\";\r\n    if (n.isNegative() && base.isPositive()) {\r\n        minusSign = \"-\";\r\n        n = n.abs();\r\n    }\r\n    if (base.equals(1)) {\r\n        if (n.isZero()) return \"0\";\r\n        return minusSign + new Array(+n + 1).join(1);\r\n    }\r\n    var out = [];\r\n    var left = n, divmod;\r\n    while (left.isNegative() || left.compareAbs(base) >= 0) {\r\n        divmod = left.divmod(base);\r\n        left = divmod.quotient;\r\n        var digit = divmod.remainder;\r\n        if (digit.isNegative()) {\r\n            digit = base.minus(digit).abs();\r\n            left = left.next();\r\n        }\r\n        out.push(stringify(digit));\r\n    }\r\n    out.push(stringify(left));\r\n    return minusSign + out.reverse().join(\"\");\r\n}\r\n\r\nBigInteger.prototype.toString = function (radix) {\r\n    if (radix === undefined) radix = 10;\r\n    if (radix !== 10) return toBase(this, radix);\r\n    var v = this.value, l = v.length, str = String(v[--l]), zeros = \"0000000\", digit;\r\n    while (--l >= 0) {\r\n        digit = String(v[l]);\r\n        str += zeros.slice(digit.length) + digit;\r\n    }\r\n    var sign = this.sign ? \"-\" : \"\";\r\n    return sign + str;\r\n};\r\nSmallInteger.prototype.toString = function (radix) {\r\n    if (radix === undefined) radix = 10;\r\n    if (radix != 10) return toBase(this, radix);\r\n    return String(this.value);\r\n};\r\n\r\nBigInteger.prototype.valueOf = function () {\r\n    return +this.toString();\r\n};\r\nBigInteger.prototype.toJSNumber = BigInteger.prototype.valueOf;\r\n\r\nSmallInteger.prototype.valueOf = function () {\r\n    return this.value;\r\n};\r\nSmallInteger.prototype.toJSNumber = SmallInteger.prototype.valueOf;\r\n\r\nfunction parseStringValue(v) {\r\n        if (isPrecise(+v)) {\r\n            var x = +v;\r\n            if (x === truncate(x))\r\n                return new SmallInteger(x);\r\n            throw \"Invalid integer: \" + v;\r\n        }\r\n        var sign = v[0] === \"-\";\r\n        if (sign) v = v.slice(1);\r\n        var split = v.split(/e/i);\r\n        if (split.length > 2) throw new Error(\"Invalid integer: \" + split.join(\"e\"));\r\n        if (split.length === 2) {\r\n            var exp = split[1];\r\n            if (exp[0] === \"+\") exp = exp.slice(1);\r\n            exp = +exp;\r\n            if (exp !== truncate(exp) || !isPrecise(exp)) throw new Error(\"Invalid integer: \" + exp + \" is not a valid exponent.\");\r\n            var text = split[0];\r\n            var decimalPlace = text.indexOf(\".\");\r\n            if (decimalPlace >= 0) {\r\n                exp -= text.length - decimalPlace - 1;\r\n                text = text.slice(0, decimalPlace) + text.slice(decimalPlace + 1);\r\n            }\r\n            if (exp < 0) throw new Error(\"Cannot include negative exponent part for integers\");\r\n            text += (new Array(exp + 1)).join(\"0\");\r\n            v = text;\r\n        }\r\n        var isValid = /^([0-9][0-9]*)$/.test(v);\r\n        if (!isValid) throw new Error(\"Invalid integer: \" + v);\r\n        var r = [], max = v.length, l = LOG_BASE, min = max - l;\r\n        while (max > 0) {\r\n            r.push(+v.slice(min, max));\r\n            min -= l;\r\n            if (min < 0) min = 0;\r\n            max -= l;\r\n        }\r\n        trim(r);\r\n        return new BigInteger(r, sign);\r\n}\r\n\r\nfunction parseNumberValue(v) {\r\n    if (isPrecise(v)) {\r\n        if (v !== truncate(v)) throw new Error(v + \" is not an integer.\");\r\n        return new SmallInteger(v);\r\n    }\r\n    return parseStringValue(v.toString());\r\n}\r\n\r\nfunction parseValue(v) {\r\n    if (typeof v === \"number\") {\r\n        return parseNumberValue(v);\r\n    }\r\n    if (typeof v === \"string\") {\r\n        return parseStringValue(v);\r\n    }\r\n    return v;\r\n}\r\n// Pre-define numbers in range [-999,999]\r\nfor (var i = 0; i < 1000; i++) {\r\n    Integer[i] = new SmallInteger(i);\r\n    if (i > 0) Integer[-i] = new SmallInteger(-i);\r\n}\r\n// Backwards compatibility\r\nInteger.one = Integer[1];\r\nInteger.zero = Integer[0];\r\nInteger.minusOne = Integer[-1];\r\nInteger.max = max;\r\nInteger.min = min;\r\nInteger.gcd = gcd;\r\nInteger.lcm = lcm;\r\nInteger.isInstance = function (x) { return x instanceof BigInteger || x instanceof SmallInteger; };\r\nInteger.randBetween = randBetween;\r\n\r\nInteger.fromArray = function (digits, base, isNegative) {\r\n    return parseBaseFromArray(digits.map(parseValue), parseValue(base || 10), isNegative);\r\n};\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/bigint.js","\nimport { Parser } from './parser';\nimport { Linter } from './linter';\nimport { SymbolTable } from './symtable';\nimport { Compiler } from './compiler';\nimport { RuntimePrimitives, RuntimeState } from './runtime';\nimport { VirtualMachine } from './vm';\n\nimport { UnknownPosition } from './reader';\nimport {\n  T_UPPERID,\n  T_LOWERID,\n  Token,\n} from './token';\nimport {\n  ASTDefProcedure,\n  ASTDefFunction,\n  ASTDefType,\n  ASTStmtBlock,\n  ASTConstructorDeclaration,\n} from './ast';\n\n/* This module is a façade for all the combined functionality of the\n * parser/compiler/vm\n */\n\nfunction tok(tag, value) {\n  return new Token(tag, value, UnknownPosition, UnknownPosition);\n}\n\nexport class Runner {\n\n  constructor() {\n    this.initialize();\n  }\n\n  initialize() {\n    this._ast = null;\n    this._primitives = new RuntimePrimitives();\n    this._symtable = this._newSymtableWithPrimitives();\n    this._linter = new Linter(this._symtable);\n    this._code = null;\n    this._vm = null;\n    this._result = null;\n  }\n\n  /* Parse, compile, and run a program in the default global state\n   * (typically an empty 9x9 board in Gobstones).\n   * Return the return value of the program, ignoring the final state.\n   * A GbsInterpreterException may be thrown.\n   */\n  run(input) {\n    return this.runState(input, new RuntimeState()).result;\n  }\n\n  /* Parse, compile, and run a program in the given initial state.\n   * Return an object of the form\n   *   {'result': r, 'state': s]\n   * where r is the result of the program and s is the final state.\n   * A GbsInterpreterException may be thrown.\n   */\n  runState(input, initialState) {\n    this.parse(input);\n    this.lint();\n    this.compile();\n    this.execute(initialState);\n    return {'result': this._result, 'state': this._vm.globalState()};\n  }\n\n  parse(input) {\n    this._ast = new Parser(input).parse();\n  }\n\n  enableLintCheck(linterCheckId, enabled) {\n    this._linter.enableCheck(linterCheckId, enabled);\n  }\n\n  lint() {\n    this._symtable = this._linter.lint(this._ast);\n  }\n\n  compile() {\n    this._code = new Compiler(this._symtable).compile(this._ast);\n  }\n\n  initializeVirtualMachine(initialState) {\n    this._vm = new VirtualMachine(this._code, initialState);\n  }\n\n  execute(initialState) {\n    this.executeWithTimeout(initialState, 0);\n  }\n\n  executeWithTimeout(initialState, millisecs) {\n    this.executeWithTimeoutTakingSnapshots(initialState, millisecs, null);\n  }\n\n  executeWithTimeoutTakingSnapshots(initialState, millisecs, snapshotCallback) {\n    this.initializeVirtualMachine(initialState);\n    this._result = this._vm.runWithTimeoutTakingSnapshots(\n      millisecs, snapshotCallback\n    );\n  }\n\n  executeEventWithTimeout(eventValue, millisecs) {\n    this._result = this._vm.runEventWithTimeout(eventValue, millisecs);\n  }\n\n  get abstractSyntaxTree() {\n    return this._ast;\n  }\n\n  get primitives() {\n    return this._primitives;\n  }\n\n  get symbolTable() {\n    return this._symtable;\n  }\n\n  get virtualMachineCode() {\n    return this._code;\n  }\n\n  get result() {\n    return this._result;\n  }\n\n  get globalState() {\n    return this._vm.globalState();\n  }\n\n  /* Create a new symbol table, including definitions for all the primitive\n   * types and operations (which come from RuntimePrimitives) */\n  _newSymtableWithPrimitives() {\n    let symtable = new SymbolTable();\n\n    /* Populate symbol table with primitive types */\n    for (let type of this._primitives.types()) {\n      symtable.defType(this._astDefType(type));\n    }\n\n    /* Populate symbol table with primitive procedures */\n    for (let procedureName of this._primitives.procedures()) {\n      symtable.defProcedure(this._astDefProcedure(procedureName));\n    }\n\n    /* Populate symbol table with primitive functions */\n    for (let functionName of this._primitives.functions()) {\n      symtable.defFunction(this._astDefFunction(functionName));\n    }\n\n    return symtable;\n  }\n\n  _astDefType(type) {\n    let constructorDeclarations = [];\n    for (let constructor of this._primitives.typeConstructors(type)) {\n      constructorDeclarations.push(\n        this._astConstructorDeclaration(type, constructor)\n      );\n    }\n    return new ASTDefType(tok(T_UPPERID, type), constructorDeclarations);\n  }\n\n  _astDefProcedure(procedureName) {\n    let nargs = this._primitives.getOperation(procedureName).nargs();\n    let parameters = [];\n    for (let i = 1; i <= nargs; i++) {\n      parameters.push(tok(T_LOWERID, 'x' + i.toString()));\n    }\n    return new ASTDefProcedure(\n        tok(T_LOWERID, procedureName),\n        parameters,\n        new ASTStmtBlock([])\n    );\n  }\n\n  _astDefFunction(functionName) {\n    let nargs = this._primitives.getOperation(functionName).nargs();\n    let parameters = [];\n    for (let i = 1; i <= nargs; i++) {\n      parameters.push(tok(T_LOWERID, 'x' + i.toString()));\n    }\n    return new ASTDefFunction(\n        tok(T_LOWERID, functionName),\n        parameters,\n        new ASTStmtBlock([])\n    );\n  }\n\n  _astConstructorDeclaration(type, constructor) {\n    let fields = [];\n    for (let field of this._primitives.constructorFields(type, constructor)) {\n      fields.push(tok(T_LOWERID, field));\n    }\n    return new ASTConstructorDeclaration(tok(T_UPPERID, constructor), fields);\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/runner.js","import { GbsSyntaxError } from './exceptions';\nimport { Lexer } from './lexer';\nimport { i18n } from './i18n';\nimport {\n  Token, T_EOF, T_NUM, T_STRING, T_LOWERID, T_UPPERID,\n  /* Keywords */\n  T_PROGRAM, T_INTERACTIVE, T_PROCEDURE, T_FUNCTION, T_RETURN,\n  T_IF, T_THEN, T_ELSE, T_REPEAT, T_FOREACH, T_IN, T_WHILE,\n  T_SWITCH, T_TO, T_LET, T_NOT, T_DIV, T_MOD, T_TYPE,\n  T_IS, T_RECORD, T_VARIANT, T_CASE, T_FIELD, T_UNDERSCORE,\n  T_TIMEOUT,\n  /* Symbols */\n  T_LPAREN, T_RPAREN, T_LBRACE, T_RBRACE, T_LBRACK, T_RBRACK, T_COMMA,\n  T_SEMICOLON, T_RANGE, T_GETS, T_PIPE, T_ARROW, T_ASSIGN,\n  T_EQ, T_NE, T_LE, T_GE, T_LT, T_GT, T_AND, T_OR, T_CONCAT, T_PLUS,\n  T_MINUS, T_TIMES, T_POW\n} from './token';\nimport {\n  /* Main */\n  ASTMain,\n  /* Definitions */\n  ASTDefProgram,\n  ASTDefInteractiveProgram,\n  ASTDefProcedure,\n  ASTDefFunction,\n  ASTDefType,\n  /* Statements */\n  ASTStmtBlock,\n  ASTStmtReturn,\n  ASTStmtIf,\n  ASTStmtRepeat,\n  ASTStmtForeach,\n  ASTStmtWhile,\n  ASTStmtSwitch,\n  ASTStmtAssignVariable,\n  ASTStmtAssignTuple,\n  ASTStmtProcedureCall,\n  /* Patterns */\n  ASTPatternWildcard,\n  ASTPatternStructure,\n  ASTPatternTuple,\n  ASTPatternTimeout,\n  /* Expressions */\n  ASTExprVariable,\n  ASTExprConstantNumber,\n  ASTExprConstantString,\n  ASTExprList,\n  ASTExprRange,\n  ASTExprTuple,\n  ASTExprStructure,\n  ASTExprStructureUpdate,\n  ASTExprFunctionCall,\n  /* SwitchBranch */\n  ASTSwitchBranch,\n  /* FieldBinding */\n  ASTFieldBinding,\n  /* ConstructorDeclaration */\n  ASTConstructorDeclaration,\n  //\n  N_ExprVariable,\n} from './ast';\n\nconst Infix = Symbol.for('Infix');\nconst InfixL = Symbol.for('InfixL');\nconst InfixR = Symbol.for('InfixR');\nconst Prefix = Symbol.for('Prefix');\n\nclass PrecedenceLevel {\n  /* Operators should be a dictionary mapping operator tags to\n   * their function names */\n  constructor(fixity, operators) {\n    this._fixity = fixity;\n    this._operators = operators;\n  }\n\n  get fixity() {\n    return this._fixity;\n  }\n\n  isOperator(token) {\n    return Symbol.keyFor(token.tag) in this._operators;\n  }\n\n  functionName(token) {\n    return new Token(\n      T_LOWERID,\n      this._operators[Symbol.keyFor(token.tag)],\n      token.startPos,\n      token.endPos\n    );\n  }\n}\n\n/* OPERATORS is a list of precedence levels.\n * Precedence levels are ordered from lesser to greater precedence.\n */\nconst OPERATORS = [\n  /* Logical operators */\n  new PrecedenceLevel(InfixR, {\n    'T_OR': '||',\n  }),\n  new PrecedenceLevel(InfixR, {\n    'T_AND': '&&',\n  }),\n  new PrecedenceLevel(Prefix, {\n    'T_NOT': 'not',\n  }),\n  /* Relational operators */\n  new PrecedenceLevel(Infix, {\n    'T_EQ': '==',\n    'T_NE': '/=',\n    'T_LE': '<=',\n    'T_GE': '>=',\n    'T_LT': '<',\n    'T_GT': '>',\n  }),\n  /* List concatenation */\n  new PrecedenceLevel(InfixL, {\n    'T_CONCAT': '++',\n  }),\n  /* Additive operators */\n  new PrecedenceLevel(InfixL, {\n    'T_PLUS': '+',\n    'T_MINUS': '-',\n  }),\n  /* Multiplicative operators */\n  new PrecedenceLevel(InfixL, {\n    'T_TIMES': '*',\n  }),\n  /* Division operators */\n  new PrecedenceLevel(InfixL, {\n    'T_DIV': 'div',\n    'T_MOD': 'mod',\n  }),\n  /* Exponential operators */\n  new PrecedenceLevel(InfixR, {\n    'T_POW': '^'\n  }),\n  /* Unary minus */\n  new PrecedenceLevel(Prefix, {\n    'T_MINUS': '-(unary)',\n  })\n];\n\nfunction fail(startPos, endPos, reason, args) {\n  throw new GbsSyntaxError(startPos, endPos, reason, args);\n}\n\n/* Represents a parser for a Gobstones/XGobstones program.\n * It is structured as a straightforward recursive-descent parser.\n *\n * The parameter 'input' may be either a string or a dictionary\n * mapping filenames to strings.\n *\n * All the \"parseFoo\" methods agree to the following convention:\n * - parseFoo returns an AST for a Foo construction,\n * - parseFoo consumes a fragment of the input by successively requesting\n *   the next token from the lexer,\n * - when calling parseFoo, the current token should already be located\n *   on the first token of the corresponding construction,\n * - when parseFoo returns, the current token is already located on\n *   the following token, after the corresponding construction.\n */\nexport class Parser {\n\n  constructor(input) {\n    this._lexer = new Lexer(input);\n    this._nextToken();\n  }\n\n  /* Return the AST that results from parsing a full program */\n  parse() {\n    let definitions = [];\n    while (this._currentToken.tag !== T_EOF) {\n      definitions.push(this._parseDefinition());\n    }\n    return new ASTMain(definitions);\n  }\n\n  /** Definitions **/\n\n  _parseDefinition() {\n    switch (this._currentToken.tag) {\n      case T_PROGRAM:\n        return this._parseDefProgram();\n      case T_INTERACTIVE:\n        return this._parseDefInteractiveProgram();\n      case T_PROCEDURE:\n        return this._parseDefProcedure();\n      case T_FUNCTION:\n        return this._parseDefFunction();\n      case T_TYPE:\n        return this._parseDefType();\n      default:\n        return fail(\n          this._currentToken.startPos, this._currentToken.endPos,\n          'expected-but-found', [\n            i18n('definition'),\n            i18n(Symbol.keyFor(this._currentToken.tag))\n          ]\n        );\n    }\n  }\n\n  _parseDefProgram() {\n    let startPos = this._currentToken.startPos;\n    this._match(T_PROGRAM);\n    let block = this._parseStmtBlock();\n    let result = new ASTDefProgram(block);\n    result.startPos = startPos;\n    result.endPos = block.endPos;\n    return result;\n  }\n\n  _parseDefInteractiveProgram() {\n    let startPos = this._currentToken.startPos;\n    this._match(T_INTERACTIVE);\n    this._match(T_PROGRAM);\n    this._match(T_LBRACE);\n    let branches = this._parseSwitchBranches();\n    let endPos = this._currentToken.startPos;\n    this._match(T_RBRACE);\n    let result = new ASTDefInteractiveProgram(branches);\n    result.startPos = startPos;\n    result.endPos = endPos;\n    return result;\n  }\n\n  _parseDefProcedure() {\n    let startPos = this._currentToken.startPos;\n    this._match(T_PROCEDURE);\n    let name = this._parseUpperid();\n    this._match(T_LPAREN);\n    let parameters = this._parseLoweridSeq();\n    this._match(T_RPAREN);\n    let block = this._parseStmtBlock();\n    let result = new ASTDefProcedure(name, parameters, block);\n    result.startPos = startPos;\n    result.endPos = block.endPos;\n    return result;\n  }\n\n  _parseDefFunction() {\n    let startPos = this._currentToken.startPos;\n    this._match(T_FUNCTION);\n    let name = this._currentToken;\n    this._match(T_LOWERID);\n    this._match(T_LPAREN);\n    let parameters = this._parseLoweridSeq();\n    this._match(T_RPAREN);\n    let block = this._parseStmtBlock();\n    let result = new ASTDefFunction(name, parameters, block);\n    result.startPos = startPos;\n    result.endPos = block.endPos;\n    return result;\n  }\n\n  _parseDefType() {\n    let startPos = this._currentToken.startPos;\n    this._match(T_TYPE);\n    let typeName = this._parseUpperid();\n    this._match(T_IS);\n    switch (this._currentToken.tag) {\n      case T_RECORD:\n        return this._parseDefTypeRecord(startPos, typeName);\n      case T_VARIANT:\n        return this._parseDefTypeVariant(startPos, typeName);\n      default:\n        return fail(\n          this._currentToken.startPos, this._currentToken.endPos,\n          'expected-but-found', [\n            i18n('<alternative>')([\n              i18n('T_RECORD'),\n              i18n('T_VARIANT')\n            ]),\n            i18n(Symbol.keyFor(this._currentToken.tag))\n          ]\n        );\n    }\n  }\n\n  _parseDefTypeRecord(startPos, typeName) {\n    this._match(T_RECORD);\n    this._match(T_LBRACE);\n    let fieldNames = this._parseFieldNames();\n    let endPos = this._currentToken.startPos;\n    this._matchExpected(T_RBRACE, [T_FIELD, T_RBRACE]);\n    let result = new ASTDefType(typeName, [\n                   new ASTConstructorDeclaration(typeName, fieldNames)\n                 ]);\n    result.startPos = startPos;\n    result.endPos = endPos;\n    return result;\n  }\n\n  _parseDefTypeVariant(startPos, typeName) {\n    let constructorDeclarations = [];\n    this._match(T_VARIANT);\n    this._match(T_LBRACE);\n    while (this._currentToken.tag === T_CASE) {\n      constructorDeclarations.push(this._parseConstructorDeclaration());\n    }\n    let endPos = this._currentToken.startPos;\n    this._matchExpected(T_RBRACE, [T_CASE, T_RBRACE]);\n    let result = new ASTDefType(typeName, constructorDeclarations);\n    result.startPos = startPos;\n    result.endPos = endPos;\n    return result;\n  }\n\n  _parseConstructorDeclaration() {\n    let startPos = this._currentToken.startPos;\n    this._match(T_CASE);\n    let constructorName = this._parseUpperid();\n    this._match(T_LBRACE);\n    let fieldNames = this._parseFieldNames();\n    let endPos = this._currentToken.startPos;\n    this._matchExpected(T_RBRACE, [T_FIELD, T_RBRACE]);\n    let result = new ASTConstructorDeclaration(constructorName, fieldNames);\n    result.startPos = startPos;\n    result.endPos = endPos;\n    return result;\n  }\n\n  _parseFieldNames() {\n    let fieldNames = [];\n    while (this._currentToken.tag === T_FIELD) {\n      this._match(T_FIELD);\n      fieldNames.push(this._parseLowerid());\n    }\n    return fieldNames;\n  }\n\n  /** Statements **/\n\n  /* Statement, optionally followed by semicolon */\n  _parseStatement() {\n    let statement = this._parsePureStatement();\n    if (this._currentToken.tag === T_SEMICOLON) {\n      this._match(T_SEMICOLON);\n    }\n    return statement;\n  }\n\n  /* Statement (not followed by semicolon) */\n  _parsePureStatement() {\n    switch (this._currentToken.tag) {\n      case T_RETURN:\n        return this._parseStmtReturn();\n      case T_IF:\n        return this._parseStmtIf();\n      case T_REPEAT:\n        return this._parseStmtRepeat();\n      case T_FOREACH:\n        return this._parseStmtForeach();\n      case T_WHILE:\n        return this._parseStmtWhile();\n      case T_SWITCH:\n        return this._parseStmtSwitch();\n      case T_LET:\n        return this._parseStmtLet();\n      case T_LBRACE:\n        return this._parseStmtBlock();\n      case T_LOWERID:\n        return this._parseStmtAssignVariable();\n      case T_UPPERID:\n        return this._parseStmtProcedureCall();\n      case T_LPAREN:\n        /* Special error for rejecting tuple assignments\n         *   (x1, ..., xN) := expression\n         * in favour of\n         *   let (x1, ..., xN) := expression\n         */\n        return fail(\n          this._currentToken.startPos, this._currentToken.endPos,\n          'obsolete-tuple-assignment', []\n        );\n      default:\n        return fail(\n          this._currentToken.startPos, this._currentToken.endPos,\n          'expected-but-found', [\n            i18n('statement'),\n            i18n(Symbol.keyFor(this._currentToken.tag))\n          ]\n        );\n    }\n  }\n\n  _parseStmtBlock() {\n    let startPos = this._currentToken.startPos;\n    let statements = [];\n    this._match(T_LBRACE);\n    while (this._currentToken.tag !== T_RBRACE) {\n      statements.push(this._parseStatement());\n      if (this._currentToken === T_SEMICOLON) {\n        this._match(T_SEMICOLON);\n      }\n    }\n    let endPos = this._currentToken.startPos;\n    this._match(T_RBRACE);\n    let result = new ASTStmtBlock(statements);\n    result.startPos = startPos;\n    result.endPos = endPos;\n    return result;\n  }\n\n  _parseStmtReturn() {\n    let startPos = this._currentToken.startPos;\n    this._match(T_RETURN);\n    let tuple = this._parseExprTuple();\n    let result = new ASTStmtReturn(tuple);\n    result.startPos = startPos;\n    result.endPos = tuple.endPos;\n    return result;\n  }\n\n  _parseStmtIf() {\n    let startPos = this._currentToken.startPos;\n    this._match(T_IF);\n    this._match(T_LPAREN);\n    let condition = this._parseExpression();\n    this._match(T_RPAREN);\n    /* Optional 'then' */\n    if (this._currentToken.tag === T_THEN) {\n      this._match(T_THEN);\n    }\n    let thenBlock = this._parseStmtBlock();\n    let endPos;\n    let elseBlock;\n    if (this._currentToken.tag === T_ELSE) {\n      this._match(T_ELSE);\n      elseBlock = this._parseStmtBlock();\n      endPos = elseBlock.endPos;\n    } else {\n      elseBlock = null;\n      endPos = thenBlock.endPos;\n    }\n    let result = new ASTStmtIf(condition, thenBlock, elseBlock);\n    result.startPos = startPos;\n    result.endPos = endPos;\n    return result;\n  }\n\n  _parseStmtRepeat() {\n    let startPos = this._currentToken.startPos;\n    this._match(T_REPEAT);\n    this._match(T_LPAREN);\n    let times = this._parseExpression();\n    this._match(T_RPAREN);\n    let body = this._parseStmtBlock();\n    let result = new ASTStmtRepeat(times, body);\n    result.startPos = startPos;\n    result.endPos = body.endPos;\n    return result;\n  }\n\n  _parseStmtForeach() {\n    let startPos = this._currentToken.startPos;\n    this._match(T_FOREACH);\n    let index = this._parseLowerid();\n    this._match(T_IN);\n    let range = this._parseExpression();\n    let body = this._parseStmtBlock();\n    let result = new ASTStmtForeach(index, range, body);\n    result.startPos = startPos;\n    result.endPos = body.endPos;\n    return result;\n  }\n\n  _parseStmtWhile() {\n    let startPos = this._currentToken.startPos;\n    this._match(T_WHILE);\n    this._match(T_LPAREN);\n    let condition = this._parseExpression();\n    this._match(T_RPAREN);\n    let body = this._parseStmtBlock();\n    let result = new ASTStmtWhile(condition, body);\n    result.startPos = startPos;\n    result.endPos = body.endPos;\n    return result;\n  }\n\n  _parseStmtSwitch() {\n    let startPos = this._currentToken.startPos;\n    this._match(T_SWITCH);\n    this._match(T_LPAREN);\n    let subject = this._parseExpression();\n    this._match(T_RPAREN);\n    if (this._currentToken.tag === T_TO) {\n      this._match(T_TO);\n    }\n    this._match(T_LBRACE);\n    let branches = this._parseSwitchBranches();\n    let endPos = this._currentToken.startPos;\n    this._match(T_RBRACE);\n    let result = new ASTStmtSwitch(subject, branches);\n    result.startPos = startPos;\n    result.endPos = endPos;\n    return result;\n  }\n\n  _parseStmtLet() {\n    let startPos = this._currentToken.startPos;\n    this._match(T_LET);\n    let result;\n    if (this._currentToken.tag === T_LOWERID) {\n      result = this._parseStmtAssignVariable();\n    } else if (this._currentToken.tag === T_LPAREN) {\n      result = this._parseStmtAssignTuple();\n    } else {\n      fail(\n        this._currentToken.startPos, this._currentToken.endPos,\n        'expected-but-found', [\n          i18n('<alternative>')(\n            i18n('T_LOWERID'),\n            i18n('T_LPAREN')\n          ),\n          i18n(Symbol.keyfor(this._currentToken.tag))\n        ]\n      );\n    }\n    result.startPos = startPos;\n    return result;\n  }\n\n  _parseStmtAssignVariable() {\n    let variable = this._parseLowerid();\n    this._match(T_ASSIGN);\n    let value = this._parseExpression();\n    let result = new ASTStmtAssignVariable(variable, value);\n    result.startPos = variable.startPos;\n    result.endPos = value.endPos;\n    return result;\n  }\n\n  _parseStmtAssignTuple() {\n    let startPos = this._currentToken.startPos;\n    this._match(T_LPAREN);\n    let variables = this._parseLoweridSeq();\n    if (variables.length === 1) {\n      fail(\n        startPos, this._currentToken.endPos,\n        'assignment-tuple-cannot-be-singleton', []\n      );\n    }\n    this._match(T_RPAREN);\n    this._match(T_ASSIGN);\n    let value = this._parseExpression();\n    let result = new ASTStmtAssignTuple(variables, value);\n    result.startPos = startPos;\n    result.endPos = value.endPos;\n    return result;\n  }\n\n  _parseStmtProcedureCall() {\n    let procedureName = this._parseUpperid();\n    this._match(T_LPAREN);\n    let args = this._parseDelimitedSeq(\n                 T_RPAREN, T_COMMA,\n                 () => this._parseExpression()\n               );\n    let endPos = this._currentToken.startPos;\n    this._match(T_RPAREN);\n    let result = new ASTStmtProcedureCall(procedureName, args);\n    result.startPos = procedureName.startPos;\n    result.endPos = endPos;\n    return result;\n  }\n\n  /** Patterns **/\n\n  _parsePattern() {\n    switch (this._currentToken.tag) {\n      case T_UNDERSCORE:\n        return this._parsePatternWildcard();\n      case T_UPPERID:\n        return this._parsePatternStructure();\n      case T_LPAREN:\n        return this._parsePatternTuple();\n      case T_TIMEOUT:\n        return this._parsePatternTimeout();\n      default:\n        return fail(\n          this._currentToken.startPos, this._currentToken.endPos,\n          'expected-but-found', [\n            i18n('pattern'),\n            i18n(Symbol.keyFor(this._currentToken.tag))\n          ]\n        );\n    }\n  }\n\n  _parsePatternWildcard() {\n    let startPos = this._currentToken.startPos;\n    this._match(T_UNDERSCORE);\n    let result = new ASTPatternWildcard();\n    let endPos = startPos;\n    result.startPos = startPos;\n    result.endPos = endPos;\n    return result;\n  }\n\n  _parsePatternStructure() {\n    let startPos = this._currentToken.startPos;\n    let endPos = this._currentToken.startPos;\n    let constructor = this._parseUpperid();\n    let parameters;\n    if (this._currentToken.tag === T_LPAREN) {\n      this._match(T_LPAREN);\n      parameters = this._parseLoweridSeq();\n      endPos = this._currentToken.startPos;\n      this._match(T_RPAREN);\n    } else {\n      parameters = [];\n    }\n    let result = new ASTPatternStructure(constructor, parameters);\n    result.startPos = startPos;\n    result.endPos = endPos;\n    return result;\n  }\n\n  _parsePatternTuple() {\n    let startPos = this._currentToken.startPos;\n    this._match(T_LPAREN);\n    let parameters = this._parseLoweridSeq();\n    if (parameters.length === 1) {\n      fail(\n        startPos, this._currentToken.endPos,\n        'pattern-tuple-cannot-be-singleton', []\n      );\n    }\n    let endPos = this._currentToken.startPos;\n    this._match(T_RPAREN);\n    let result = new ASTPatternTuple(parameters);\n    result.startPos = startPos;\n    result.endPos = endPos;\n    return result;\n  }\n\n  _parsePatternTimeout() {\n    let startPos = this._currentToken.startPos;\n    this._match(T_TIMEOUT);\n    this._match(T_LPAREN);\n    let timeout = this._currentToken;\n    this._match(T_NUM);\n    let endPos = this._currentToken.startPos;\n    this._match(T_RPAREN);\n    let result = new ASTPatternTimeout(timeout);\n    result.startPos = startPos;\n    result.endPos = endPos;\n    return result;\n  }\n\n  /** Expressions **/\n\n  _parseExpression() {\n    return this._parseExprOperator(0);\n  }\n\n  /* Read an expression of the given level.\n   *\n   * If the list OPERATORS of precedence levels has N elements, then:\n   * - Expressions of level 0 are arbitrary expressions.\n   * - Expressions of level N are atomic expressions.\n   * - In general, expressions of level I involve operators\n   *   of levels I, I+1, ..., N-1,\n   *   and they can only include operators of the lower levels\n   *   by surrounding them in parentheses.\n   */\n  _parseExprOperator(level) {\n    if (level === OPERATORS.length) {\n      return this._parseExprAtom();\n    }\n    switch (OPERATORS[level].fixity) {\n      case Infix:\n        return this._parseExprOperatorInfix(level);\n      case InfixL:\n        return this._parseExprOperatorInfixL(level);\n      case InfixR:\n        return this._parseExprOperatorInfixR(level);\n      case Prefix:\n        return this._parseExprOperatorPrefix(level);\n      default:\n        throw Error('Invalid operator.');\n    }\n  }\n\n  _parseExprOperatorInfix(level) {\n    let left = this._parseExprOperator(level + 1);\n    if (OPERATORS[level].isOperator(this._currentToken)) {\n      let op = this._currentToken;\n      this._nextToken();\n      let right = this._parseExprOperator(level + 1);\n\n      /* Check that it is not used associatively */\n      if (OPERATORS[level].isOperator(this._currentToken)) {\n        fail(\n          this._currentToken.startPos, this._currentToken.endPos,\n          'operators-are-not-associative', [\n            i18n(Symbol.keyFor(op.tag)),\n            i18n(Symbol.keyFor(this._currentToken.tag))\n          ]\n        );\n      }\n\n      let result = new ASTExprFunctionCall(\n                     OPERATORS[level].functionName(op), [left, right]\n                   );\n      result.startPos = left.startPos;\n      result.endPos = right.endPos;\n      return result;\n    } else {\n      return left;\n    }\n  }\n\n  _parseExprOperatorInfixL(level) {\n    let result = this._parseExprOperator(level + 1);\n    while (OPERATORS[level].isOperator(this._currentToken)) {\n      let op = this._currentToken;\n      this._nextToken();\n      let right = this._parseExprOperator(level + 1);\n      let result2 = new ASTExprFunctionCall(\n                      OPERATORS[level].functionName(op), [result, right]\n                    );\n      result2.startPos = result.startPos;\n      result2.endPos = right.endPos;\n      result = result2;\n    }\n    return result;\n  }\n\n  _parseExprOperatorInfixR(level) {\n    let left = this._parseExprOperator(level + 1);\n    if (OPERATORS[level].isOperator(this._currentToken)) {\n      let op = this._currentToken;\n      this._nextToken();\n      let right = this._parseExprOperator(level); /* same level */\n      let result = new ASTExprFunctionCall(\n                      OPERATORS[level].functionName(op), [left, right]\n                    );\n      result.startPos = left.startPos;\n      result.endPos = right.endPos;\n      return result;\n    } else {\n      return left;\n    }\n  }\n\n  _parseExprOperatorPrefix(level) {\n    if (OPERATORS[level].isOperator(this._currentToken)) {\n      let op = this._currentToken;\n      this._nextToken();\n      let inner = this._parseExprOperator(level); /* same level */\n      let result = new ASTExprFunctionCall(\n                      OPERATORS[level].functionName(op), [inner]\n                    );\n      result.startPos = op.startPos;\n      result.endPos = inner.endPos;\n      return result;\n    } else {\n      return this._parseExprOperator(level + 1);\n    }\n  }\n\n  /* Parse an atomic expression.\n   * I.e. all the operators must be surrounded by parentheses */\n  _parseExprAtom() {\n    switch (this._currentToken.tag) {\n      case T_LOWERID:\n        return this._parseExprVariableOrFunctionCall();\n      case T_NUM:\n        return this._parseExprConstantNumber();\n      case T_STRING:\n        return this._parseExprConstantString();\n      case T_UPPERID:\n        return this._parseExprStructureOrStructureUpdate();\n      case T_LPAREN:\n        return this._parseExprTuple();\n      case T_LBRACK:\n        return this._parseExprListOrRange();\n      default:\n        return fail(\n          this._currentToken.startPos, this._currentToken.endPos,\n          'expected-but-found', [\n            i18n('expression'),\n            i18n(Symbol.keyFor(this._currentToken.tag))\n          ]\n        );\n    }\n  }\n\n  _parseExprVariableOrFunctionCall() {\n    let id = this._parseLowerid();\n    let result;\n    let endPos;\n    if (this._currentToken.tag === T_LPAREN) {\n      this._match(T_LPAREN);\n      let args = this._parseExpressionSeq(T_RPAREN);\n      result = new ASTExprFunctionCall(id, args);\n      endPos = this._currentToken.startPos;\n      this._match(T_RPAREN);\n    } else {\n      result = new ASTExprVariable(id);\n      endPos = id.endPos;\n    }\n    result.startPos = id.startPos;\n    result.endPos = endPos;\n    return result;\n  }\n\n  _parseExprConstantNumber() {\n    let number = this._currentToken;\n    this._match(T_NUM);\n    let result = new ASTExprConstantNumber(number);\n    result.startPos = number.startPos;\n    result.endPos = number.endPos;\n    return result;\n  }\n\n  _parseExprConstantString() {\n    let string = this._currentToken;\n    this._match(T_STRING);\n    let result = new ASTExprConstantString(string);\n    result.startPos = string.startPos;\n    result.endPos = string.endPos;\n    return result;\n  }\n\n  /*\n   * Parse any of the following constructions:\n   * (1) Structure with no arguments: \"Norte\"\n   * (2) Structure with no arguments and explicit parentheses: \"Nil()\"\n   * (3) Structure with arguments: \"Coord(x <- 1, y <- 2)\"\n   * (4) Update structure with arguments: \"Coord(expression | x <- 2)\"\n   *\n   * Deciding between (3) and (4) unfortunately cannot be done with one\n   * token of lookahead, so after reading the constructor and a left\n   * parenthesis we resort to the following workaround:\n   *\n   * - Parse an expression.\n   * - If the next token is GETS (\"<-\") we are in case (3).\n   *   We must then ensure that the expression is just a variable\n   *   and recover its name.\n   * - If the next token is PIPE (\"|\") we are in case (4), and we go on.\n   */\n  _parseExprStructureOrStructureUpdate() {\n    let constructorName = this._parseUpperid();\n    if (this._currentToken.tag !== T_LPAREN) {\n      /* Structure with no arguments, e.g. \"Norte\" */\n      let result = new ASTExprStructure(constructorName, []);\n      result.startPos = constructorName.startPos;\n      result.endPos = constructorName.endPos;\n      return result;\n    }\n    this._match(T_LPAREN);\n    if (this._currentToken.tag === T_RPAREN) {\n      /* Structure with no arguments with explicit parentheses,\n       * e.g. \"Nil()\" */\n      let result = new ASTExprStructure(constructorName, []);\n      let endPos = this._currentToken.startPos;\n      this._match(T_RPAREN);\n      result.startPos = constructorName.startPos;\n      result.endPos = endPos;\n      return result;\n    }\n    let subject = this._parseExpression();\n    switch (this._currentToken.tag) {\n      case T_GETS:\n        if (subject.tag !== N_ExprVariable) {\n          fail(\n            this._currentToken.startPos, this._currentToken.endPos,\n            'expected-but-found', [\n              i18n('T_PIPE'),\n              i18n('T_GETS')\n            ]\n          );\n        }\n        return this._parseStructure(constructorName, subject.variableName);\n      case T_PIPE:\n        return this._parseStructureUpdate(constructorName, subject);\n      case T_COMMA: case T_RPAREN:\n        /* Issue a specific error message to deal with a common\n         * programming error, namely calling a procedure name\n         * where an expression is expected. */\n        return fail(\n          constructorName.startPos, constructorName.endPos,\n          'expected-but-found', [\n            i18n('expression'),\n            i18n('procedure call')\n          ]\n        );\n      default:\n        let expected;\n        if (subject.tag === N_ExprVariable) {\n          expected = i18n('<alternative>')([\n                       i18n('T_GETS'),\n                       i18n('T_PIPE')\n                     ]);\n        } else {\n          expected = i18n('T_PIPE');\n        }\n        return fail(\n          constructorName.startPos, constructorName.endPos,\n          'expected-but-found', [\n            expected,\n            i18n(Symbol.keyFor(this._currentToken.tag))\n          ]\n        );\n    }\n  }\n\n  /* Parse a structure   A(x1 <- expr1, ..., xN <- exprN)\n   * where N >= 1,\n   * assuming that  \"A(x1\" has already been read.\n   *\n   * - constructorName and fieldName1 correspond to \"A\" and \"x1\"\n   *   respectively.\n   */\n  _parseStructure(constructorName, fieldName1) {\n    /* Read \"<- expr1\" */\n    this._match(T_GETS);\n    let value1 = this._parseExpression();\n    let fieldBinding1 = new ASTFieldBinding(fieldName1, value1);\n    fieldBinding1.startPos = fieldName1.startPos;\n    fieldBinding1.endPos = value1.endPos;\n    /* Read \"x2 <- expr2, ..., xN <- exprN\" (this might be empty) */\n    let fieldBindings = this._parseNonEmptyDelimitedSeq(\n                          T_RPAREN, T_COMMA, [fieldBinding1],\n                          () => this._parseFieldBinding()\n                        );\n    /* Read \")\" */\n    let endPos = this._currentToken.startPos;\n    this._match(T_RPAREN);\n    /* Return an ExprStructure node */\n    let result = new ASTExprStructure(constructorName, fieldBindings);\n    result.startPos = constructorName.startPos;\n    result.endPos = endPos;\n    return result;\n  }\n\n  /* Parse a structure update  A(e | x1 <- expr1, ..., xN <- exprN)\n   * where N >= 1,\n   * assuming that \"A(e\" has already been read.\n   *\n   * constructorName and original correspond to \"A\" and \"e\"\n   * respectively.\n   */\n  _parseStructureUpdate(constructorName, original) {\n    /* Read \"|\" */\n    this._match(T_PIPE);\n    /* Read \"x2 <- expr2, ..., xN <- exprN\" (this might be empty) */\n    let fieldBindings = this._parseDelimitedSeq(\n                          T_RPAREN, T_COMMA,\n                          () => this._parseFieldBinding()\n                        );\n    /* Read \")\" */\n    let endPos = this._currentToken.startPos;\n    this._match(T_RPAREN);\n    /* Return an ExprStructureUpdate node */\n    let result = new ASTExprStructureUpdate(\n                      constructorName, original, fieldBindings\n                 );\n    result.startPos = constructorName.startPos;\n    result.endPos = endPos;\n    return result;\n  }\n\n  /* Read a list\n   *   [expr1, ..., exprN]\n   * a range expression\n   *   [first .. last]\n   * or a range expression with step\n   *   [first, second .. last]\n   */\n  _parseExprListOrRange() {\n    let startPos = this._currentToken.startPos;\n    this._match(T_LBRACK);\n    if (this._currentToken.tag === T_RBRACK) {\n      return this._parseExprListRemainder(startPos, []);\n    }\n    let first = this._parseExpression();\n    switch (this._currentToken.tag) {\n      case T_RBRACK:\n        return this._parseExprListRemainder(startPos, [first]);\n      case T_RANGE:\n        return this._parseExprRange(startPos, first, null);\n      case T_COMMA:\n        this._match(T_COMMA);\n        let second = this._parseExpression();\n        switch (this._currentToken.tag) {\n          case T_RBRACK:\n          case T_COMMA:\n            return this._parseExprListRemainder(startPos, [first, second]);\n          case T_RANGE:\n            return this._parseExprRange(startPos, first, second);\n          default:\n            return fail(\n              this._currentToken.startPos, this._currentToken.endPos,\n              'expected-but-found', [\n                i18n('<alternative>')([\n                  i18n('T_COMMA'),\n                  i18n('T_RANGE'),\n                  i18n('T_RBRACK')\n                ]),\n                i18n(Symbol.keyFor(this._currentToken.tag))\n              ]\n            );\n        }\n      default:\n        return fail(\n          this._currentToken.startPos, this._currentToken.endPos,\n          'expected-but-found', [\n            i18n('<alternative>')([\n              i18n('T_COMMA'),\n              i18n('T_RANGE'),\n              i18n('T_RBRACK')\n            ]),\n            i18n(Symbol.keyFor(this._currentToken.tag))\n          ]\n        );\n    }\n  }\n\n  /* Read the end of a list \"[expr1, ..., exprN]\" assumming we have\n   * already read \"[expr1, ..., exprK\" up to some point K >= 1.\n   * - startPos is the position of \"[\"\n   * - prefix is the list of elements we have already read\n   */\n  _parseExprListRemainder(startPos, prefix) {\n    let elements = this._parseNonEmptyDelimitedSeq(\n                     T_RBRACK, T_COMMA, prefix,\n                     () => this._parseExpression()\n                   );\n    let endPos = this._currentToken.startPos;\n    this._match(T_RBRACK);\n    let result = new ASTExprList(elements);\n    result.startPos = startPos;\n    result.endPos = endPos;\n    return result;\n  }\n\n  /* Read a range \"[first..last]\" or \"[first,second..last]\"\n   * assumming we are left to read \"..last]\"\n   * - startPos is the position of \"[\".\n   * - second may be null */\n  _parseExprRange(startPos, first, second) {\n    this._match(T_RANGE);\n    let last = this._parseExpression();\n    let endPos = this._currentToken.startPos;\n    this._match(T_RBRACK);\n    let result = new ASTExprRange(first, second, last);\n    result.startPos = startPos;\n    result.endPos = endPos;\n    return result;\n  }\n\n  /* Read a list of expressions separated by commas and delimited\n   * by parentheses. If there is a single expression, return the\n   * expression itself. If there are 0 or >=2 expressions, return\n   * a tuple.\n   */\n  _parseExprTuple() {\n    let startPos = this._currentToken.startPos;\n    this._match(T_LPAREN);\n    let expressionList = this._parseExpressionSeq(T_RPAREN);\n    let endPos = this._currentToken.startPos;\n    this._match(T_RPAREN);\n\n    let result;\n    if (expressionList.length === 1) {\n      result = expressionList[0];\n    } else {\n      result = new ASTExprTuple(expressionList);\n    }\n    result.startPos = startPos;\n    result.endPos = endPos;\n    return result;\n  }\n\n  /** SwitchBranch **/\n\n  _parseSwitchBranches() {\n    let branches = [];\n    while (this._currentToken.tag !== T_RBRACE) {\n      branches.push(this._parseSwitchBranch());\n    }\n    return branches;\n  }\n\n  _parseSwitchBranch() {\n    let pattern = this._parsePattern();\n    this._match(T_ARROW);\n    let body = this._parseStmtBlock();\n    let result = new ASTSwitchBranch(pattern, body);\n    result.startPos = pattern.startPos;\n    result.endPos = body.endPos;\n    return result;\n  }\n\n  /** FieldBinding **/\n\n  _parseFieldBinding() {\n    let fieldName = this._parseLowerid();\n    this._match(T_GETS);\n    let value = this._parseExpression();\n    let result = new ASTFieldBinding(fieldName, value);\n    result.startPos = fieldName.startPos;\n    result.endPos = value.endPos;\n    return result;\n  }\n\n  /** Helpers **/\n\n  /* Advance to the next token */\n  _nextToken() {\n    this._currentToken = this._lexer.nextToken();\n  }\n\n  /* Check that the current token has the expected tag.\n   * Then advance to the next token. */\n  _match(tokenTag) {\n    if (this._currentToken.tag !== tokenTag) {\n      fail(\n        this._currentToken.startPos, this._currentToken.endPos,\n        'expected-but-found', [\n          i18n(Symbol.keyFor(tokenTag)),\n          i18n(Symbol.keyFor(this._currentToken.tag))\n        ]\n      );\n    }\n    this._nextToken();\n  }\n\n  /* Check that the current token has the expected tag.\n   * Then advance to the next token.\n   * Otherwise report that any of the alternatives in the tagList\n   * was expected.\n   */\n  _matchExpected(tokenTag, tagList) {\n    if (this._currentToken.tag !== tokenTag) {\n      fail(\n        this._currentToken.startPos, this._currentToken.endPos,\n        'expected-but-found', [\n          i18n('<alternative>')(\n            tagList.map(tag => i18n(Symbol.keyFor(tag)))\n          ),\n          i18n(Symbol.keyFor(this._currentToken.tag))\n        ]\n      );\n    }\n    this._nextToken();\n  }\n\n  /* Parse a delimited list:\n   *   rightDelimiter: token tag for the right delimiter\n   *   separator: token tag for the separator\n   *   parseElement: function that parses one element */\n  _parseDelimitedSeq(rightDelimiter, separator, parseElement) {\n    if (this._currentToken.tag === rightDelimiter) {\n      return []; /* Empty case */\n    }\n    let first = parseElement();\n    return this._parseNonEmptyDelimitedSeq(\n             rightDelimiter, separator, [first], parseElement\n           );\n  }\n\n  /* Parse a delimited list, assuming the first elements are already given.\n   *   rightDelimiter: token tag for the right delimiter\n   *   separator: token tag for the separator\n   *   prefix: non-empty list of all the first elements (already given)\n   *   parseElement: function that parses one element */\n  _parseNonEmptyDelimitedSeq(rightDelimiter, separator, prefix, parseElement) {\n    let list = prefix;\n    while (this._currentToken.tag === separator) {\n      this._match(separator);\n      list.push(parseElement());\n    }\n    if (this._currentToken.tag !== rightDelimiter) {\n      fail(\n        this._currentToken.startPos, this._currentToken.endPos,\n        'expected-but-found', [\n          i18n('<alternative>')([\n            i18n(Symbol.keyFor(separator)),\n            i18n(Symbol.keyFor(rightDelimiter))\n          ]),\n          i18n(Symbol.keyFor(this._currentToken.tag))\n        ]\n      );\n    }\n    return list;\n  }\n\n  _parseLowerid() {\n    let lowerid = this._currentToken;\n    this._match(T_LOWERID);\n    return lowerid;\n  }\n\n  _parseUpperid() {\n    let upperid = this._currentToken;\n    this._match(T_UPPERID);\n    return upperid;\n  }\n\n  _parseLoweridSeq() {\n    return this._parseDelimitedSeq(\n             T_RPAREN, T_COMMA, () => this._parseLowerid()\n           );\n  }\n\n  /* Parse a list of expressions delimited by the given right delimiter\n   * e.g. T_RPAREN or T_RBRACK, without consuming the delimiter. */\n  _parseExpressionSeq(rightDelimiter) {\n    return this._parseDelimitedSeq(\n             rightDelimiter, T_COMMA, () => this._parseExpression()\n           );\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/parser.js","import { i18n } from './i18n';\nimport { GbsWarning, GbsSyntaxError } from './exceptions';\nimport { MultifileReader } from './reader';\nimport {\n  Token, T_EOF, T_NUM, T_STRING, T_LOWERID, T_UPPERID,\n  /* Keywords */\n  T_PROGRAM, T_INTERACTIVE, T_PROCEDURE, T_FUNCTION, T_RETURN,\n  T_IF, T_THEN, T_ELSE, T_REPEAT, T_FOREACH, T_IN, T_WHILE,\n  T_SWITCH, T_TO, T_LET, T_NOT, T_DIV, T_MOD, T_TYPE,\n  T_IS, T_RECORD, T_VARIANT, T_CASE, T_FIELD, T_UNDERSCORE,\n  T_TIMEOUT,\n  /* Symbols */\n  T_LPAREN, T_RPAREN, T_LBRACE, T_RBRACE, T_LBRACK, T_RBRACK, T_COMMA,\n  T_SEMICOLON, T_RANGE, T_GETS, T_PIPE, T_ARROW, T_ASSIGN,\n  T_EQ, T_NE, T_LE, T_GE, T_LT, T_GT, T_AND, T_OR, T_CONCAT, T_PLUS,\n  T_MINUS, T_TIMES, T_POW\n} from './token';\n\nfunction isWhitespace(chr) {\n  return chr === ' '\n      || chr === '\\t'\n      || chr === '\\r'\n      || chr === '\\n';\n}\n\nfunction isDigit(chr) {\n  return '0' <= chr && chr <= '9';\n}\n\n/* We define a character to be alphabetic if it has two distinct forms:\n * an uppercase form and a lowercase form.\n *\n * This accepts alphabetic Unicode characters but rejects numbers and symbols.\n */\nfunction isAlpha(chr) {\n  return chr.toUpperCase(chr) !== chr.toLowerCase();\n}\n\n/* An uppercase character is an alphabetic character that coincides with\n * its uppercase form */\nfunction isUpper(chr) {\n  return isAlpha(chr) && chr.toUpperCase() === chr;\n}\n\n/* A lowercase character is an alphabetic character that coincides with\n * its lowercase form */\nfunction isLower(chr) {\n  return isAlpha(chr) && chr.toLowerCase() === chr;\n}\n\nfunction isIdent(chr) {\n  return isAlpha(chr) || isDigit(chr) || chr === '_' || chr === \"'\";\n}\n\nlet KEYWORDS = {\n  'program': T_PROGRAM,\n  'interactive': T_INTERACTIVE,\n  'procedure': T_PROCEDURE,\n  'function': T_FUNCTION,\n  'return': T_RETURN,\n  /* Control structures */\n  'if': T_IF,\n  'then': T_THEN,\n  'else': T_ELSE,\n  'repeat': T_REPEAT,\n  'foreach': T_FOREACH,\n  'in': T_IN,\n  'while': T_WHILE,\n  'switch': T_SWITCH,\n  'match': T_SWITCH,\n  'to': T_TO,\n  /* Assignment */\n  'let': T_LET,\n  /* Operators */\n  'not': T_NOT,\n  'div': T_DIV,\n  'mod': T_MOD,\n  /* Records/variants */\n  'type': T_TYPE,\n  'is': T_IS,\n  'record': T_RECORD,\n  'variant': T_VARIANT,\n  'case': T_CASE,\n  'field': T_FIELD,\n  /* Default case in a switch/match */\n  '_': T_UNDERSCORE,\n};\n\n/* Pattern for timeouts in an interactive program */\nKEYWORDS[i18n('CONS:TIMEOUT')] = T_TIMEOUT;\n\n/* Note: the order is relevant so that the 'maximal munch' rule applies. */\nconst SYMBOLS = [\n  /* Various delimiters */\n  ['(', T_LPAREN],\n  [')', T_RPAREN],\n  ['{', T_LBRACE],\n  ['}', T_RBRACE],\n  ['[', T_LBRACK],    // For lists and ranges\n  [']', T_RBRACK],\n  [',', T_COMMA],\n  [';', T_SEMICOLON],\n  /* Range operator */\n  ['..', T_RANGE],\n  /* Assignment */\n  [':=', T_ASSIGN],\n  /* Logical operators */\n  ['&&', T_AND],\n  ['||', T_OR],\n  /* Fields */\n  ['<-', T_GETS],     // Field initializer, e.g. Coord(x <- 1, y <- 2)\n  ['|', T_PIPE],      // Field update, e.g. Coord(c | x <- 2)\n  /* Pattern matching */\n  ['->', T_ARROW],    // For the branches of a switch\n  /* Relational operators */\n  ['==', T_EQ],\n  ['/=', T_NE],\n  ['<=', T_LE],\n  ['>=', T_GE],\n  ['<', T_LT],\n  ['>', T_GT],\n  /* Functions */\n  ['++', T_CONCAT],\n  ['+', T_PLUS],\n  ['-', T_MINUS],\n  ['*', T_TIMES],\n  ['^', T_POW]\n];\n\nfunction leadingZeroes(string) {\n  return string.length >= 0 && string[0] === '0';\n}\n\nfunction fail(startPos, endPos, reason, args) {\n  throw new GbsSyntaxError(startPos, endPos, reason, args);\n}\n\n/* An instance of Lexer scans source code for tokens.\n * Example:\n *\n *     let tok = new Lexer('if (a)');\n *     tok.nextToken(); // ~~> new Token(T_IF, null, ...)\n *     tok.nextToken(); // ~~> new Token(T_LPAREN, null, ...)\n *     tok.nextToken(); // ~~> new Token(T_LOWERID, 'a', ...)\n *     tok.nextToken(); // ~~> new Token(T_RPAREN, null, ...)\n *     tok.nextToken(); // ~~> new Token(T_EOF, null, ...)\n *\n * The 'input' parameter is either a string or a mapping\n * from filenames to strings.\n */\nexport class Lexer {\n\n  constructor(input) {\n    this._multifileReader = new MultifileReader(input);\n    this._reader = this._multifileReader.readCurrentFile();\n    this._warnings = [];\n  }\n\n  /* Return the next token from the input */\n  nextToken() {\n    if (!this._findNextToken()) {\n      return new Token(T_EOF, null, this._reader, this._reader);\n    }\n    if (isDigit(this._reader.peek())) {\n      let startPos = this._reader;\n      let value = this._readStringWhile(isDigit);\n      let endPos = this._reader;\n      if (leadingZeroes(value) && value.length > 1) {\n        return fail(\n          startPos, endPos,\n          'numeric-constant-should-not-have-leading-zeroes', []\n        );\n      }\n      return new Token(T_NUM, value, startPos, endPos);\n    } else if (isIdent(this._reader.peek())) {\n      let startPos = this._reader;\n      let value = this._readStringWhile(isIdent);\n      let endPos = this._reader;\n      if (value in KEYWORDS) {\n        return new Token(KEYWORDS[value], value, startPos, endPos);\n      } else if (isUpper(value[0])) {\n        return new Token(T_UPPERID, value, startPos, endPos);\n      } else if (isLower(value[0])) {\n        return new Token(T_LOWERID, value, startPos, endPos);\n      } else {\n        return fail(\n          startPos, endPos,\n          'identifier-must-start-with-alphabetic-character', []\n        );\n      }\n    } else if (this._reader.peek() === '\"') {\n      return this._readStringConstant();\n    } else {\n      return this._readSymbol();\n    }\n  }\n\n  /* When tokenization is done, this function returns the list of all\n   * the warnings collected during tokenization */\n  warnings() {\n    return this._warnings;\n  }\n\n  /* Skip whitespace and advance through files until the start of the next\n   * token is found. Return false if EOF is found. */\n  _findNextToken() {\n    for (;;) {\n      this._ignoreWhitespaceAndComments();\n      if (!this._reader.eof()) {\n        break;\n      }\n      if (this._multifileReader.moreFiles()) {\n        this._multifileReader.nextFile();\n        this._reader = this._multifileReader.readCurrentFile();\n      } else {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /* Read a string while the given condition holds for the current\n   * character */\n  _readStringWhile(condition) {\n    let result = [];\n    while (!this._reader.eof()) {\n      if (!condition(this._reader.peek())) {\n        break;\n      }\n      result.push(this._reader.peek());\n      this._reader = this._reader.consumeCharacter();\n    }\n    return result.join('');\n  }\n\n  /* Reads a quote-delimited string constant.\n   * Escapes are recognized. */\n  _readStringConstant() {\n    let startPos = this._reader;\n    let result = [];\n    this._reader = this._reader.consumeCharacter();\n    while (!this._reader.eof()) {\n      let c = this._reader.peek();\n      if (c === '\"') {\n        this._reader = this._reader.consumeCharacter();\n        return new Token(T_STRING, result.join(''), startPos, this._reader);\n      } else if (c === '\\\\') {\n        this._reader = this._reader.consumeCharacter();\n        if (this._reader.eof()) {\n          break;\n        }\n        let c2 = this._reader.peek();\n        this._reader = this._reader.consumeCharacter();\n        switch (c2) {\n          case 'a':\n            result.push('\\u0007');\n            break;\n          case 'b':\n            result.push('\\u0008');\n            break;\n          case 'f':\n            result.push('\\u000c');\n            break;\n          case 'n':\n            result.push('\\u000a');\n            break;\n          case 'r':\n            result.push('\\u000d');\n            break;\n          case 't':\n            result.push('\\u0009');\n            break;\n          case 'v':\n            result.push('\\u000b');\n            break;\n          default:\n            result.push(c2);\n            break;\n        }\n      } else {\n        result.push(c);\n        this._reader = this._reader.consumeCharacter();\n      }\n    }\n    return fail(startPos, this._reader, 'unclosed-string-constant', []);\n  }\n\n  /* Read a symbol */\n  _readSymbol() {\n    for (let [symbol, tag] of SYMBOLS) {\n      if (this._reader.startsWith(symbol)) {\n        let startPos = this._reader;\n        this._reader = this._reader.consumeString(symbol);\n        let endPos = this._reader;\n        return new Token(tag, symbol, startPos, endPos);\n      }\n    }\n    return fail(\n      this._reader, this._reader,\n      'unknown-token', [this._reader.peek()]\n    );\n  }\n\n  _ignoreWhitespaceAndComments() {\n    while (this._ignoreWhitespace() || this._ignoreComments()) {\n      /* continue */\n    }\n  }\n\n  _ignoreWhitespace() {\n    if (!this._reader.eof() && isWhitespace(this._reader.peek())) {\n      this._reader = this._reader.consumeCharacter();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /* Skips comments and pragmas, returns false if there are no comments */\n  _ignoreComments() {\n    if (this._startSingleLineComment()) {\n      this._ignoreSingleLineComment();\n      return true;\n    } else if (this._reader.startsWith('/*@')) {\n      let startPos = this._reader;\n      this._evaluatePragma(startPos,\n                           this._readInvisiblePragma('/*', '*/', '@'));\n      return true;\n    } else if (this._reader.startsWith('{-')) {\n      this._ignoreMultilineComment('{-', '-}');\n      return true;\n    } else if (this._reader.startsWith('/*')) {\n      this._ignoreMultilineComment('/*', '*/');\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /* Returns true if a single-line comment starts here */\n  _startSingleLineComment() {\n    return this._reader.startsWith('--')\n        || this._reader.startsWith('//')\n        || this._reader.startsWith('#');\n  }\n\n  /* Skips a single-line comment */\n  _ignoreSingleLineComment() {\n    while (!this._reader.eof()) {\n      this._reader = this._reader.consumeCharacter();\n      if (this._reader.peek() === '\\n') {\n        break;\n      }\n    }\n  }\n\n  /* Skips a multiline comment with the given left/right delimiters.\n   * Multi-line comments may be nested. */\n  _ignoreMultilineComment(left, right) {\n    let nesting = 0;\n    let startPos = this._reader;\n    while (!this._reader.eof()) {\n      if (this._reader.startsWith(left)) {\n        this._reader = this._reader.consumeString(left);\n        nesting++;\n      } else if (this._reader.startsWith(right)) {\n        this._reader = this._reader.consumeString(right);\n        nesting--;\n        if (nesting === 0) {\n          return;\n        }\n      } else {\n        this._reader = this._reader.consumeCharacter();\n      }\n    }\n    fail(\n      startPos, this._reader,\n      'unclosed-multiline-comment', []\n    );\n  }\n\n  /* Read a pragma. A pragma is a comment delimited by the\n   * given left   / *\n   * and right    * /\n   * comment delimiters.\n   * It has N >= 0 parts delimited by the pragma delimiter   @\n   *   @part1@part2@...@partN@\n   */\n  _readInvisiblePragma(left, right, pragmaDelim) {\n    let pragma = [];\n    let startPos = this._reader;\n    this._reader = this._reader.consumeInvisibleString(left);\n    this._reader = this._reader.consumeInvisibleString(pragmaDelim);\n    while (!this._reader.eof()) {\n      pragma.push(this._readInvisibleStringUntilDelimiter(pragmaDelim));\n      this._reader = this._reader.consumeInvisibleString(pragmaDelim);\n      if (this._reader.startsWith(right)) {\n        this._reader = this._reader.consumeInvisibleString(right);\n        return pragma;\n      }\n    }\n    return fail(\n      startPos, this._reader,\n      'unclosed-multiline-comment', []\n    );\n  }\n\n  /* Read an invisible string until the given delimiter is found */\n  _readInvisibleStringUntilDelimiter(delimiter) {\n    let startPos = this._reader;\n    let result = [];\n    while (!this._reader.eof()) {\n      if (this._reader.peek() === delimiter) {\n        return result.join('');\n      }\n      result.push(this._reader.peek());\n      this._reader = this._reader.consumeInvisibleCharacter();\n    }\n    return fail(\n      startPos, this._reader,\n      'unclosed-multiline-comment', []\n    );\n  }\n\n  _evaluatePragma(startPos, pragma) {\n    if (pragma.length === 0) {\n      this._emitWarning(startPos, this._reader, 'empty-pragma', []);\n    } else if (pragma[0] === 'BEGIN_REGION') {\n      let region = pragma[1];\n      this._reader = this._reader.beginRegion(region);\n    } else if (pragma[0] === 'END_REGION') {\n      this._reader = this._reader.endRegion();\n    } else {\n      this._emitWarning(startPos, this._reader, 'unknown-pragma', [pragma[0]]);\n    }\n  }\n\n  _emitWarning(startPos, endPos, reason, args) {\n    this._warnings.push(new GbsWarning(startPos, endPos, reason, args));\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/lexer.js","\nimport {\n  N_Main,\n  /* Definitions */\n  N_DefProgram,\n  N_DefInteractiveProgram,\n  N_DefProcedure,\n  N_DefFunction,\n  N_DefType,\n  /* Statements */\n  N_StmtBlock,\n  N_StmtReturn,\n  N_StmtIf,\n  N_StmtRepeat,\n  N_StmtForeach,\n  N_StmtWhile,\n  N_StmtSwitch,\n  N_StmtAssignVariable,\n  N_StmtAssignTuple,\n  N_StmtProcedureCall,\n  /* Patterns */\n  N_PatternWildcard,\n  N_PatternStructure,\n  N_PatternTuple,\n  N_PatternTimeout,\n  /* Expressions */\n  N_ExprVariable,\n  N_ExprConstantNumber,\n  N_ExprConstantString,\n  N_ExprList,\n  N_ExprRange,\n  N_ExprTuple,\n  N_ExprStructure,\n  N_ExprStructureUpdate,\n  N_ExprFunctionCall,\n  /* SwitchBranch: pattern -> body */\n  N_SwitchBranch,\n  /* FieldValue: field <- value */\n  N_FieldValue,\n  /* ConstructorDeclaration */\n  N_ConstructorDeclaration,\n} from './ast';\nimport { LocalParameter, LocalIndex, LocalVariable } from './symtable';\nimport { GbsSyntaxError } from './exceptions';\nimport { i18n } from './i18n';\n\nfunction isBlockWithReturn(stmt) {\n  return stmt.tag === N_StmtBlock\n      && stmt.statements.length > 0\n      && stmt.statements.slice(-1)[0].tag === N_StmtReturn;\n}\n\nfunction fail(startPos, endPos, reason, args) {\n  throw new GbsSyntaxError(startPos, endPos, reason, args);\n}\n\n/* A semantic analyzer receives\n *   a symbol table (instance of SymbolTable)\n *   an abstract syntax tree (the output of a parser)\n *\n * Then:\n *\n * - It performs semantic checks (linting) to ensure that the\n *   program is well-formed.\n *\n * - It builds a symbol table with information on global identifiers\n *   such as procedures, functions, types, constructors, and fields.\n *\n * - The semantic analysis is structured as a recursive visit over the\n *   AST.\n *\n * We assume that the AST is the valid output of a parser.\n */\nexport class Linter {\n\n  constructor(symtable) {\n    this._symtable = symtable;\n\n    /* All checks performed by the linter have an entry in this dictionary.\n     * The value of a check indicates whether it is enabled (true) or\n     * disabled (false).\n     *\n     * If a check is disabled, it does not produce a syntax error.\n     */\n    this._enabledLinterChecks = {\n      'source-should-have-a-program-definition': true,\n      'procedure-should-not-have-return': true,\n      'function-should-have-return': true,\n      'return-statement-not-allowed-here': true,\n      'wildcard-pattern-should-be-last': true,\n      'structure-pattern-repeats-constructor': true,\n      'structure-pattern-repeats-tuple-arity': true,\n      'structure-pattern-repeats-timeout': true,\n      'pattern-does-not-match-type': true,\n      'patterns-in-interactive-program-must-be-events': true,\n      'patterns-in-switch-must-not-be-events': true,\n      'repeated-variable-in-tuple-assignment': true,\n      'constructor-used-as-procedure': true,\n      'undefined-procedure': true,\n      'procedure-arity-mismatch': true,\n      'structure-pattern-arity-mismatch': true,\n      'structure-construction-repeated-field': true,\n      'structure-construction-invalid-field': true,\n      'structure-construction-missing-field': true,\n      'structure-construction-cannot-be-an-event': true,\n      'undefined-function': true,\n      'function-arity-mismatch': true,\n      'type-used-as-constructor': true,\n      'procedure-used-as-constructor': true,\n      'undeclared-constructor': true,\n    };\n  }\n\n  lint(ast) {\n    this._lintMain(ast);\n    return this._symtable;\n  }\n\n  enableCheck(linterCheckId, enabled) {\n    if (!(linterCheckId in this._enabledLinterChecks)) {\n      throw Error('Linter check \"' + linterCheckId + '\" does not exist.');\n    }\n    this._enabledLinterChecks[linterCheckId] = enabled;\n  }\n\n  _lintCheck(startPos, endPos, reason, args) {\n    if (this._enabledLinterChecks[reason]) {\n      fail(startPos, endPos, reason, args);\n    }\n  }\n\n  _lintMain(ast) {\n    /* Collect all definitions into the symbol table.\n     * This should be done all together, before linting individual\n     * definitions, so all the names of types, constructors, fields, etc.\n     * are already known when checking statements and expressions. */\n    for (let definition of ast.definitions) {\n      this._addDefinitionToSymbolTable(definition);\n    }\n\n    /* The source should either be empty or have exactly one program */\n    if (ast.definitions.length > 0 && this._symtable.program === null) {\n      this._lintCheck(\n        ast.startPos, ast.endPos,\n        'source-should-have-a-program-definition', []\n      );\n    }\n\n    /* Lint individual definitions */\n    for (let definition of ast.definitions) {\n      this._lintDefinition(definition);\n    }\n  }\n\n  _addDefinitionToSymbolTable(definition) {\n    switch (definition.tag) {\n      case N_DefProgram:\n        return this._symtable.defProgram(definition);\n      case N_DefInteractiveProgram:\n        return this._symtable.defInteractiveProgram(definition);\n      case N_DefProcedure:\n        return this._symtable.defProcedure(definition);\n      case N_DefFunction:\n        return this._symtable.defFunction(definition);\n      case N_DefType:\n        return this._symtable.defType(definition);\n      default:\n        throw Error('Unknown definition: ' + Symbol.keyFor(definition.tag));\n    }\n  }\n\n  /** Definitions **/\n\n  _lintDefinition(definition) {\n    switch (definition.tag) {\n      case N_DefProgram:\n        return this._lintDefProgram(definition);\n      case N_DefInteractiveProgram:\n        return this._lintDefInteractiveProgram(definition);\n      case N_DefProcedure:\n        return this._lintDefProcedure(definition);\n      case N_DefFunction:\n        return this._lintDefFunction(definition);\n      case N_DefType:\n        return this._lintDefType(definition);\n      default:\n        throw Error(\n                'Linter: Definition not implemented: '\n              + Symbol.keyFor(definition.tag)\n              );\n    }\n  }\n\n  _lintDefProgram(definition) {\n    /* Lint body */\n    this._lintStmtBlock(definition.body, true /* allowReturn */);\n\n    /* Remove all local names */\n    this._symtable.exitScope();\n  }\n\n  _lintDefInteractiveProgram(definition) {\n    /* Lint all branches */\n    this._lintSwitchBranches(\n      definition.branches, true /* isInteractiveProgram */\n    );\n  }\n\n  _lintDefProcedure(definition) {\n    /* Check that it does not have a return statement */\n    if (isBlockWithReturn(definition.body)) {\n      this._lintCheck(\n        definition.startPos, definition.endPos,\n        'procedure-should-not-have-return', [definition.name.value]\n      );\n    }\n\n    /* Add parameters as local names */\n    for (let parameter of definition.parameters) {\n      this._symtable.addNewLocalName(parameter, LocalParameter);\n    }\n\n    /* Lint body */\n    this._lintStmtBlock(definition.body, false /* !allowReturn */);\n\n    /* Remove all local names */\n    this._symtable.exitScope();\n  }\n\n  _lintDefFunction(definition) {\n    /* Check that it has a return statement */\n    if (!isBlockWithReturn(definition.body)) {\n      this._lintCheck(\n        definition.startPos, definition.endPos,\n        'function-should-have-return', [definition.name.value]\n      );\n    }\n\n    /* Add parameters as local names */\n    for (let parameter of definition.parameters) {\n      this._symtable.addNewLocalName(parameter, LocalParameter);\n    }\n\n    /* Lint body */\n    this._lintStmtBlock(definition.body, true /* allowReturn */);\n\n    /* Remove all local names */\n    this._symtable.exitScope();\n  }\n\n  _lintDefType(definition) {\n    /* No restrictions */\n  }\n\n  /** Statements **/\n\n  _lintStatement(statement) {\n    switch (statement.tag) {\n      case N_StmtBlock:\n        /* Do not allow return in nested blocks */\n        return this._lintStmtBlock(statement, false /* !allowReturn */);\n      case N_StmtReturn:\n        return this._lintStmtReturn(statement);\n      case N_StmtIf:\n        return this._lintStmtIf(statement);\n      case N_StmtRepeat:\n        return this._lintStmtRepeat(statement);\n      case N_StmtForeach:\n        return this._lintStmtForeach(statement);\n      case N_StmtWhile:\n        return this._lintStmtWhile(statement);\n      case N_StmtSwitch:\n        return this._lintStmtSwitch(statement);\n      case N_StmtAssignVariable:\n        return this._lintStmtAssignVariable(statement);\n      case N_StmtAssignTuple:\n        return this._lintStmtAssignTuple(statement);\n      case N_StmtProcedureCall:\n        return this._lintStmtProcedureCall(statement);\n      default:\n        throw Error(\n                'Linter: Statement not implemented: '\n              + Symbol.keyFor(statement.tag)\n              );\n    }\n  }\n\n  _lintStmtBlock(block, allowReturn) {\n    let i = 0;\n    for (let statement of block.statements) {\n      let returnAllowed = allowReturn && i === block.statements.length - 1;\n      if (!returnAllowed && statement.tag === N_StmtReturn) {\n        this._lintCheck(\n          statement.startPos, statement.endPos,\n          'return-statement-not-allowed-here', []\n        );\n      }\n      this._lintStatement(statement);\n      i++;\n    }\n  }\n\n  _lintStmtReturn(statement) {\n    this._lintExpression(statement.result);\n  }\n\n  _lintStmtIf(statement) {\n    this._lintExpression(statement.condition);\n    this._lintStatement(statement.thenBlock);\n    if (statement.elseBlock !== null) {\n      this._lintStatement(statement.elseBlock);\n    }\n  }\n\n  _lintStmtRepeat(statement) {\n    this._lintExpression(statement.times);\n    this._lintStatement(statement.body);\n  }\n\n  _lintStmtForeach(statement) {\n    this._lintExpression(statement.range);\n    this._symtable.addNewLocalName(statement.index, LocalIndex);\n    this._lintStatement(statement.body);\n    this._symtable.removeLocalName(statement.index);\n  }\n\n  _lintStmtWhile(statement) {\n    this._lintExpression(statement.condition);\n    this._lintStatement(statement.body);\n  }\n\n  _lintStmtSwitch(statement) {\n    this._lintExpression(statement.subject);\n    this._lintSwitchBranches(\n      statement.branches, false /* !isInteractiveProgram */\n    );\n  }\n\n  _lintSwitchBranches(branches, isInteractiveProgram) {\n    /* Check that each pattern is well-formed */\n    for (let branch of branches) {\n      this._lintPattern(branch.pattern);\n    }\n\n    this._switchBranchesCheckWildcard(branches);\n    this._switchBranchesCheckNoRepeats(branches);\n    this._switchBranchesCheckCompatible(branches);\n    if (isInteractiveProgram) {\n      this._switchBranchesCheckTypeEvent(branches);\n    } else {\n      this._switchBranchesCheckTypeNotEvent(branches);\n    }\n\n    /* Lint recursively each branch */\n    for (let branch of branches) {\n      this._lintSwitchBranchBody(branch);\n    }\n  }\n\n  /* Check that there is at most one wildcard at the end */\n  _switchBranchesCheckWildcard(branches) {\n    let i = 0;\n    const n = branches.length;\n    for (let branch of branches) {\n      if (branch.pattern.tag === N_PatternWildcard && i !== n - 1) {\n\n        this._lintCheck(\n          branch.pattern.startPos, branch.pattern.endPos,\n          'wildcard-pattern-should-be-last', []\n        );\n      }\n      i++;\n    }\n  }\n\n  /* Check that there are no repeated constructors in a sequence\n   * of branches. */\n  _switchBranchesCheckNoRepeats(branches) {\n    let coveredConstructors = {};\n    let coveredTuples = {};\n    let coveredTimeout = false;\n    for (let branch of branches) {\n      switch (branch.pattern.tag) {\n        case N_PatternStructure:\n          let constructorName = branch.pattern.constructorName.value;\n          if (constructorName in coveredConstructors) {\n            this._lintCheck(\n              branch.pattern.startPos, branch.pattern.endPos,\n              'structure-pattern-repeats-constructor', [constructorName]\n            );\n          }\n          coveredConstructors[constructorName] = true;\n          break;\n        case N_PatternTuple:\n          let arity = branch.pattern.parameters.length;\n          if (arity in coveredTuples) {\n            this._lintCheck(\n              branch.pattern.startPos, branch.pattern.endPos,\n              'structure-pattern-repeats-tuple-arity', [arity]\n            );\n          }\n          coveredTuples[arity] = true;\n          break;\n        case N_PatternTimeout:\n          if (coveredTimeout) {\n            this._lintCheck(\n              branch.pattern.startPos, branch.pattern.endPos,\n              'structure-pattern-repeats-timeout', []\n            );\n          }\n          coveredTimeout = true;\n          break;\n      }\n    }\n  }\n\n  /* Check that constructors are compatible,\n   * i.e. that they belong to the same type */\n  _switchBranchesCheckCompatible(branches) {\n    let expectedType = null;\n    for (let branch of branches) {\n      let patternType = this._patternType(branch.pattern);\n      if (expectedType === null) {\n        expectedType = patternType;\n      } else if (patternType !== null && expectedType !== patternType) {\n        this._lintCheck(\n          branch.pattern.startPos, branch.pattern.endPos,\n          'pattern-does-not-match-type', [\n            i18n('<pattern-type>')(expectedType),\n            i18n('<pattern-type>')(patternType)\n          ]\n        );\n      }\n    }\n  }\n\n  /* Check that there are patterns are of type Event */\n  _switchBranchesCheckTypeEvent(branches) {\n    for (let branch of branches) {\n      let patternType = this._patternType(branch.pattern);\n      if (patternType !== null && patternType !== i18n('TYPE:Event')) {\n        this._lintCheck(\n          branch.pattern.startPos, branch.pattern.endPos,\n          'patterns-in-interactive-program-must-be-events', []\n        );\n      }\n    }\n  }\n\n  /* Check that there are no patterns of type Event */\n  _switchBranchesCheckTypeNotEvent(branches) {\n    for (let branch of branches) {\n      let patternType = this._patternType(branch.pattern);\n      if (patternType === i18n('TYPE:Event')) {\n        this._lintCheck(\n          branch.pattern.startPos, branch.pattern.endPos,\n          'patterns-in-switch-must-not-be-events', []\n        );\n      }\n    }\n  }\n\n  /* Recursively lint the body of each branch. Locally bind parameters. */\n  _lintSwitchBranchBody(branch) {\n    for (let parameter of branch.pattern.parameters) {\n      this._symtable.addNewLocalName(parameter, LocalParameter);\n    }\n    this._lintStatement(branch.body);\n    for (let parameter of branch.pattern.parameters) {\n      this._symtable.removeLocalName(parameter);\n    }\n  }\n\n  /* Return a description of the type of a pattern */\n  _patternType(pattern) {\n    switch (pattern.tag) {\n      case N_PatternWildcard:\n        return null;\n      case N_PatternStructure:\n        return this._symtable.constructorType(pattern.constructorName.value);\n      case N_PatternTuple:\n        return '_TUPLE_' + pattern.parameters.length.toString();\n      case N_PatternTimeout:\n        return i18n('TYPE:Event');\n      default:\n        throw Error(\n                'Linter: pattern \"'\n              + Symbol.keyFor(pattern.tag)\n              + '\" not implemented.'\n              );\n    }\n  }\n\n  _lintStmtAssignVariable(statement) {\n    this._symtable.setLocalName(statement.variable, LocalVariable);\n    this._lintExpression(statement.value);\n  }\n\n  _lintStmtAssignTuple(statement) {\n    let variables = {};\n    for (let variable of statement.variables) {\n      this._symtable.setLocalName(variable, LocalVariable);\n      if (variable.value in variables) {\n        this._lintCheck(\n          variable.startPos, variable.endPos,\n          'repeated-variable-in-tuple-assignment', [variable.value]\n        );\n      }\n      variables[variable.value] = true;\n    }\n    this._lintExpression(statement.value);\n  }\n\n  _lintStmtProcedureCall(statement) {\n    let name = statement.procedureName.value;\n\n    /* Check that it is a procedure */\n    if (!this._symtable.isProcedure(name)) {\n      if (this._symtable.isConstructor(name)) {\n        this._lintCheck(\n          statement.startPos, statement.endPos,\n          'constructor-used-as-procedure', [\n            name,\n            this._symtable.constructorType(name)\n          ]\n        );\n      } else {\n        this._lintCheck(\n          statement.startPos, statement.endPos,\n          'undefined-procedure', [name]\n        );\n      }\n    }\n\n    /* Check that the number of argument coincides */\n    let expected = this._symtable.procedureParameters(name).length;\n    let received = statement.args.length;\n    if (expected !== received) {\n      this._lintCheck(\n        statement.startPos, statement.endPos,\n        'procedure-arity-mismatch', [\n          name,\n          expected,\n          received\n        ]\n      );\n    }\n\n    /* Check all the arguments */\n    for (let argument of statement.args) {\n      this._lintExpression(argument);\n    }\n  }\n\n  /** Patterns **/\n\n  _lintPattern(pattern) {\n    switch (pattern.tag) {\n      case N_PatternWildcard:\n        return this._lintPatternWildcard(pattern);\n      case N_PatternStructure:\n        return this._lintPatternStructure(pattern);\n      case N_PatternTuple:\n        return this._lintPatternTuple(pattern);\n      case N_PatternTimeout:\n        return this._lintPatternTimeout(pattern);\n      default:\n        throw Error(\n                'Linter: pattern \"'\n               + Symbol.keyFor(pattern.tag)\n               + '\" not implemented.'\n              );\n    }\n  }\n\n  _lintPatternWildcard(pattern) {\n    /* No restrictions */\n  }\n\n  _lintPatternStructure(pattern) {\n    let name = pattern.constructorName.value;\n\n    /* Check that the constructor exists */\n    if (!this._symtable.isConstructor(name)) {\n      this._failExpectedConstructorButGot(    // throws\n          pattern.startPos, pattern.endPos, name\n      );\n      return;\n    }\n\n    /* Check that the number of parameters match.\n     * Note: constructor patterns with 0 arguments are always allowed.\n     */\n    let expected = this._symtable.constructorFields(name).length;\n    let received = pattern.parameters.length;\n    if (received > 0 && expected !== received) {\n      this._lintCheck(\n        pattern.startPos, pattern.endPos,\n        'structure-pattern-arity-mismatch', [\n          name,\n          expected,\n          received\n        ]\n      );\n    }\n  }\n\n  _lintPatternTuple(pattern) {\n    /* No restrictions */\n  }\n\n  _lintPatternTimeout(pattern) {\n    /* No restrictions */\n  }\n\n  /** Expressions **/\n\n  _lintExpression(expression) {\n    switch (expression.tag) {\n      case N_ExprVariable:\n        return this._lintExprVariable(expression);\n      case N_ExprConstantNumber:\n        return this._lintExprConstantNumber(expression);\n      case N_ExprConstantString:\n        return this._lintExprConstantString(expression);\n      case N_ExprList:\n        return this._lintExprList(expression);\n      case N_ExprRange:\n        return this._lintExprRange(expression);\n      case N_ExprTuple:\n        return this._lintExprTuple(expression);\n      case N_ExprStructure:\n        return this._lintExprStructure(expression);\n      case N_ExprStructureUpdate:\n        return this._lintExprStructureUpdate(expression);\n      case N_ExprFunctionCall:\n        return this._lintExprFunctionCall(expression);\n      default:\n        throw Error(\n                'Linter: Expression not implemented: '\n              + Symbol.keyFor(expression.tag)\n              );\n    }\n  }\n\n  _lintExprVariable(expression) {\n    /* No restrictions.\n     * Note: the restriction that a variable is defined before it is used\n     * is a dynamic constraint . */\n  }\n\n  _lintExprConstantNumber(expression) {\n    /* No restrictions */\n  }\n\n  _lintExprConstantString(expression) {\n    /* No restrictions */\n  }\n\n  _lintExprList(expression) {\n    for (let element of expression.elements) {\n      this._lintExpression(element);\n    }\n  }\n\n  _lintExprRange(expression) {\n    this._lintExpression(expression.first);\n    if (expression.second !== null) {\n      this._lintExpression(expression.second);\n    }\n    this._lintExpression(expression.last);\n  }\n\n  _lintExprTuple(expression) {\n    for (let element of expression.elements) {\n      this._lintExpression(element);\n    }\n  }\n\n  _lintExprStructure(expression) {\n    this._lintExprStructureOrUpdate(expression, null);\n  }\n\n  _lintExprStructureUpdate(expression) {\n    this._lintExprStructureOrUpdate(expression, expression.original);\n  }\n\n  /* Check a structure construction: C(x1 <- e1, ..., xN <- eN)\n   * or a structure update: C(original | x1 <- e1, ..., xN <- eN).\n   *\n   * If original is null, it is a structure construction.\n   * If original is not null, it is the updated expression.\n   * */\n  _lintExprStructureOrUpdate(expression, original) {\n    /* Check that constructor exists */\n    let constructorName = expression.constructorName.value;\n    if (!this._symtable.isConstructor(constructorName)) {\n      this._failExpectedConstructorButGot(    // throws\n        expression.startPos, expression.endPos, constructorName\n      );\n      return;\n    }\n\n    this._checkStructureTypeNotEvent(constructorName, expression);\n    this._checkStructureNoRepeatedFields(constructorName, expression);\n    this._checkStructureBindingsCorrect(constructorName, expression);\n\n    /* If it is a structure construction, check that the fields are complete */\n    if (original === null) {\n      this._checkStructureBindingsComplete(constructorName, expression);\n    }\n\n    /* If it is an update, recursively check the original expression */\n    if (original !== null) {\n      this._lintExpression(original);\n    }\n\n    /* Recursively check expressions in field bindings */\n    for (let fieldBinding of expression.fieldBindings) {\n      this._lintExpression(fieldBinding.value);\n    }\n  }\n\n  /* Check that there are no repeated fields in a structure\n   * construction/update */\n  _checkStructureNoRepeatedFields(constructorName, expression) {\n    let declaredFields = expression.fieldNames();\n    let seen = {};\n    for (let fieldName of declaredFields) {\n      if (fieldName in seen) {\n        this._lintCheck(\n          expression.startPos, expression.endPos,\n          'structure-construction-repeated-field', [\n           constructorName,\n           fieldName\n          ]\n        );\n      }\n      seen[fieldName] = true;\n    }\n  }\n\n  /* Check that all bindings in a structure construction/update\n   * correspond to existing fields */\n  _checkStructureBindingsCorrect(constructorName, expression) {\n    let declaredFields = expression.fieldNames();\n    let constructorFields = this._symtable.constructorFields(constructorName);\n    for (let fieldName of declaredFields) {\n      if (constructorFields.indexOf(fieldName) === -1) {\n        this._lintCheck(\n          expression.startPos, expression.endPos,\n          'structure-construction-invalid-field', [\n           constructorName,\n           fieldName\n          ]\n        );\n      }\n    }\n  }\n\n  /* Check that bindings in a structure construction/update\n   * cover all existing fields */\n  _checkStructureBindingsComplete(constructorName, expression) {\n    let declaredFields = expression.fieldNames();\n    let constructorFields = this._symtable.constructorFields(constructorName);\n    for (let fieldName of constructorFields) {\n      if (declaredFields.indexOf(fieldName) === -1) {\n        this._lintCheck(\n          expression.startPos, expression.endPos,\n          'structure-construction-missing-field', [\n           constructorName,\n           fieldName\n          ]\n        );\n      }\n    }\n  }\n\n  /* Check that a structure construction/update does not involve\n   * constructors of the Event type, which should only be\n   * handled implicitly in an interactive program. */\n  _checkStructureTypeNotEvent(constructorName, expression) {\n    let constructorType = this._symtable.constructorType(constructorName);\n    if (constructorType === i18n('TYPE:Event')) {\n      this._lintCheck(\n        expression.startPos, expression.endPos,\n        'structure-construction-cannot-be-an-event', [constructorName]\n      );\n    }\n  }\n\n  _lintExprFunctionCall(expression) {\n    /* Check that it is a function or a field */\n    let name = expression.functionName.value;\n    if (!this._symtable.isFunction(name) && !this._symtable.isField(name)) {\n      this._lintCheck(\n        expression.startPos, expression.endPos,\n        'undefined-function', [name]\n      );\n    }\n\n    /* Check that the number of argument coincides */\n    let expected;\n    if (this._symtable.isFunction(name)) {\n      expected = this._symtable.functionParameters(name).length;\n    } else {\n      /* Fields always have exactly one parameter */\n      expected = 1;\n    }\n    let received = expression.args.length;\n    if (expected !== received) {\n      this._lintCheck(\n        expression.startPos, expression.endPos,\n        'function-arity-mismatch', [\n          name,\n          expected,\n          received\n        ]\n      );\n    }\n\n    /* Recursively check arguments */\n    for (let argument of expression.args) {\n      this._lintExpression(argument);\n    }\n  }\n\n  /* Throw a syntax error indicating that we expected the name of a\n   * constructor, but we got a name which is not a constructor.\n   *\n   * If the name is a type or a procedure, provide a more helpful\n   * error message. (Coinciding constructor and procedure names are\n   * not forbidden, but it is probably a mistake). */\n  _failExpectedConstructorButGot(startPos, endPos, name) {\n    if (this._symtable.isType(name)) {\n      this._lintCheck(\n        startPos, endPos,\n        'type-used-as-constructor', [\n          name,\n          this._symtable.typeConstructors(name)\n        ]\n      );\n    } else if (this._symtable.isProcedure(name)) {\n      this._lintCheck(\n        startPos, endPos,\n        'procedure-used-as-constructor', [name]\n      );\n    } else {\n      this._lintCheck(\n        startPos, endPos,\n        'undeclared-constructor', [name]\n      );\n    }\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/linter.js","import {\n  N_Main,\n  /* Definitions */\n  N_DefProgram,\n  N_DefInteractiveProgram,\n  N_DefProcedure,\n  N_DefFunction,\n  N_DefType,\n  /* Statements */\n  N_StmtBlock,\n  N_StmtReturn,\n  N_StmtIf,\n  N_StmtRepeat,\n  N_StmtForeach,\n  N_StmtWhile,\n  N_StmtSwitch,\n  N_StmtAssignVariable,\n  N_StmtAssignTuple,\n  N_StmtProcedureCall,\n  /* Patterns */\n  N_PatternWildcard,\n  N_PatternStructure,\n  N_PatternTuple,\n  N_PatternTimeout,\n  /* Expressions */\n  N_ExprVariable,\n  N_ExprConstantNumber,\n  N_ExprConstantString,\n  N_ExprList,\n  N_ExprRange,\n  N_ExprTuple,\n  N_ExprStructure,\n  N_ExprStructureUpdate,\n  N_ExprFunctionCall,\n  /* SwitchBranch: pattern -> body */\n  N_SwitchBranch,\n  /* FieldValue: field <- value */\n  N_FieldValue,\n  /* ConstructorDeclaration */\n  N_ConstructorDeclaration,\n} from './ast';\nimport {\n  IPushInteger,\n  IPushString,\n  IPushVariable,\n  ISetVariable,\n  IUnsetVariable,\n  ILabel,\n  IJump,\n  IJumpIfFalse,\n  IJumpIfStructure,\n  IJumpIfTuple,\n  ICall,\n  IReturn,\n  IMakeTuple,\n  IMakeList,\n  IMakeStructure,\n  IUpdateStructure,\n  IReadTupleComponent,\n  IReadStructureField,\n  IReadStructureFieldPop,\n  IDup,\n  IPop,\n  IPrimitiveCall,\n  ISaveState,\n  IRestoreState,\n  ITypeCheck,\n  Code\n} from './instruction';\nimport {\n  TypeAny,\n  TypeInteger,\n  TypeTuple,\n  TypeStructure,\n  TypeList,\n} from './value';\nimport { RuntimePrimitives } from './runtime';\nimport { i18n } from './i18n';\n\n/*\n * A compiler receives a symbol table (instance of SymbolTable).\n *\n * The method this.compile(ast) receives an abstract syntax tree\n * (the output of a parser).\n *\n * The AST is expected to have been linted against the given symbol table.\n *\n * The compiler produces an instance of Code, representing code for the\n * virtual machine.\n *\n * Compiling a program should never throw an exception.\n * Exceptions thrown in this module correspond to assertions,\n * i.e. internal errors that should never occur.\n * - Static conditions should be checked beforehand during the\n *   parsing and linting phases.\n * - Runtime conditions are to be checked later, during execution.\n */\nexport class Compiler {\n\n  constructor(symtable) {\n    this._symtable = symtable;\n    this._code = new Code([]);\n    this._nextLabel = 0;\n    this._nextVariable = 0;\n    this._primitives = new RuntimePrimitives();\n  }\n\n  compile(ast) {\n    this._compileMain(ast);\n    return this._code;\n  }\n\n  _compileMain(ast) {\n    /* Accept the empty source */\n    if (ast.definitions.length === 0) {\n      this._produce(ast.startPos, ast.endPos,\n        new IReturn()\n      );\n      return;\n    }\n\n    /* Compile the program (or interactive program) */\n    for (let definition of ast.definitions) {\n      if (definition.tag === N_DefProgram) {\n        this._compileDefProgram(definition);\n      } else if (definition.tag === N_DefInteractiveProgram) {\n        this._compileDefInteractiveProgram(definition);\n      }\n    }\n\n    /* Compile procedures and functions */\n    for (let definition of ast.definitions) {\n      if (definition.tag === N_DefProcedure) {\n        this._compileDefProcedure(definition);\n      } else if (definition.tag === N_DefFunction) {\n        this._compileDefFunction(definition);\n      }\n    }\n  }\n\n  _compileDefProgram(definition) {\n    this._compileStatement(definition.body);\n    this._produce(definition.startPos, definition.endPos,\n      new IReturn()\n    );\n  }\n\n  /* An interactive program is compiled as a switch statement\n   * followed by a Return instruction. */\n  _compileDefInteractiveProgram(definition) {\n    this._compileMatchSwitchBranches(definition);\n    this._produce(\n      definition.startPos, definition.endPos,\n      new IReturn()\n    );\n  }\n\n  /* A procedure definition:\n   *\n   *   procedure P(x1, ..., xN) {\n   *     <body>\n   *   }\n   *\n   * is compiled as follows:\n   *\n   *   P:\n   *     SetVariable x1\n   *     ...\n   *     SetVariable xN\n   *     <body>\n   *     Return\n   */\n  _compileDefProcedure(definition) {\n    this._produce(\n      definition.startPos, definition.endPos,\n      new ILabel(definition.name.value)\n    );\n    for (let i = 0; i < definition.parameters.length; i++) {\n      let parameterName = definition.parameters[i].value;\n      this._produce(\n        definition.startPos, definition.endPos,\n        new ISetVariable(parameterName)\n      );\n    }\n    this._compileStatement(definition.body);\n    this._produce(\n      definition.startPos, definition.endPos,\n      new IReturn()\n    );\n  }\n\n  /* A function definition:\n   *\n   *   function f(x1, ..., xN) {\n   *     <body>\n   *   }\n   *\n   * is compiled as follows:\n   *\n   *   f:\n   *     SaveState\n   *     SetVariable x1\n   *     ...\n   *     SetVariable xN\n   *     <body>\n   *     RestoreState\n   *     Return\n   */\n  _compileDefFunction(definition) {\n    this._produceList(definition.startPos, definition.endPos, [\n      new ILabel(definition.name.value),\n      new ISaveState(),\n    ]);\n    for (let i = 0; i < definition.parameters.length; i++) {\n      let parameterName = definition.parameters[i].value;\n      this._produce(\n        definition.startPos, definition.endPos,\n        new ISetVariable(parameterName)\n      );\n    }\n    this._compileStatement(definition.body);\n    this._produceList(definition.startPos, definition.endPos, [\n      new IRestoreState(),\n      new IReturn(),\n    ]);\n  }\n\n  /* Statements are compiled to VM instructions that start and end\n   * with an empty local stack. The stack may grow and shrink during the\n   * execution of a statement, but it should be empty by the end.\n   *\n   * The only exception to this rule is the \"return\" statement, which\n   * pushes a single value on the stack.\n   */\n  _compileStatement(statement) {\n    switch (statement.tag) {\n      case N_StmtBlock:\n        return this._compileStmtBlock(statement);\n      case N_StmtReturn:\n        return this._compileStmtReturn(statement);\n      case N_StmtIf:\n        return this._compileStmtIf(statement);\n      case N_StmtRepeat:\n        return this._compileStmtRepeat(statement);\n      case N_StmtForeach:\n        return this._compileStmtForeach(statement);\n      case N_StmtWhile:\n        return this._compileStmtWhile(statement);\n      case N_StmtSwitch:\n        return this._compileStmtSwitch(statement);\n      case N_StmtAssignVariable:\n        return this._compileStmtAssignVariable(statement);\n      case N_StmtAssignTuple:\n        return this._compileStmtAssignTuple(statement);\n      case N_StmtProcedureCall:\n        return this._compileStmtProcedureCall(statement);\n      default:\n        throw Error(\n                'Compiler: Statement not implemented: '\n              + Symbol.keyFor(statement.tag)\n              );\n    }\n  }\n\n  _compileStmtBlock(block) {\n    for (let statement of block.statements) {\n      this._compileStatement(statement);\n    }\n  }\n\n  /* Merely push the return value in the stack.\n   * The \"new IReturn()\" instruction itself is produced by the\n   * methods:\n   *   _compileDefProgram\n   *   _compileDefInteractiveProgram\n   *   _compileDefProcedure\n   *   _compileDefFunction\n   * */\n  _compileStmtReturn(statement) {\n    return this._compileExpression(statement.result);\n  }\n\n  /*\n   * If without else:\n   *\n   *   <condition>\n   *   TypeCheck Bool\n   *   JumpIfFalse labelElse\n   *   <thenBranch>\n   *   labelElse:\n   *\n   * If with else:\n   *\n   *   <condition>\n   *   TypeCheck Bool\n   *   JumpIfFalse labelElse\n   *   <thenBranch>\n   *   Jump labelEnd\n   *   labelElse:\n   *   <elseBranch>\n   *   labelEnd:\n   */\n  _compileStmtIf(statement) {\n    this._compileExpression(statement.condition);\n    this._produce(statement.condition.startPos, statement.condition.endPos,\n      new ITypeCheck(new TypeStructure(i18n('TYPE:Bool'), {}))\n    );\n    let labelElse = this._freshLabel();\n    this._produce(statement.startPos, statement.endPos,\n      new IJumpIfFalse(labelElse)\n    );\n    this._compileStatement(statement.thenBlock);\n    if (statement.elseBlock === null) {\n      this._produce(statement.startPos, statement.endPos,\n        new ILabel(labelElse)\n      );\n    } else {\n      let labelEnd = this._freshLabel();\n      this._produceList(statement.startPos, statement.endPos, [\n        new IJump(labelEnd),\n        new ILabel(labelElse),\n      ]);\n      this._compileStatement(statement.elseBlock);\n      this._produce(statement.startPos, statement.endPos,\n        new ILabel(labelEnd)\n      );\n    }\n  }\n\n  /* <times>\n   * TypeCheck Integer\n   * labelStart:\n   *   Dup                     ;\\\n   *   PushInteger 0           ;| if not positive, end\n   *   PrimitiveCall \">\", 2    ;|\n   *   JumpIfFalse labelEnd    ;/\n   *   <body>\n   *   PushInteger 1           ;\\ subtract 1\n   *   PrimitiveCall \"-\", 2    ;/\n   * Jump labelStart\n   * labelEnd:\n   * Pop                       ; pop the remaining number\n   */\n  _compileStmtRepeat(statement) {\n    this._compileExpression(statement.times);\n    this._produce(statement.times.startPos, statement.times.endPos,\n      new ITypeCheck(new TypeInteger())\n    );\n    let labelStart = this._freshLabel();\n    let labelEnd = this._freshLabel();\n    this._produceList(statement.startPos, statement.endPos, [\n      new ILabel(labelStart),\n      new IDup(),\n      new IPushInteger(0),\n      new IPrimitiveCall('>', 2),\n      new IJumpIfFalse(labelEnd),\n    ]);\n    this._compileStatement(statement.body);\n    this._produceList(statement.startPos, statement.endPos, [\n      new IPushInteger(1),\n      new IPrimitiveCall('-', 2),\n      new IJump(labelStart),\n      new ILabel(labelEnd),\n      new IPop(),\n    ]);\n  }\n\n  /* <range>                   ;\\ _list = temporary variable\n   * TypeCheck List(Any)       ;| holding the list we are ranging over\n   * SetVariable _list         ;/\n   *\n   * PushVariable _list                    ;\\ _n = temporary variable\n   * PrimitiveCall \"_unsafeListLength\", 1  ;| holding the total length\n   * SetVariable _n                        ;/ of the list\n   *\n   * PushInteger 0             ;\\ _pos = temporary variable holding the\n   * SetVariable _pos          ;/ current index inside the list\n   *\n   * labelStart:\n   *   PushVariable _pos       ;\\\n   *   PushVariable _n         ;| if out of the bounds of the list, end\n   *   PrimitiveCall \"<\", 2    ;|\n   *   JumpIfFalse labelEnd    ;/\n   *\n   *   PushVariable _list                 ;\\  get the `pos`-th element of the\n   *   PushVariable _pos                  ;|  list and store it in the local\n   *   PrimitiveCall \"_unsafeListNth\", 2  ;|  variable \"<index>\"\n   *   SetVariable <index>                ;/\n   *\n   *   <body>\n   *\n   *   PushVariable _pos       ;\\\n   *   PushInteger 1           ;| add 1 to the current index\n   *   PrimitiveCall \"+\", 2    ;|\n   *   SetVariable _pos        ;/\n   *\n   * Jump labelStart\n   * labelEnd:\n   * UnsetVariable _list\n   * UnsetVariable _n\n   * UnsetVariable _pos\n   * UnsetVariable <index>\n   */\n  _compileStmtForeach(statement) {\n    let labelStart = this._freshLabel();\n    let labelEnd = this._freshLabel();\n    let list = this._freshVariable();\n    let pos = this._freshVariable();\n    let n = this._freshVariable();\n\n    this._compileExpression(statement.range);\n    this._produceList(statement.range.startPos, statement.range.endPos, [\n      new ITypeCheck(new TypeList(new TypeAny())),\n      new ISetVariable(list),\n\n      new IPushVariable(list),\n      new IPrimitiveCall('_unsafeListLength', 1),\n      new ISetVariable(n),\n    ]);\n    this._produceList(statement.startPos, statement.endPos, [\n      new IPushInteger(0),\n      new ISetVariable(pos),\n\n      new ILabel(labelStart),\n      new IPushVariable(pos),\n      new IPushVariable(n),\n      new IPrimitiveCall('<', 2),\n      new IJumpIfFalse(labelEnd),\n\n      new IPushVariable(list),\n      new IPushVariable(pos),\n      new IPrimitiveCall('_unsafeListNth', 2),\n      new ISetVariable(statement.index.value),\n    ]);\n    this._compileStatement(statement.body);\n    this._produceList(statement.startPos, statement.endPos, [\n      new IPushVariable(pos),\n      new IPushInteger(1),\n      new IPrimitiveCall('+', 2),\n      new ISetVariable(pos),\n\n      new IJump(labelStart),\n\n      new ILabel(labelEnd),\n      new IUnsetVariable(list),\n      new IUnsetVariable(n),\n      new IUnsetVariable(pos),\n      new IUnsetVariable(statement.index.value),\n    ]);\n  }\n\n  /* labelStart:\n   * <condition>\n   * TypeCheck Bool\n   * JumpIfFalse labelEnd\n   * <body>\n   * Jump labelStart\n   * labelEnd:\n   */\n  _compileStmtWhile(statement) {\n    let labelStart = this._freshLabel();\n    let labelEnd = this._freshLabel();\n    this._produce(statement.startPos, statement.endPos,\n      new ILabel(labelStart)\n    );\n    this._compileExpression(statement.condition);\n    this._produceList(statement.startPos, statement.endPos, [\n      new ITypeCheck(new TypeStructure(i18n('TYPE:Bool'), {})),\n      new IJumpIfFalse(labelEnd),\n    ]);\n    this._compileStatement(statement.body);\n    this._produceList(statement.startPos, statement.endPos, [\n      new IJump(labelStart),\n      new ILabel(labelEnd),\n    ]);\n  }\n\n  /* If the branches of the switch are:\n   *    pattern1 -> body1\n   *    ...      -> ...\n   *    patternN -> bodyN\n   * the switch construction is compiled as follows:\n   *\n   * <subject>\n   *   [if matches pattern1, jump to label1]\n   *   ...\n   *   [if matches patternN, jump to labelN]\n   *   [error message: no match]\n   *\n   * label1:\n   *   [bind parameters in pattern1]\n   *   [pop subject]\n   *   <body1>\n   *   [unbind parameters in pattern1]\n   *   Jump labelEnd\n   * ...\n   * labelN:\n   *   [bind parameters in patternN]\n   *   [pop subject]\n   *   <bodyN>\n   *   [unbind parameters in patternN]\n   *   Jump labelEnd\n   * labelEnd:\n   */\n  _compileStmtSwitch(statement) {\n    /* Compile the subject */\n    this._compileExpression(statement.subject);\n    this._compileMatchSwitchBranches(statement);\n  }\n\n  _compileMatchSwitchBranches(statement) {\n    let branchLabels = [];\n    /* Attempt to match each pattern */\n    for (let branch of statement.branches) {\n      let label = this._freshLabel();\n      branchLabels.push(label);\n      this._compilePatternCheck(branch.pattern, label);\n    }\n\n    /* Issue an error message if there is no match */\n    this._produceList(statement.startPos, statement.endPos, [\n      new IPushString('switch-does-not-match'),\n      new IPrimitiveCall('_FAIL', 1),\n    ]);\n\n    /* Compile each branch */\n    let labelEnd = this._freshLabel();\n    for (let i = 0; i < branchLabels.length; i++) {\n      let branch = statement.branches[i];\n      let label = branchLabels[i];\n      this._produce(branch.startPos, branch.endPos, new ILabel(label));\n      this._compilePatternBind(branch.pattern);\n      this._produce(branch.startPos, branch.endPos, new IPop());\n      this._compileStatement(branch.body);\n      this._compilePatternUnbind(branch.pattern);\n      this._produce(branch.startPos, branch.endPos, new IJump(labelEnd));\n    }\n    this._produce(\n      statement.startPos, statement.endPos,\n      new ILabel(labelEnd)\n    );\n  }\n\n  _compileStmtAssignVariable(statement) {\n    this._compileExpression(statement.value);\n    this._produce(statement.startPos, statement.endPos,\n      new ISetVariable(statement.variable.value)\n    );\n  }\n\n  _compileStmtAssignTuple(statement) {\n    this._compileExpression(statement.value);\n\n    /* Check that the value is indeed a tuple of the expected length */\n    let anys = [];\n    for (let index = 0; index < statement.variables.length; index++) {\n      anys.push(new TypeAny());\n    }\n    let expectedType = new TypeTuple(anys);\n    this._produce(\n      statement.startPos, statement.endPos,\n      new ITypeCheck(expectedType)\n    );\n\n    /* Assign each variable */\n    for (let index = 0; index < statement.variables.length; index++) {\n      this._produceList(statement.startPos, statement.endPos, [\n        new IReadTupleComponent(index),\n        new ISetVariable(statement.variables[index].value)\n      ]);\n    }\n\n    /* Pop the tuple */\n    this._produce(\n      statement.startPos, statement.endPos,\n      new IPop()\n    );\n\n  }\n\n  /* There are two cases:\n   * (1) The procedure is a built-in primitive.\n   * (2) The procedure is a user-defined procedure.\n   */\n  _compileStmtProcedureCall(statement) {\n    let procedureName = statement.procedureName.value;\n    for (let argument of statement.args) {\n      this._compileExpression(argument);\n    }\n    if (this._primitives.isProcedure(procedureName)) {\n      this._compileStmtProcedureCallPrimitive(statement);\n    } else if (this._symtable.isProcedure(procedureName)) {\n      this._compileStmtProcedureCallUserDefined(statement);\n    } else {\n      throw Error(\n        'Compiler: ' + procedureName + ' is an undefined procedure.'\n      );\n    }\n  }\n\n  _compileStmtProcedureCallPrimitive(statement) {\n    this._produce(statement.startPos, statement.endPos,\n      new IPrimitiveCall(statement.procedureName.value, statement.args.length)\n    );\n  }\n\n  _compileStmtProcedureCallUserDefined(statement) {\n    this._produce(statement.startPos, statement.endPos,\n      new ICall(statement.procedureName.value, statement.args.length)\n    );\n  }\n\n  /* Pattern checks are instructions that check whether the\n   * top of the stack has the expected form (matching a given pattern)\n   * and, in that case, branching to the given label.\n   * The top of the stack is never popped.\n   * The arguments of a pattern are not bound by this instruction.\n   */\n  _compilePatternCheck(pattern, targetLabel) {\n    switch (pattern.tag) {\n      case N_PatternWildcard:\n        return this._compilePatternCheckWildcard(pattern, targetLabel);\n      case N_PatternStructure:\n        return this._compilePatternCheckStructure(pattern, targetLabel);\n      case N_PatternTuple:\n        return this._compilePatternCheckTuple(pattern, targetLabel);\n      case N_PatternTimeout:\n        return this._compilePatternCheckTimeout(pattern, targetLabel);\n      default:\n        throw Error(\n                'Compiler: Pattern check not implemented: '\n              + Symbol.keyFor(pattern.tag)\n              );\n    }\n  }\n\n  _compilePatternCheckWildcard(pattern, targetLabel) {\n    this._produce(\n      pattern.startPos, pattern.endPos,\n      new IJump(targetLabel)\n    );\n  }\n\n  _compilePatternCheckStructure(pattern, targetLabel) {\n    /* Check that the type of the value coincides with the type\n     * of the constructor */\n    let constructorName = pattern.constructorName.value;\n    let typeName = this._symtable.constructorType(constructorName);\n    let expectedType = new TypeStructure(typeName, {});\n    this._produce(\n      pattern.startPos, pattern.endPos,\n      new ITypeCheck(expectedType)\n    );\n\n    /* Jump if the value matches */\n    this._produce(\n      pattern.startPos, pattern.endPos,\n      new IJumpIfStructure(constructorName, targetLabel)\n    );\n  }\n\n  _compilePatternCheckTuple(pattern, targetLabel) {\n    /* Check that the type of the value coincides with the type\n     * of the tuple */\n    let anys = [];\n    for (let i = 0; i < pattern.parameters.length; i++) {\n      anys.push(new TypeAny());\n    }\n    let expectedType = new TypeTuple(anys);\n    this._produce(\n      pattern.startPos, pattern.endPos,\n      new ITypeCheck(expectedType)\n    );\n\n    /* Jump if the value matches */\n    this._produce(\n      pattern.startPos, pattern.endPos,\n      new IJumpIfTuple(pattern.parameters.length, targetLabel)\n    );\n  }\n\n  _compilePatternCheckTimeout(pattern, targetLabel) {\n    this._produce(\n      pattern.startPos, pattern.endPos,\n      new IJumpIfStructure(i18n('CONS:TIMEOUT'), targetLabel)\n    );\n  }\n\n  /* Pattern binding are instructions that bind the parameters\n   * of a pattern to the corresponding parts of the value currently\n   * at the top of the stack.\n   */\n  _compilePatternBind(pattern) {\n    switch (pattern.tag) {\n      case N_PatternWildcard:\n        return; /* No parameters to bind */\n      case N_PatternStructure:\n        this._compilePatternBindStructure(pattern);\n        return;\n      case N_PatternTuple:\n        this._compilePatternBindTuple(pattern);\n        return;\n      case N_PatternTimeout:\n        return; /* No parameters to bind */\n      default:\n        throw Error(\n                'Compiler: Pattern binding not implemented: '\n              + Symbol.keyFor(pattern.tag)\n              );\n    }\n  }\n\n  _compilePatternBindStructure(pattern) {\n    /* Allow pattern with no parameters, even if the constructor\n     * has parameters */\n    if (pattern.parameters.length === 0) {\n      return;\n    }\n\n    let constructorName = pattern.constructorName.value;\n    let fieldNames = this._symtable.constructorFields(constructorName);\n    for (let i = 0; i < fieldNames.length; i++) {\n      let parameter = pattern.parameters[i];\n      let fieldName = fieldNames[i];\n      this._produceList(pattern.startPos, pattern.endPos, [\n        new IReadStructureField(fieldName),\n        new ISetVariable(parameter.value),\n      ]);\n    }\n  }\n\n  _compilePatternBindTuple(pattern) {\n    for (let index = 0; index < pattern.parameters.length; index++) {\n      let parameter = pattern.parameters[index];\n      this._produceList(pattern.startPos, pattern.endPos, [\n        new IReadTupleComponent(index),\n        new ISetVariable(parameter.value),\n      ]);\n    }\n  }\n\n  /* Pattern unbinding are instructions that unbind the parameters\n   * of a pattern. */\n  _compilePatternUnbind(pattern) {\n    switch (pattern.tag) {\n      case N_PatternWildcard:\n        return; /* No parameters to unbind */\n      case N_PatternStructure:\n        this._compilePatternUnbindStructure(pattern);\n        return;\n      case N_PatternTuple:\n        this._compilePatternUnbindTuple(pattern);\n        return;\n      case N_PatternTimeout:\n        return; /* No parameters to unbind */\n      default:\n        throw Error(\n                'Compiler: Pattern unbinding not implemented: '\n              + Symbol.keyFor(pattern.tag)\n              );\n    }\n  }\n\n  _compilePatternUnbindStructure(pattern) {\n    for (let parameter of pattern.parameters) {\n      this._produceList(pattern.startPos, pattern.endPos, [\n        new IUnsetVariable(parameter.value),\n      ]);\n    }\n  }\n\n  _compilePatternUnbindTuple(pattern) {\n    for (let parameter of pattern.parameters) {\n      this._produceList(pattern.startPos, pattern.endPos, [\n        new IUnsetVariable(parameter.value),\n      ]);\n    }\n  }\n\n  /* Expressions are compiled to instructions that make the size\n   * of the local stack grow in exactly one.\n   * The stack may grow and shrink during the evaluation of an\n   * expression, but an expression should not consume values\n   * that were present on the stack before its evaluation started.\n   * In the end the stack should have exactly one more value than\n   * at the start.\n   */\n  _compileExpression(expression) {\n    switch (expression.tag) {\n      case N_ExprVariable:\n        return this._compileExprVariable(expression);\n      case N_ExprConstantNumber:\n        return this._compileExprConstantNumber(expression);\n      case N_ExprConstantString:\n        return this._compileExprConstantString(expression);\n      case N_ExprList:\n        return this._compileExprList(expression);\n      case N_ExprRange:\n        return this._compileExprRange(expression);\n      case N_ExprTuple:\n        return this._compileExprTuple(expression);\n      case N_ExprStructure:\n        return this._compileExprStructure(expression);\n      case N_ExprStructureUpdate:\n        return this._compileExprStructureUpdate(expression);\n      case N_ExprFunctionCall:\n        return this._compileExprFunctionCall(expression);\n      default:\n        throw Error(\n                'Compiler: Expression not implemented: '\n              + Symbol.keyFor(expression.tag)\n              );\n      }\n  }\n\n  _compileExprVariable(expression) {\n    this._produce(expression.startPos, expression.endPos,\n      new IPushVariable(expression.variableName.value)\n    );\n  }\n\n  _compileExprConstantNumber(expression) {\n    this._produce(expression.startPos, expression.endPos,\n      new IPushInteger(expression.number.value)\n    );\n  }\n\n  _compileExprConstantString(expression) {\n    this._produce(expression.startPos, expression.endPos,\n      new IPushString(expression.string.value)\n    );\n  }\n\n  _compileExprList(expression) {\n    for (let element of expression.elements) {\n      this._compileExpression(element);\n    }\n    this._produce(expression.startPos, expression.endPos,\n      new IMakeList(expression.elements.length)\n    );\n  }\n\n  /*\n   * Range expresions [first..last] and [first,second..last]\n   * are compiled by calling the primitive functions\n   *   _makeRange\n   *   _makeRangeWithSecond\n   */\n  _compileExprRange(expression) {\n    this._compileExpression(expression.first);\n    this._compileExpression(expression.last);\n    if (expression.second === null) {\n      this._produce(\n        expression.startPos, expression.endPos,\n        new IPrimitiveCall('_makeRange', 2)\n      );\n    } else {\n      this._compileExpression(expression.second);\n      this._produce(\n        expression.startPos, expression.endPos,\n        new IPrimitiveCall('_makeRangeWithSecond', 3)\n      );\n    }\n  }\n\n  _compileExprTuple(expression) {\n    for (let element of expression.elements) {\n      this._compileExpression(element);\n    }\n    this._produce(expression.startPos, expression.endPos,\n      new IMakeTuple(expression.elements.length)\n    );\n  }\n\n  _compileExprStructure(expression) {\n    let fieldNames = [];\n    for (let fieldBinding of expression.fieldBindings) {\n      this._compileExpression(fieldBinding.value);\n      fieldNames.push(fieldBinding.fieldName.value);\n    }\n    let constructorName = expression.constructorName.value;\n    let typeName = this._symtable.constructorType(constructorName);\n    this._produce(expression.startPos, expression.endPos,\n      new IMakeStructure(typeName, constructorName, fieldNames)\n    );\n  }\n\n  _compileExprStructureUpdate(expression) {\n    this._compileExpression(expression.original);\n    let fieldNames = [];\n    for (let fieldBinding of expression.fieldBindings) {\n      this._compileExpression(fieldBinding.value);\n      fieldNames.push(fieldBinding.fieldName.value);\n    }\n    let constructorName = expression.constructorName.value;\n    let typeName = this._symtable.constructorType(constructorName);\n    this._produce(expression.startPos, expression.endPos,\n      new IUpdateStructure(typeName, constructorName, fieldNames)\n    );\n  }\n\n  /* There are four cases:\n   * (1) The function is '&&' or '||' which must be considered separately\n   *     to account for short-circuting.\n   * (2) The function is a built-in primitive.\n   * (3) The function is a user-defined function.\n   * (4) The function is an observer / field accessor.\n   */\n  _compileExprFunctionCall(expression) {\n    let functionName = expression.functionName.value;\n    if (functionName === '&&') {\n      this._compileExprFunctionCallAnd(expression);\n    } else if (functionName === '||') {\n      this._compileExprFunctionCallOr(expression);\n    } else {\n      for (let argument of expression.args) {\n        this._compileExpression(argument);\n      }\n      if (this._primitives.isFunction(functionName)) {\n        this._compileExprFunctionCallPrimitive(expression);\n      } else if (this._symtable.isFunction(functionName)) {\n        this._compileExprFunctionCallUserDefined(expression);\n      } else if (this._symtable.isField(functionName)) {\n        this._compileExprFunctionCallFieldAccessor(expression);\n      } else {\n        throw Error(\n          'Compiler: ' + functionName + ' is an undefined function.'\n        );\n      }\n    }\n  }\n\n  /* <expr1>\n   * TypeCheck Bool\n   * JumpIfStructure 'False' labelEnd\n   * Pop\n   * <expr2>\n   * TypeCheck Bool\n   * labelEnd:\n   */\n  _compileExprFunctionCallAnd(expression) {\n    let expr1 = expression.args[0];\n    let expr2 = expression.args[1];\n    let labelEnd = this._freshLabel();\n    this._compileExpression(expr1);\n    this._produceList(expression.startPos, expression.endPos, [\n      new ITypeCheck(new TypeStructure(i18n('TYPE:Bool'), {})),\n      new IJumpIfStructure(i18n('CONS:False'), labelEnd),\n      new IPop(),\n    ]);\n    this._compileExpression(expr2);\n    this._produceList(expression.startPos, expression.endPos, [\n      new ITypeCheck(new TypeStructure(i18n('TYPE:Bool'), {})),\n      new ILabel(labelEnd),\n    ]);\n  }\n\n  /* <expr1>\n   * TypeCheck Bool\n   * JumpIfStructure 'True' labelEnd\n   * Pop\n   * <expr2>\n   * TypeCheck Bool\n   * labelEnd:\n   */\n  _compileExprFunctionCallOr(expression) {\n    let expr1 = expression.args[0];\n    let expr2 = expression.args[1];\n    let labelEnd = this._freshLabel();\n    this._compileExpression(expr1);\n    this._produceList(expression.startPos, expression.endPos, [\n      new ITypeCheck(new TypeStructure(i18n('TYPE:Bool'), {})),\n      new IJumpIfStructure(i18n('CONS:True'), labelEnd),\n      new IPop(),\n    ]);\n    this._compileExpression(expr2);\n    this._produceList(expression.startPos, expression.endPos, [\n      new ITypeCheck(new TypeStructure(i18n('TYPE:Bool'), {})),\n      new ILabel(labelEnd),\n    ]);\n  }\n\n  _compileExprFunctionCallPrimitive(expression) {\n    this._produce(expression.startPos, expression.endPos,\n      new IPrimitiveCall(expression.functionName.value, expression.args.length)\n    );\n  }\n\n  _compileExprFunctionCallUserDefined(expression) {\n    this._produce(expression.startPos, expression.endPos,\n      new ICall(expression.functionName.value, expression.args.length)\n    );\n  }\n\n  _compileExprFunctionCallFieldAccessor(expression) {\n    this._produceList(expression.startPos, expression.endPos, [\n      new IReadStructureFieldPop(expression.functionName.value),\n    ]);\n  }\n\n  /* Helpers */\n\n  /* Produce the given instruction, setting its starting and ending\n   * position to startPos and endPos respectively */\n  _produce(startPos, endPos, instruction) {\n    instruction.startPos = startPos;\n    instruction.endPos = endPos;\n    this._code.produce(instruction);\n  }\n\n  _produceList(startPos, endPos, instructions) {\n    for (let instruction of instructions) {\n      this._produce(startPos, endPos, instruction);\n    }\n  }\n\n  /* Create a fresh label name */\n  _freshLabel() {\n    let label = '_l' + this._nextLabel.toString();\n    this._nextLabel++;\n    return label;\n  }\n\n  /* Create a fresh local variable name */\n  _freshVariable() {\n    let v = '_v' + this._nextVariable.toString();\n    this._nextVariable++;\n    return v;\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/compiler.js","\nimport {\n  I_PushInteger,\n  I_PushString,\n  I_PushVariable,\n  I_SetVariable,\n  I_UnsetVariable,\n  I_Label,\n  I_Jump,\n  I_JumpIfFalse,\n  I_JumpIfStructure,\n  I_JumpIfTuple,\n  I_Call,\n  I_Return,\n  I_MakeTuple,\n  I_MakeList,\n  I_MakeStructure,\n  I_UpdateStructure,\n  I_ReadTupleComponent,\n  I_ReadStructureField,\n  I_ReadStructureFieldPop,\n  I_Add,\n  I_Dup,\n  I_Pop,\n  I_PrimitiveCall,\n  I_SaveState,\n  I_RestoreState,\n  I_TypeCheck,\n} from './instruction';\nimport {\n  V_Tuple,\n  V_Structure,\n  ValueInteger,\n  ValueString,\n  ValueTuple,\n  ValueList,\n  ValueStructure,\n  joinTypes,\n  TypeAny,\n} from './value';\nimport { GbsRuntimeError } from './exceptions';\nimport { i18n } from './i18n';\nimport { RuntimePrimitives } from './runtime';\n\n/* Conditions that may occur on runtime */\nconst RT_ExitProgram = Symbol.for('RT_ExitProgram');\n\n/* Instances of RuntimeCondition represent conditions that may occur\n * during runtime (e.g. program termination or timeout). */\nclass RuntimeCondition extends Error {\n  constructor(tag) {\n    super(Symbol.keyFor(tag));\n    this.tag = tag;\n  }\n}\n\n/* Runtime condition to mark the end of an execution */\nclass RuntimeExitProgram extends RuntimeCondition {\n  constructor(returnValue) {\n    super(RT_ExitProgram);\n    this.returnValue = returnValue;\n  }\n}\n\nfunction fail(startPos, endPos, reason, args) {\n  throw new GbsRuntimeError(startPos, endPos, reason, args);\n}\n\n/* An instance of Frame represents the local execution context of a\n * function or procedure (a.k.a. \"activation record\" or \"stack frame\").\n *\n * It includes:\n * - the name of the current routine:\n *   + 'program' for the main program\n *   + the name of the current procedure or function\n * - the current instruction pointer\n * - a stack of local values\n * - a map from local names to values\n */\nclass Frame {\n  constructor(routineName, instructionPointer) {\n    this._routineName = routineName;\n    this._instructionPointer = instructionPointer;\n    this._variables = {};\n    this._stack = [];\n  }\n\n  get routineName() {\n    return this._routineName;\n  }\n\n  get instructionPointer() {\n    return this._instructionPointer;\n  }\n\n  set instructionPointer(value) {\n    this._instructionPointer = value;\n  }\n\n  setVariable(name, value) {\n    this._variables[name] = value;\n  }\n\n  unsetVariable(name, value) {\n    delete this._variables[name];\n  }\n\n  getVariable(name) {\n    if (name in this._variables) {\n      return this._variables[name];\n    } else {\n      return null;\n    }\n  }\n\n  stackEmpty() {\n    return this._stack.length === 0;\n  }\n\n  pushValue(value) {\n    this._stack.push(value);\n  }\n\n  stackTop() {\n    if (this._stack.length === 0) {\n      throw Error('VM: no value at the top of the stack; the stack is empty.');\n    }\n    return this._stack[this._stack.length - 1];\n  }\n\n  popValue() {\n    if (this._stack.length === 0) {\n      throw Error('VM: no value to pop; the stack is empty.');\n    }\n    return this._stack.pop();\n  }\n}\n\n/*\n * Receives an instance of Code, representing a program for the virtual\n * machine, and sets it up for running.\n *\n * Then it implements the following interface:\n *\n *   vm.run();    Run the program until termination.\n *                If the program returns a value, this method\n *                returns it. Otherwise it returns null.\n */\nexport class VirtualMachine {\n\n  constructor(code, initialState) {\n    this._code = code;\n\n    /* \"this._labelTargets\" is a dictionary mapping label names to\n     * the corresponding instruction pointers.\n     *\n     * It is calculated automatically from code.\n     */\n    this._labelTargets = this._code.labelTargets();\n\n    /* A \"call stack\" is a stack of frames.\n     *\n     * The topmost element of the stack (i.e. the last element of the list)\n     * is the execution context of the current function.\n     *\n     * The previous element is the execution context of the caller, and so on.\n     *\n     * During the execution of a program the call stack should never\n     * become empty.\n     */\n    this._callStack = [];\n    this._callStack.push(new Frame('program', 0 /* instructionPointer */));\n\n    /* The global state is the data that is available globally.\n     *\n     * In Gobstones, the global state is the board. The VM module\n     * should not be aware of the actual implementation or nature of\n     * the global state.\n     *\n     * We have a stack of global states.\n     *\n     * The instruction 'SaveState' saves the current global state.\n     * It should be called whenever entering a user-defined function\n     * in Gobstones.\n     *\n     * The instruction 'RestoreState' restores the previous global state.\n     * It should be called whenever leaving a user-defined function\n     * in Gobstones.\n     */\n    this._globalStateStack = [initialState];\n\n    /* The following dictionary maps names of primitives to their\n     * implementation.\n     *\n     * A primitive always receives 1 + n parameters, the first one being\n     * the board.\n     */\n    this._primitives = new RuntimePrimitives();\n\n    /*\n     * A \"snapshot callback\" is a function that takes snapshots.\n     *\n     *   snapshotCallback(routineName, position, callStack, globalState)\n     *\n     *   routineName:\n     *     It is the name of the routine that triggers the\n     *     snapshot, it might be:\n     *     - 'program' for the main program,\n     *     - the name of a primitive procedure or function,\n     *     - the name of a user-defined procedure or function.\n     *\n     *   position:\n     *     The position in the source code for this snapshot.\n     *\n     *   callStack:\n     *     The current call stack.\n     *\n     *   globalState:\n     *     The current global state.\n     *\n     * Snapshots\n     * If _snapshotCallback is null, the VM does not take snapshots.\n     */\n    this._snapshotCallback = null;\n\n  }\n\n  run() {\n    return this.runWithTimeout(0);\n  }\n\n  /* Run the program, throwing an exception if the given timeout is met.\n   * If millisecs is 0, the program is run indefinitely. */\n  runWithTimeout(millisecs) {\n    return this.runWithTimeoutTakingSnapshots(millisecs, null);\n  }\n\n  /* Restart the program from the beginning, with the given eventValue\n   * at the top of the stack.\n   *\n   * This is used for interactive programs, which work by iteratively\n   * making calls to this function.\n   */\n  runEventWithTimeout(eventValue, millisecs) {\n    this._callStack = [new Frame('program', 0 /* instructionPointer */)];\n    this._currentFrame().pushValue(eventValue);\n    return this.runWithTimeout(millisecs);\n  }\n\n  /* Run the program, throwing an exception if the given timeout is met.\n   * If millisecs is 0, the program is run indefinitely.\n   *\n   * Snapshots are taken:\n   * - At the very start of the program.\n   * - At the end of the program.\n   * - After calling any primitive procedure or function.\n   * - Whenever reaching an I_Return instruction from any routine.\n   *\n   * The snapshotCallback function receives:\n   * - The current call stack (list of frames).\n   * - The current global state.\n   */\n  runWithTimeoutTakingSnapshots(millisecs, snapshotCallback) {\n    let startTime = new Date().getTime();\n    this._snapshotCallback = snapshotCallback;\n    this._takeSnapshot('program');\n    try {\n      while (true) {\n        this._step();\n        this._timeoutIfNeeded(startTime, millisecs);\n      }\n    } catch (condition) {\n      if (condition.tag === RT_ExitProgram) {\n        return condition.returnValue;\n      } else {\n        throw condition;\n      }\n    }\n  }\n\n  _timeoutIfNeeded(startTime, millisecs) {\n    if (millisecs > 0 && (new Date().getTime() - startTime) > millisecs) {\n      let instruction = this._currentInstruction();\n      fail(instruction.startPos, instruction.endPos, 'timeout', [millisecs]);\n    }\n  }\n\n  _takeSnapshot(routineName) {\n    if (this._snapshotCallback !== null) {\n      let instruction = this._currentInstruction();\n      this._snapshotCallback(\n        routineName, instruction.startPos, this._callStack, this.globalState()\n      );\n    }\n  }\n\n  globalState() {\n    return this._globalStateStack[this._globalStateStack.length - 1];\n  }\n\n  setGlobalState(globalState) {\n    this._globalStateStack[this._globalStateStack.length - 1] = globalState;\n  }\n\n  /* Return the current frame, which is the top of the call stack */\n  _currentFrame() {\n    return this._callStack[this._callStack.length - 1];\n  }\n\n  /* Return the current instruction, given by the instruction pointer\n   * of the current activation record */\n  _currentInstruction() {\n    return this._code.at(this._currentFrame().instructionPointer);\n  }\n\n  /* Execute a single instruction.\n   *\n   * If the program finishes, it throws an exception\n   *   RuntimeExitProgram(returnValue)\n   */\n  _step() {\n    switch (this._currentInstruction().opcode) {\n      case I_PushInteger:\n        return this._stepPushInteger();\n      case I_PushString:\n        return this._stepPushString();\n      case I_PushVariable:\n        return this._stepPushVariable();\n      case I_SetVariable:\n        return this._stepSetVariable();\n      case I_UnsetVariable:\n        return this._stepUnsetVariable();\n      case I_Label:\n        return this._stepLabel();\n      case I_Jump:\n        return this._stepJump();\n      case I_JumpIfFalse:\n        return this._stepJumpIfFalse();\n      case I_JumpIfStructure:\n        return this._stepJumpIfStructure();\n      case I_JumpIfTuple:\n        return this._stepJumpIfTuple();\n      case I_Call:\n        return this._stepCall();\n      case I_Return:\n        return this._stepReturn();\n      case I_MakeTuple:\n        return this._stepMakeTuple();\n      case I_MakeList:\n        return this._stepMakeList();\n      case I_MakeStructure:\n        return this._stepMakeStructure();\n      case I_UpdateStructure:\n        return this._stepUpdateStructure();\n      case I_ReadTupleComponent:\n        return this._stepReadTupleComponent();\n      case I_ReadStructureField:\n        return this._stepReadStructureField();\n      case I_ReadStructureFieldPop:\n        return this._stepReadStructureFieldPop();\n      case I_Add:\n        return this._stepAdd();\n      case I_Dup:\n        return this._stepDup();\n      case I_Pop:\n        return this._stepPop();\n      case I_PrimitiveCall:\n        return this._stepPrimitiveCall();\n      case I_SaveState:\n        return this._stepSaveState();\n      case I_RestoreState:\n        return this._stepRestoreState();\n      case I_TypeCheck:\n        return this._stepTypeCheck();\n      default:\n        throw Error(\n                'VM: opcode '\n              + Symbol.keyFor(this._currentInstruction().opcode)\n              + ' not implemented'\n              );\n    }\n  }\n\n  _stepPushInteger() {\n    let frame = this._currentFrame();\n    let instruction = this._currentInstruction();\n    frame.pushValue(new ValueInteger(instruction.number));\n    frame.instructionPointer++;\n  }\n\n  _stepPushString() {\n    let frame = this._currentFrame();\n    let instruction = this._currentInstruction();\n    frame.pushValue(new ValueString(instruction.string));\n    frame.instructionPointer++;\n  }\n\n  _stepPushVariable() {\n    let frame = this._currentFrame();\n    let instruction = this._currentInstruction();\n    let value = frame.getVariable(instruction.variableName);\n    if (value === null) {\n      fail(\n        instruction.startPos, instruction.endPos,\n        'undefined-variable', [instruction.variableName]\n      );\n    }\n    frame.pushValue(value);\n    frame.instructionPointer++;\n  }\n\n  _stepSetVariable() {\n    let frame = this._currentFrame();\n    let instruction = this._currentInstruction();\n    let newValue = frame.popValue();\n\n    /* Check that types are compatible */\n    let oldValue = frame.getVariable(instruction.variableName);\n    if (oldValue !== null) {\n      let oldType = oldValue.type();\n      let newType = newValue.type();\n      if (joinTypes(oldType, newType) === null) {\n        fail(\n          instruction.startPos, instruction.endPos,\n          'incompatible-types-on-assignment', [\n            instruction.variableName,\n            oldType.toString(),\n            newType.toString(),\n          ]\n        );\n      }\n    }\n\n    /* Proceed with assignment */\n    frame.setVariable(instruction.variableName, newValue);\n    frame.instructionPointer++;\n  }\n\n  _stepUnsetVariable() {\n    let frame = this._currentFrame();\n    let instruction = this._currentInstruction();\n    frame.unsetVariable(instruction.variableName);\n    frame.instructionPointer++;\n  }\n\n  _stepLabel() {\n    /* Ignore pseudo-instruction */\n    let frame = this._currentFrame();\n    frame.instructionPointer++;\n  }\n\n  _stepJump() {\n    let frame = this._currentFrame();\n    let instruction = this._currentInstruction();\n    frame.instructionPointer = this._labelTargets[instruction.targetLabel];\n  }\n\n  _stepJumpIfFalse() {\n    let frame = this._currentFrame();\n    let instruction = this._currentInstruction();\n    let value = frame.popValue(); /* Pop the value */\n    if (value.tag === V_Structure && value.constructorName === 'False') {\n      frame.instructionPointer = this._labelTargets[instruction.targetLabel];\n    } else {\n      frame.instructionPointer++;\n    }\n  }\n\n  _stepJumpIfStructure() {\n    let frame = this._currentFrame();\n    let instruction = this._currentInstruction();\n    let value = frame.stackTop(); /* Do not pop the value */\n    if (value.tag === V_Structure\n        && value.constructorName === instruction.constructorName) {\n      frame.instructionPointer = this._labelTargets[instruction.targetLabel];\n    } else {\n      frame.instructionPointer++;\n    }\n  }\n\n  _stepJumpIfTuple() {\n    let frame = this._currentFrame();\n    let instruction = this._currentInstruction();\n    let value = frame.stackTop(); /* Do not pop the value */\n    if (value.tag === V_Tuple && value.size() === instruction.size) {\n      frame.instructionPointer = this._labelTargets[instruction.targetLabel];\n    } else {\n      frame.instructionPointer++;\n    }\n  }\n\n  _stepCall() {\n    let callerFrame = this._currentFrame();\n    let instruction = this._currentInstruction();\n\n    /* Create a new stack frame for the callee */\n    let newFrame = new Frame(\n                     instruction.targetLabel,\n                     this._labelTargets[instruction.targetLabel]\n                   );\n    this._callStack.push(newFrame);\n\n    /* Pop arguments from caller's frame and push them into callee's frame */\n    for (let i = 0; i < instruction.nargs; i++) {\n      if (callerFrame.stackEmpty()) {\n        fail(\n          instruction.startPos, instruction.endPos,\n          'too-few-arguments', [instruction.targetLabel]\n        );\n      }\n      newFrame.pushValue(callerFrame.popValue());\n    }\n  }\n\n  _stepReturn() {\n    let innerFrame = this._currentFrame();\n\n    /* Take a snapshot when leaving a routine */\n    this._takeSnapshot(innerFrame.routineName);\n\n    let returnValue;\n    if (innerFrame.stackEmpty()) {\n      returnValue = null;\n    } else {\n      returnValue = innerFrame.popValue();\n      if (!innerFrame.stackEmpty()) {\n        throw Error('VM: stack should be empty');\n      }\n    }\n\n    this._callStack.pop();\n    if (this._callStack.length === 0) {\n      /* There are no more frames in the call stack, which means\n       * that we are returning from the main program. */\n      throw new RuntimeExitProgram(returnValue);\n    } else {\n      /* There are further frames in the call stack, which means\n       * that we are returning from a function. */\n      let outerFrame = this._currentFrame();\n      if (returnValue !== null) {\n        outerFrame.pushValue(returnValue);\n      }\n      outerFrame.instructionPointer++;\n    }\n  }\n\n  _stepMakeTuple() {\n    let frame = this._currentFrame();\n    let instruction = this._currentInstruction();\n\n    let elements = [];\n    for (let i = 0; i < instruction.size; i++) {\n      elements.unshift(frame.popValue());\n    }\n    frame.pushValue(new ValueTuple(elements));\n    frame.instructionPointer++;\n  }\n\n  _stepMakeList() {\n    let frame = this._currentFrame();\n    let instruction = this._currentInstruction();\n\n    let elements = [];\n    for (let i = 0; i < instruction.size; i++) {\n      elements.unshift(frame.popValue());\n    }\n\n    /* Check that the types of the elements are compatible */\n    let contentType = new TypeAny();\n    let index = 0;\n    for (let element of elements) {\n      let oldType = contentType;\n      let newType = element.type();\n      contentType = joinTypes(oldType, newType);\n      if (contentType === null) {\n        fail(\n          instruction.startPos, instruction.endPos,\n          'incompatible-types-on-list-creation', [\n            index,\n            oldType.toString(),\n            newType.toString(),\n          ]\n        );\n      }\n      index++;\n    }\n    frame.pushValue(new ValueList(elements));\n    frame.instructionPointer++;\n  }\n\n  _stepMakeStructure() {\n    let frame = this._currentFrame();\n    let instruction = this._currentInstruction();\n\n    let fields = {};\n    let n = instruction.fieldNames.length;\n    for (let i = 0; i < n; i++) {\n      let fieldName = instruction.fieldNames[n - i - 1];\n      fields[fieldName] = frame.popValue();\n    }\n    frame.pushValue(\n      new ValueStructure(\n        instruction.typeName, instruction.constructorName, fields\n      )\n    );\n    frame.instructionPointer++;\n  }\n\n  _stepUpdateStructure() {\n    let frame = this._currentFrame();\n    let instruction = this._currentInstruction();\n\n    let newFields = {};\n    let newFieldNames = [];\n    let n = instruction.fieldNames.length;\n    for (let i = 0; i < n; i++) {\n      let fieldName = instruction.fieldNames[n - i - 1];\n      newFields[fieldName] = frame.popValue();\n      newFieldNames.unshift(fieldName);\n    }\n\n    /* Check that it is a structure and built with the same constructor */\n    let structure = frame.popValue();\n    if (structure.tag !== V_Structure) {\n      fail(\n        instruction.startPos, instruction.endPos,\n        'expected-structure-but-got', [\n          instruction.constructorName,\n          i18n(Symbol.keyFor(structure.tag)),\n        ]\n      );\n    }\n    if (structure.constructorName !== instruction.constructorName) {\n      fail(\n        instruction.startPos, instruction.endPos,\n        'expected-constructor-but-got', [\n          instruction.constructorName,\n          structure.constructorName,\n        ]\n      );\n    }\n    if (structure.typeName !== instruction.typeName) {\n      throw Error('VM: UpdateStructure instruction does not match type.');\n    }\n\n    /* Check that the types of the fields are compatible */\n    for (let fieldName of newFieldNames) {\n      let oldType = structure.fields[fieldName].type();\n      let newType = newFields[fieldName].type();\n      if (joinTypes(oldType, newType) === null) {\n        fail(\n          instruction.startPos, instruction.endPos,\n          'incompatible-types-on-structure-update', [\n            fieldName,\n            oldType.toString(),\n            newType.toString(),\n          ]\n        );\n      }\n    }\n\n    /* Proceed with structure update */\n    frame.pushValue(structure.updateFields(newFields));\n    frame.instructionPointer++;\n  }\n\n  _stepReadTupleComponent() {\n    let frame = this._currentFrame();\n    let instruction = this._currentInstruction();\n    let tuple = frame.stackTop();\n    if (tuple.tag !== V_Tuple) {\n      fail(\n        instruction.startPos, instruction.endPos,\n        'expected-tuple-value-but-got', [tuple.type().toString()]\n      );\n    }\n    if (instruction.index >= tuple.size()) {\n      fail(\n        instruction.startPos, instruction.endPos,\n        'tuple-component-out-of-bounds', [\n          tuple.size(), instruction.index,\n        ]\n      );\n    }\n    frame.pushValue(tuple.components[instruction.index]);\n    frame.instructionPointer++;\n  }\n\n  _stepReadStructureFieldGeneric(shouldPopStructure) {\n    let frame = this._currentFrame();\n    let instruction = this._currentInstruction();\n    let structure;\n    if (shouldPopStructure) {\n      structure = frame.popValue();\n    } else {\n      structure = frame.stackTop();\n    }\n    if (structure.tag !== V_Structure) {\n      fail(\n        instruction.startPos, instruction.endPos,\n        'expected-structure-value-but-got', [structure.type().toString()]\n      );\n    }\n    if (!(instruction.fieldName in structure.fields)) {\n      fail(\n        instruction.startPos, instruction.endPos,\n        'structure-field-not-present', [\n          structure.fieldNames(),\n          instruction.fieldName,\n        ]\n      );\n    }\n    frame.pushValue(structure.fields[instruction.fieldName]);\n    frame.instructionPointer++;\n  }\n\n  _stepReadStructureField() {\n    this._stepReadStructureFieldGeneric(false); /* Do not pop the structure */\n  }\n\n  _stepReadStructureFieldPop() {\n    this._stepReadStructureFieldGeneric(true);  /* Pop the structure */\n  }\n\n  /* Instruction used for testing/debugging */\n  _stepAdd() {\n    let frame = this._currentFrame();\n    let v1 = frame.popValue();\n    let v2 = frame.popValue();\n    frame.pushValue(v1.add(v2));\n    frame.instructionPointer++;\n  }\n\n  _stepDup() {\n    let frame = this._currentFrame();\n    let value = frame.popValue();\n    frame.pushValue(value);\n    frame.pushValue(value);\n    frame.instructionPointer++;\n  }\n\n  _stepPop() {\n    let frame = this._currentFrame();\n    frame.popValue();\n    frame.instructionPointer++;\n  }\n\n  _stepPrimitiveCall() {\n    let frame = this._currentFrame();\n    let instruction = this._currentInstruction();\n\n    /* Pop arguments from stack */\n    let args = [];\n    for (let i = 0; i < instruction.nargs; i++) {\n      args.unshift(frame.popValue());\n    }\n\n    /* Check that the primitive exists */\n    if (!this._primitives.isOperation(instruction.primitiveName)) {\n      fail(\n        instruction.startPos, instruction.endPos,\n        'primitive-does-not-exist', [instruction.primitiveName]\n      );\n    }\n\n    let primitive = this._primitives.getOperation(instruction.primitiveName);\n\n    /* Check that the number of expected parameters coincides with\n     * the actual arguments provided */\n    if (primitive.argumentTypes.length !== instruction.nargs) {\n      fail(instruction.startPos, instruction.endPos,\n        'primitive-arity-mismatch', [\n          instruction.primitiveName,\n          primitive.argumentTypes.length,\n          instruction.nargs,\n        ]\n      );\n    }\n\n    /* Check that the types of all parameters coincide with the types of the\n     * actual arguments */\n    for (let i = 0; i < instruction.nargs; i++) {\n      let expectedType = primitive.argumentTypes[i];\n      let receivedType = args[i].type();\n      if (joinTypes(expectedType, receivedType) === null) {\n        fail(\n          instruction.startPos, instruction.endPos,\n          'primitive-argument-type-mismatch', [\n            instruction.primitiveName,\n            i + 1,\n            expectedType.toString(),\n            receivedType.toString(),\n          ]\n        );\n      }\n    }\n\n    /* Validate the arguments using the primitive-specific validator */\n    primitive.validateArguments(\n      instruction.startPos, instruction.endPos, this.globalState(), args\n    );\n\n    /* Proceed to call the primitive operation */\n    let result = primitive.call(this.globalState(), args); /* mutates 'args' */\n    if (result !== null) {\n      frame.pushValue(result);\n    }\n\n    /* Take a snapshot after calling the primitive operation */\n    this._takeSnapshot(instruction.primitiveName);\n\n    frame.instructionPointer++;\n  }\n\n  _stepSaveState() {\n    let frame = this._currentFrame();\n    this._globalStateStack.push(this.globalState().clone());\n    frame.instructionPointer++;\n  }\n\n  _stepRestoreState() {\n    let frame = this._currentFrame();\n    this._globalStateStack.pop();\n    if (this._globalStateStack.length === 0) {\n      throw Error('RestoreState: the stack of global states is empty.');\n    }\n    frame.instructionPointer++;\n  }\n\n  _stepTypeCheck() {\n    let frame = this._currentFrame();\n    let instruction = this._currentInstruction();\n    let expectedType = instruction.type;\n    let receivedType = frame.stackTop().type();\n    if (joinTypes(expectedType, receivedType) === null) {\n      fail(\n        instruction.startPos, instruction.endPos,\n        'expected-value-of-type-but-got', [\n          expectedType.toString(),\n          receivedType.toString(),\n        ]\n      );\n    }\n    frame.instructionPointer++;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/vm.js","\n/*\n * A board format FMT is a pair of two functions:\n *\n *   fromJboard : jboard -> string\n *   toJboard   : string -> jboard\n *\n * where \"string\" is a string in the given format, and\n * \"jboard\" is the internal format produced/consumed by\n * the RuntimeState class in src/runtime.js.\n *\n * Internal format:\n *   jboard.width  = width of the board\n *   jboard.height = height of the board\n *   jboard.head   = array [x, y] with the position of the head\n *   jboard.board  = array of <width> elements,\n *                   each of which is an array of <height> elements,\n *                   each of which is a cell, of the form\n *                     {\"a\": na, \"n\": nn, \"r\": nr, \"v\": nv}\n *                   in such a way that:\n *                     jboard.board[x][y].a = number of blue  stones at (x, y)\n *                     jboard.board[x][y].n = number of black stones at (x, y)\n *                     jboard.board[x][y].r = number of red   stones at (x, y)\n *                     jboard.board[x][y].v = number of green stones at (x, y)\n */\n\nclass BoardFormat {\n  constructor(formatName, description, extension, fromJboard, toJboard) {\n    this._formatName = formatName;\n    this._description = description;\n    this._extension = extension;\n    this._fromJboard = fromJboard;\n    this._toJboard = toJboard;\n  }\n\n  get formatName() {\n    return this._formatName;\n  }\n\n  get description() {\n    return this._description;\n  }\n\n  get extension() {\n    return this._extension;\n  }\n\n  get fromJboard() {\n    return this._fromJboard;\n  }\n\n  get toJboard() {\n    return this._toJboard;\n  }\n}\n\nexport function apiboardFromJboard(jboard) {\n  let apiboard = {};\n  apiboard.head = {x: jboard.head[0], y: jboard.head[1]};\n  apiboard.width = jboard.width;\n  apiboard.height = jboard.height;\n  apiboard.table = [];\n  for (let y = 0; y < jboard.height; y++) {\n    let row = [];\n    for (let x = 0; x < jboard.width; x++) {\n      let cellO = jboard.board[x][y];\n      let cell = {};\n      if (cellO.a > 0) {\n        cell.blue = cellO.a;\n      }\n      if (cellO.n > 0) {\n        cell.black = cellO.n;\n      }\n      if (cellO.r > 0) {\n        cell.red = cellO.r;\n      }\n      if (cellO.v > 0) {\n        cell.green = cellO.v;\n      }\n      row.push(cell);\n    }\n    apiboard.table.unshift(row);\n  }\n  return apiboard;\n}\n\nexport function apiboardToJboard(apiboard) {\n  let jboard = {};\n  jboard.head = [apiboard.head.x, apiboard.head.y];\n  jboard.width = apiboard.width;\n  jboard.height = apiboard.height;\n  jboard.board = [];\n  for (let x = 0; x < jboard.width; x++) {\n    let column = [];\n    for (let y = 0; y < jboard.height; y++) {\n      let cell = apiboard.table[jboard.height - y - 1][x];\n      let ca = ('blue' in cell) ? cell.blue : 0;\n      let cn = ('black' in cell) ? cell.black : 0;\n      let cr = ('red' in cell) ? cell.red : 0;\n      let cv = ('green' in cell) ? cell.green : 0;\n      column.push({\n        'a': ca,\n        'n': cn,\n        'r': cr,\n        'v': cv,\n      });\n    }\n    jboard.board.push(column);\n  }\n  return jboard;\n}\n\nfunction gsboardFromJboard(jboard) {\n  let gsboard = {};\n  gsboard.x = jboard.head[0];\n  gsboard.y = jboard.head[1];\n  gsboard.sizeX = jboard.width;\n  gsboard.sizeY = jboard.height;\n  gsboard.table = [];\n  for (let y = 0; y < jboard.height; y++) {\n    let row = [];\n    for (let x = 0; x < jboard.width; x++) {\n      let cell = jboard.board[x][y];\n      row.push({\n        'blue': cell.a,\n        'black': cell.n,\n        'red': cell.r,\n        'green': cell.v,\n      });\n    }\n    gsboard.table.unshift(row);\n  }\n  return JSON.stringify(gsboard);\n}\n\nfunction gsboardToJboard(gsBoardString) {\n  let gsboard = JSON.parse(gsBoardString);\n  let jboard = {};\n  jboard.head = [gsboard.x, gsboard.y];\n  jboard.width = gsboard.sizeX;\n  jboard.height = gsboard.sizeY;\n  jboard.board = [];\n  for (let x = 0; x < jboard.width; x++) {\n    let column = [];\n    for (let y = 0; y < jboard.height; y++) {\n      let cell = gsboard.table[jboard.height - y - 1][x];\n      column.push({\n        'a': cell.blue,\n        'n': cell.black,\n        'r': cell.red,\n        'v': cell.green,\n      });\n    }\n    jboard.board.push(column);\n  }\n  return jboard;\n}\n\nexport function gbbFromJboard(jboard) {\n  let gbb = [];\n  gbb.push('GBB/1.0');\n  gbb.push(\n    'size'\n    + ' ' + jboard.width.toString()\n    + ' ' + jboard.height.toString()\n  );\n  for (let y = 0; y < jboard.height; y++) {\n    for (let x = 0; x < jboard.width; x++) {\n      let cell = jboard.board[x][y];\n      if (cell.a + cell.n + cell.r + cell.v === 0) {\n        continue;\n      }\n      let c = 'cell ' + x.toString() + ' ' + y.toString();\n      if (cell.a > 0) {\n        c += ' Azul ' + cell.a.toString();\n      }\n      if (cell.n > 0) {\n        c += ' Negro ' + cell.n.toString();\n      }\n      if (cell.r > 0) {\n        c += ' Rojo ' + cell.r.toString();\n      }\n      if (cell.v > 0) {\n        c += ' Verde ' + cell.v.toString();\n      }\n      gbb.push(c);\n    }\n  }\n  gbb.push(\n    'head'\n    + ' ' + jboard.head[0].toString()\n    + ' ' + jboard.head[1].toString()\n  );\n  return gbb.join('\\n') + '\\n';\n}\n\nexport function gbbToJboard(gbb) {\n  let i = 0;\n  let jboard = {};\n\n  function isWhitespace(x) {\n    return x === ' ' || x === '\\t' || x === '\\r' || x === '\\n';\n  }\n\n  function isNumeric(str) {\n    for (let i = 0; i < str.length; i++) {\n      if ('0123456789'.indexOf(str[i]) === -1) {\n        return false;\n      }\n    }\n    return str.length > 0;\n  }\n\n  function skipWhitespace() {\n    /* Skip whitespace */\n    if (i < gbb.length && isWhitespace(gbb[i])) {\n      i++;\n    }\n  }\n\n  function readToken() {\n    let t = [];\n    skipWhitespace();\n    while (i < gbb.length && !isWhitespace(gbb[i])) {\n      t.push(gbb[i]);\n      i++;\n    }\n    return t.join('');\n  }\n\n  function readN(errmsg) {\n    let t = readToken();\n    if (!isNumeric(t)) {\n      throw Error(errmsg);\n    }\n    t = parseInt(t, 10);\n    if (t < 0) {\n      throw Error(errmsg);\n    }\n    return t;\n  }\n\n  function readRange(a, b, errmsg) {\n    let t = readN(errmsg);\n    if (t < a || t >= b) {\n      throw Error(errmsg);\n    }\n    return t;\n  }\n\n  if (readToken() !== 'GBB/1.0') {\n    throw Error('GBB/1.0: Board not in GBB/1.0 format.');\n  }\n  if (readToken() !== 'size') {\n    throw Error('GBB/1.0: Board lacks a size declaration.');\n  }\n  jboard.width = readN('GBB/1.0: Board width is not a number.');\n  jboard.height = readN('GBB/1.0: Board height is not a number.');\n  if (jboard.width <= 0 || jboard.height <= 0) {\n    throw Error('GBB/1.0: Board size should be positive.');\n  }\n  jboard.head = [0, 0];\n  jboard.board = [];\n  for (let i = 0; i < jboard.width; i++) {\n    let row = [];\n    for (let j = 0; j < jboard.height; j++) {\n      row.push({'a': 0, 'n': 0, 'r': 0, 'v': 0});\n    }\n    jboard.board.push(row);\n  }\n\n  let headDeclared = false;\n  let cellDeclared = {};\n  let colores = {\n    'Azul': 'a',\n    'A': 'a',\n    'Negro': 'n',\n    'N': 'n',\n    'Rojo': 'r',\n    'R': 'r',\n    'Verde': 'v',\n    'V': 'v',\n  };\n\n  while (i < gbb.length) {\n    let op = readToken();\n    if (op === '') {\n      break;\n    } else if (op === 'head') {\n      if (headDeclared) {\n        throw Error('GBB/1.0: Head position cannot be declared twice.');\n      }\n      headDeclared = true;\n      let hx = readRange(0, jboard.width, 'GBB/1.0: Invalid head position.');\n      let hy = readRange(0, jboard.height, 'GBB/1.0: Invalid head position.');\n      jboard.head = [hx, hy];\n    } else if (op === 'cell') {\n      let cx = readRange(0, jboard.width, 'GBB/1.0: Invalid cell position.');\n      let cy = readRange(0, jboard.height, 'GBB/1.0: Invalid cell position.');\n      if ([cx, cy] in cellDeclared) {\n        throw Error('GBB/1.0: Cell cannot be declared twice.');\n      }\n      cellDeclared[[cx, cy]] = true;\n\n      let colorDeclared = {};\n      while (i < gbb.length) {\n        let color = readToken();\n        if (!(color in colores)) {\n          i -= color.length;\n          break;\n        }\n        let colorId = colores[color];\n        if (colorId in colorDeclared) {\n          throw Error('GBB/1.0: Color cannot be declared twice.');\n        }\n        let n = readN('GBB/1.0: Invalid amount of stones.');\n        jboard.board[cx][cy][colorId] = n;\n      }\n    } else {\n      throw Error('GBB/1.0: Malformed board: unknown command \"' + op + '\".');\n    }\n  }\n  return jboard;\n}\n\nlet BOARD_FORMAT_LIST = [\n\n  new BoardFormat(\n    'jboard',\n    'Representation of a board as a JavaScript object for internal usage.',\n    'jboard',\n    JSON.stringify,\n    JSON.parse\n  ),\n\n  new BoardFormat(\n    'gs-weblang-cli-json-board',\n    'Representation of a board as a Javascript object' +\n    ' used by the gs-weblang-cli tool.',\n    'json',\n    gsboardFromJboard,\n    gsboardToJboard\n  ),\n\n  new BoardFormat(\n    'gbb',\n    'GBB/1.0',\n    'gbb',\n    gbbFromJboard,\n    gbbToJboard,\n  ),\n\n];\n\nexport let DEFAULT_FORMAT = 'gs-weblang-cli-json-board';\nexport let BOARD_FORMATS = {};\nfor (let boardFormat of BOARD_FORMAT_LIST) {\n  BOARD_FORMATS[boardFormat.formatName] = boardFormat;\n}\n\nfunction fileExtension(filename) {\n  let parts = filename.split('.');\n  return parts[parts.length - 1];\n}\n\nfunction fileBoardFormat(filename) {\n  let extension = fileExtension(filename);\n  for (let fmt of BOARD_FORMAT_LIST) {\n    if (extension === fmt.extension) {\n      return fmt;\n    }\n  }\n  return BOARD_FORMATS[DEFAULT_FORMAT];\n}\n\nconst fs = require('fs');\n\nexport function readJboardFromFile(filename) {\n  let format = fileBoardFormat(filename);\n  let contents = fs.readFileSync(filename, 'utf8');\n  return format.toJboard(contents);\n}\n\nexport function writeJboardToFile(filename, jboard) {\n  let format = fileBoardFormat(filename);\n  let contents = format.fromJboard(jboard);\n  fs.writeFileSync(filename, contents, 'utf8');\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/board_formats.js","module.exports = require(\"fs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs\"\n// module id = 18\n// module chunks = 0"],"sourceRoot":""}